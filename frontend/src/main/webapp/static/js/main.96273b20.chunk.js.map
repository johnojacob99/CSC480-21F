{"version":3,"sources":["features/userSlice.js","routing/PrivateRoute.js","routing/PublicRoute.js","images/multi_background_login.jpg","images/logo.png","styles/Style.js","styles/NavBarStyle.js","styles/ContainerStyle.js","components/CustomizedContainer.js","components/NavBar/NavBarLogin.js","styles/CardStyle.js","components/CustomizedCard.js","components/CustomizedBody.js","axios/APIRequests.js","components/CustomizedSwitch.js","styles/ButtonStyle.js","components/CustomizedTextField.js","components/CustomizedRadios.js","components/CustomizedButtons.js","pages/Login/LoginPage.js","images/multi_background_dashboard.jpg","images/professor_logo.png","images/student_logo.png","components/NavBar/NavBar.js","styles/DividerStyle.js","components/CustomizedDivider.js","styles/LoadingStyle.js","components/Loading.js","pages/Professor/ProfessorHomeDashboard.js","components/PDFhandling/PDFReader.js","pages/TestingPage.js","styles/TabStyle.js","components/CustomizedTabs.js","components/CustomizedModal.js","pages/Professor/ProfessorCoursePage.js","components/CustomizedCSVUploader.js","pages/Professor/AddCoursePage.js","pages/Professor/AssignmentViewer.js","components/CustomizedPdfUploader.js","pages/Professor/AssignmentCreation.js","pages/Professor/StudentInfoViewPage.js","components/SuccessfulNotification.js","pages/Professor/CourseResultPage.js","components/CustomizedTables.js","components/CSVUploader.js","pages/Professor/ResultsViewerPage.js","utils/byteArrayToPDF.js","pages/Professor/StudentSolutionQualityCheckPage.js","pages/Professor/StudentPeerReviewQualityCheckPage.js","pages/Student/StudentHomeDashboard.js","pages/Student/SeeAllAssignmentPage.js","pages/Student/StudentTeamsPage.js","pages/Student/NewSolutionAssignmentView.js","pages/Student/PeerReviewAssignmentView.js","pages/Student/StudentPeerReviewResultsDisplay.js","pages/Student/StudentResultPage.js","pages/Professor/AssignmentDisplay.js","pages/Professor/AssignmentEdit.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","authLoading","isAuthenticated","user","userName","reducers","setUser","state","action","payload","setUserName","actions","selectUser","userReducer","selectUserName","reducer","PrivateRoute","Component","component","roleAccess","children","getUser","useSelector","console","log","role","render","props","to","PublicRoute","primaryColor","whiteColor","grayColor","darkColor","blueColor","greenColor","NavBarStyle","makeStyles","theme","root","flexGrow","appBar","display","flexDirection","border","borderRadius","marginBottom","color","width","height","backgroundColor","transition","alignItems","flexFlow","justifyContent","position","zIndex","logo","cursor","userSelect","link","ContainerStyle","containerFluid","paddingRight","paddingLeft","marginRight","marginLeft","container","maxWidth","CustomizedContainer","React","forwardRef","ref","model","fullwidth","type1","type2","type3","rest","classes","containerClasses","classNames","Container","className","NavBar","history","nav","AppBar","style","Grid","rowSpacing","sx","item","xs","src","CardStyle","overflow","p","CustomizedCard","cardClasses","Card","variant","CustomizedBody","bg","backgroundImage","backgroundSize","paddingTop","paddingBottom","minHeight","url","PROFESSOR_PORT","STUDENT_PORT","LOGIN_PORT","ULTILITY_PORT","convertToJson_AddToken","data","json","token","localStorage","getItem","undefined","JSON","stringify","getAssignmentsByProfessor","a","userID","axios","post","response","error","getSpecificAssignment","assignmentID","deleteCourseByProfessor","courseID","getTeamsByProfessor","getQualityCheckSolutionByProfessor","getQualityCheckPeerReviewByProfesssor","sendReviewByProfessor","sendFeedBackByProfessor","postNewStudentByProfessor","postNewAssignmentByProfessor","editAssignmentByProfessor","deleteAssignmentByProfessor","assID","postNewCourseByProfessor","deleteStudentByProfessor","stuID","rejectSolutionByProfessor","teamID","rejectPeerReviewByProfessor","teamId","solutionId","solutionSubmissionName","getResultsByStudent","getPeerReviewResulttByStudent","getAssignmenstByStudent","getSubmissionsToReviewByStudent","getTeamIdByStudentAndCourse","postNewSolutionByStudent","postNewPeerReviewByStudent","getTeamsByStudent","loginAuth","tokenId","Root","styled","switchUnstyledClasses","disabled","track","thumb","focusVisible","checked","input","UnstyledSwitches","setViewType","setChecked","SwitchUnstyled","componentsProps","onChange","event","target","ButtonStyle","minWidth","textTransform","fontWeight","padding","textAlign","displayNone","height1","height2","height3","type4","CustomizedTextField","text","value","handleTextFieldChange","comments","isDisabled","number","defaultValue","handleTextField","preventDefault","Box","TextField","bgcolor","label","id","size","type","InputProps","inputProps","min","max","multiline","maxRows","CustomizedRadios","filterType","setFilterType","FormControl","RadioGroup","FormControlLabel","control","Radio","CustomizedButtons","requestFilter","btnClasses","Button","CLIENT_ID","LoginPage","dispatch","useDispatch","responseGoogle","profileObj","signIn","then","push","catch","NavBarLogin","margin","Typography","CardHeader","title","CardContent","Stack","spacing","onClick","test","clientId","buttonText","onSuccess","onFailure","cookiePolicy","getUserName","useState","dropdown","setDropdown","textDecoration","professorLogo","direction","studentLogo","endIcon","Collapse","in","timeout","unmountOnExit","top","sessionStorage","clear","DividerStyle","CustomizedDivider","dividerClasses","Divider","LoadingStyle","box","loading","Loading","CircularProgress","CourseBar","course","sectionNumber","semester","assignments","length","List","dense","flex","map","assignment","isSolutionCompleted","ListItem","button","ListItemText","primary","Date","solutionDueDateTime","toLocaleDateString","isPeerReviewCompleted","peerReviewDueDateTime","ProfessorHomeDashBoard","setLoading","courses","setCourses","useEffect","key","err","Breadcrumbs","mb","ml","ListItemIcon","fontSize","secondaryAction","reviewStage","divider","IconButton","edge","toLocaleString","code","pdfjs","GlobalWorkerOptions","workerSrc","version","Testing","settext","TabStyle","StyledTabs","Tabs","TabIndicatorProps","StyledTab","Tab","disableRipple","typography","fontWeightRegular","pxToRem","CustomizedTabs","fullWidth","labels","setTab","tab","tabClasses","newValue","modalStyle","left","transform","boxShadow","TransitionsModal","modalType","isCourseModalOpened","handleCloseCourseModal","isStudentModalOpened","handleCloseStudentModal","isAssignmentModalOpened","handleCloseAssignmentModal","handleDeleteStudent","handleDeleteCourse","handleDeleteAssignment","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","TabPanel","index","other","hidden","ProfessorCourse","setError","courseNames","setCourseNames","setIsAssignmentModalOpened","deletedAssignmentID","setDeletedAssignmentID","handleGetAssignmentByProfessor","nameLists","fixed","draft","secondary","CustomizedCSVUploader","setCSVFile","multipleCSV","inputStyleClasses","uploadBtnClasses","setPdfFileError","fileName","setFileName","fileType","handlePdfFileChange","e","arrayPdfFiles","files","i","selectedFile","includes","reader","FileReader","readAsText","onloadend","lines","result","toString","split","headers","obj","currentline","j","accept","class","multiple","for","AddCoursePage1","setTitle","submissionType","setSubmissionType","isTeamed","setIsTeamed","numberOfTeam","setNumberOfTeam","csvFile","setIsDisabled","InputLabel","Select","labelId","Array","from","keys","MenuItem","marginTop","alert","newCourse","AssignmentViewer","location","scale","numPages","setNumPages","pageNumber","setPageNumber","isFirstPage","isLastPage","setIsLoading","solutionPdf","solutionPdfDoc","peerReviewPdf","peerReviewPdfDoc","onDocumentLoadSuccess","goToPreviousPage","goToNextPage","toDateString","file","onLoadSuccess","CustomizedPdfUploader","pdfFileName","setPdfFileName","setPdfFile","multiplePdf","readAsArrayBuffer","byteArray","Int8Array","Number","AssignmentCreation","newAssignment","setNewAssignment","solutionPdfFile","setSolutionPdfFile","peerReviewPdfFile","setPeerReviewPdfFile","solutionDueDate","setSolutionDueDate","prDueDate","setPRDueDate","solutionPdfFileName","setSolutionPdfFileName","peerReviewPdfFileName","setPeerReviewPdfFileName","ErrorMessage","setDisablePublishBtn","settings","toJSON","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","renderInput","margintop","tempAss","AddStudentBox","handleAddStudent","firstName","lastName","sID","email","setFirstName","setLastName","setSID","setEmail","handleCloseAddStudentBox","StudentInfoViewPage","viewType","isOpenedAddStudentBox","setIsOpenedAddStudentBox","setIsCourseModalOpened","setIsStudentModalOpened","deletedStudentID","setDeletedStudentID","handleOpenAddStudentBox","handleOpenStudentModal","teamKeys","setTeamKeys","handleGetTeamsByProfessor","courseNameLists","handleClick","newStudent","studentID","student","students","teams","team","teamName","disablePadding","pl","deletedCourseID","SuccessfulNotification","CourseResultPage","StickyHeadTable","jsonData","arrayData","setarrayData","row","align","format","columns","concat","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","column","indexCol","bgColor","TableCell","TableBody","indexRow","hover","tabIndex","CSVReader2","setjsonData","onDrop","combinedData","object","onError","inputElem","reason","addRemoveButton","onRemoveFile","dropArea","borderColor","dropAreaActive","dropFile","background","fileSizeInfo","lineHeight","fileNameInfo","removeButton","progressBar","ResultsViewerPage","CSVUploader","slice","handleConvertByteArrayToPdf","byteArr","trim","replace","contentType","byteCharacters","atob","byteArrays","offset","byteNumbers","charCodeAt","Uint8Array","blob","Blob","b64toBlob","URL","createObjectURL","openNewTab","arrayBuffer","chunk","base64","encodings","bytes","byteLength","byteRemainder","mainLength","base64ArrayBuffer","parse","StudentSolutionQualityCheckPage","openErrors","setOpenErrors","submissionPdfFile","setSubmissionPdfFile","setAssignment","linkDownload","setLinkDownload","submittedTeam","setSubmittedTeam","totalTeam","setTotalTeam","handleGetQualityCheckSolutionByProfessor","filter","submission","pdfDoc","mt","submissionTime","href","download","listOfQCWordViolations","word","newSubmission","seen","handleReupload","orientation","scrollButtons","allowScrollButtonsMobile","StudentPeerReviewQualityCheckPage","teamTab","setTeamTab","submissionTab","setSubmissionTab","handleChangeSubmissionTab","peerReview","handleExpand","outlier","averageScore","Math","round","review","score","peerreview","key2","solutionTeamName","StudentHomeDashBoard","assignmentCourses","setAssignmentCourses","resultCourses","setResultCourses","SeeAllAssignmentPage","StudentTeamsPage","NewSolutionAssignmentView","setTeamId","PeerReviewAssignmentView","setScore","peerReviewInfo","setPeerReviewInfo","submissionPdfFileName","setSubmissionPdfFileName","submissionArray","setSubmissionArray","submissionLinkDownload","setSubmissionLinkDownload","handleChangeScore","subArray","mr","newSubArray","submissionID","StudentPeerReviewResultsDisplay","peerReviewResult","setPeerReviewResult","_","demoData","date","deadline","StudentResultPage","setItems","filteredItems","AssignmentDisplay","setSolutionPdf","setPeerReviewPdf","publishDateTime","s","AssignmentEdit","setSolutionPdfDoc","setPeerReviewPdfDoc","App","isMobile","exact","path","ProfessorHomeDashboard","TestingPage","ProfessorCoursePage","AddCoursePage","StudentHomeDashboard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","storage","storageSession","whitelist","combineReducers","persistReducer_","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","StrictMode","StyledEngineProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.96273b20.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    authLoading : true,\n    isAuthenticated : false,\n    user: [],\n    userName: \"\"\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.authLoading = false\n      state.isAuthenticated = true\n      state.user = action.payload;\n    },\n    setUserName: (state, action) => {\n      state.userName = action.payload;\n    },\n  },\n});\n\nexport const { setUser,setUserName  } = userSlice.actions;\nexport const selectUser = (state) => state.userReducer;\nexport const selectUserName = (state) => state.userReducer.userName;\nconst userReducer = userSlice.reducer;\nexport default userReducer;","import { BrowserRouter as Router, Route,Redirect, Switch } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nfunction PrivateRoute({ component: Component, roleAccess, ...children }) {\n\n  const getUser = useSelector(selectUser)\n  const {user, isAuthenticated} = getUser\n  console.log(isAuthenticated)\n\n    if (isAuthenticated === true) {\n      if(roleAccess === user.role){\n        return <Route {...children} render={props => <Component {...props} />} />;\n      }\n      else{\n        if(user.role === \"professor\"){\n          return <Redirect to=\"professorhome\" />;\n        }\n        else{\n          return <Redirect to=\"studenthome\" />;\n        }\n      }\n      \n    }\n\n    return <Redirect to=\"login\" />;\n  }\n  \nexport default PrivateRoute;","import { BrowserRouter as Router, Route,Redirect, Switch } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nfunction PublicRoute({ component: Component, roleAccess, ...children }) {\n\n  const getUser = useSelector(selectUser)\n  const {user, isAuthenticated} = getUser\n  console.log(isAuthenticated)\n\n    console.log(isAuthenticated)\n    if (isAuthenticated === true) {\n      if(roleAccess === \"professor\" ){\n        return <Redirect to=\"professorhome\" />;\n      } else {\n        return <Redirect to=\"studenthome\" />;\n      }\n    }\n    return <Redirect to=\"login\" />;\n  }\n  \nexport default PublicRoute;","export default __webpack_public_path__ + \"static/media/multi_background_login.229d13b8.jpg\";","export default __webpack_public_path__ + \"static/media/logo.5b41ddf4.png\";","const primaryColor = \"#CFE1FF\"\nconst whiteColor = \"#FFFFFF\"\nconst grayColor = \"#E5E5E5\"\nconst darkColor = \"#000000\"\nconst blueColor = \"#347DEB\"\nconst greenColor = \"#0DC38D\"\nconst purpleColor = \"#6F40DC\"\nconst boxShadow = {\n    boxShadow:\n      \"0 10px 30px -12px rgba(0, 0, 0, 0.42), 0 4px 25px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\",\n  };\n\nconst defaultBoxShadow = {\n    border: \"0\",\n    borderRadius: \"3px\",\n    boxShadow:\n      \"0 10px 20px -12px rgba(0, 0, 0, 0.42), 0 3px 20px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\",\n    padding: \"10px 0\",\n    transition: \"all 150ms ease 0s\",\n  };\n  const containerFluid = {\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    width: \"100%\",\n  };\nexport {\n    containerFluid,\n    primaryColor,\n    whiteColor,\n    grayColor,\n    darkColor,\n    blueColor,\n    greenColor,\n    purpleColor,\n    boxShadow,\n    defaultBoxShadow\n}","import { makeStyles } from \"@mui/styles\";\nimport { secondaryColor, primaryColor, fontColor, grayColor, blueColor } from \"./Style\";\nconst NavBarStyle = makeStyles((theme) => ({\n  root: {\n    flexGrow: \"1\"\n  },\n  appBar: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    border: \"0\",\n    borderRadius: \"3px\",\n    marginBottom: \"20px\",\n    color: \"#f11111\",\n    width: \"100%\",\n    height: \"80px\",\n    backgroundColor: \"red\",\n    // boxShadow:\n    //   \"0 4px 18px 0px rgba(0, 0, 0, 0.12), 0 7px 10px -5px rgba(0, 0, 0, 0.15)\",\n    transition: \"all 150ms ease 0s\",\n    alignItems: \"center\",\n    flexFlow: \"collumn nowrap\",\n    justifyContent: \"start\",\n    position: \"fixed\",\n    zIndex: \"2\",\n  },\n  logo: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n    width: \"7em\",\n  },\n  link: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    '&:hover': {\n      color: blueColor,\n  },\n  },\n}));\n\nexport default NavBarStyle;","import { makeStyles } from \"@mui/styles\";\nimport { secondaryColor, primaryColor, darkColor } from \"./Style\";\nconst ContainerStyle = makeStyles((theme) => ({\n  containerFluid: {\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    width: \"100%\",\n  },\n\n  container: {\n    \"@media (min-width: 576px)\": {\n      maxWidth: \"540px\",\n    },\n    \"@media (min-width: 768px)\": {\n      maxWidth: \"720px\",\n    },\n    \"@media (min-width: 992px)\": {\n      maxWidth: \"960px\",\n    },\n    \"@media (min-width: 1200px)\": {\n      maxWidth: \"1100px\",\n    },\n  },\n}));\n\nexport default ContainerStyle;\n","import React from \"react\";\n\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n// core components\nimport ContainerStyle from \"../styles/ContainerStyle\";\nimport { Container } from \"@mui/material\";\n\nconst CustomizedContainer = React.forwardRef((props, ref) => {\n  const {\n    model,\n    fullwidth,\n    type1,\n    type2,\n    type3,\n    children,\n    ...rest\n  } = props;\n\n  // Styles\n  const classes = ContainerStyle();\n  //const classes = makeComponentStyles();\n  const containerClasses = classNames({\n    [classes.container]: true,\n    [classes.containerFluid]: true\n  });\n\n  return (\n    <Container {...rest} ref={ref} className={containerClasses}>\n      {children}\n    </Container>\n  )\n});\nCustomizedContainer.propTypes = {\n  container: PropTypes.bool,\n  containerFluid: PropTypes.bool,\n};\nexport default CustomizedContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// @mui components\nimport { makeStyles } from \"@mui/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Badge from \"@mui/material/Badge\";\nimport { styled } from \"@mui/material/styles\";\nimport logo from \"../../images/logo.png\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\n// styled components\nimport NavBarStyle from \"../../styles/NavBarStyle\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser, setUser } from \"../../features/userSlice\";\nimport { whiteColor, darkColor } from \"../../styles/Style\";\nimport CustomizedContainer from \"../CustomizedContainer\";\nimport { Grid, Stack, Button, Menu, MenuItem, Collapse } from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nfunction NavBar({ history }) {\n\n  const nav = NavBarStyle();\n\n  return (\n    <div className={nav.root}>\n      <AppBar\n        style={{\n          backgroundColor: whiteColor,\n          color: darkColor,\n          flexDirection: \"row\",\n        }}\n        className={nav.appBar}\n      >\n        <CustomizedContainer>\n          <Grid\n            container\n            rowSpacing={2}\n            sx={{ display: \"flex\", alignItems: \"center\" }}\n          >\n            <Grid item xs={2}>\n                <img className={nav.logo} src={`${logo}`} />\n\n            </Grid>\n          </Grid>\n        </CustomizedContainer>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import { makeStyles } from \"@mui/styles\";\nimport { secondaryColor, primaryColor, darkColor } from \"./Style\";\nconst CardStyle = makeStyles((theme) => ({\n  root: {\n    overflow: \"hidden\",\n    p: 1,\n    border: \"3px solid #cfe1ff\",\n    borderRadius: \"10px\",\n  },\n}));\n\nexport default CardStyle;","import React from \"react\";\n\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n// core components\nimport CardStyle from \"../styles/CardStyle\";\nimport { Card } from \"@mui/material\";\n\nconst CustomizedCard = React.forwardRef((props, ref) => {\n  const {\n    model,\n    fullwidth,\n    type1,\n    type2,\n    type3,\n    children,\n    ...rest\n  } = props;\n\n  // Styles\n  const classes = CardStyle();\n  //const classes = makeComponentStyles();\n  const cardClasses = classNames({\n    [classes.root]: true,\n  });\n\n  return (\n    <Card {...rest} ref={ref} variant=\"outlined\" className={cardClasses}>\n      {children}\n    </Card>\n  )\n});\nCustomizedCard.propTypes = {\n  root: PropTypes.bool,\n};\nexport default CustomizedCard;\n","import React from \"react\";\nconst CustomizedBody = React.forwardRef((props, ref) => {\n  const {\n    bg,\n    children,\n    ...rest\n  } = props\n\n  return (\n    <div {...rest} ref={ref} style={{\n        backgroundImage: `url(${bg})`,\n        backgroundSize: \"cover\",\n        paddingTop: \"120px\",\n        paddingBottom: \"50px\",\n        minHeight: \"80vh\"\n      }}>\n      {children}\n    </div>\n  );\n});\nexport default CustomizedBody;\n","import axios from \"axios\";\nimport https from \"https\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\n\nconst url = \"http://192.168.1.106\"//\"http://192.168.0.71\"\n\nconst PROFESSOR_PORT = \"5682\"//\"5682\"\n\nconst STUDENT_PORT = \"5683\"//\"5683\"\n\nconst LOGIN_PORT = \"5681\"//\"5681\"\n\nconst ULTILITY_PORT = \"5680\"//\"5680\"\n\n\nexport const testingHttps = async () => {\n  try {\n    const agent = new https.Agent({  \n      rejectUnauthorized: false\n     });\n     process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';\n    const response = await axios.post(`${url}:${LOGIN_PORT}/api/user/test`,{}, {\n      httpsAgent: agent,\n      headers: {\n        jwt: 'Bearer '  //the token is a variable which holds the token\n      }\n     });\n    console.log(response)\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nconst convertToJson_AddToken = (data) => {\n\n  const token = localStorage.getItem('token');\n\n  let json\n  \n  if (data !== undefined) {\n    json = {\n      data: data,\n      token: token,\n    };\n  }\n  else {\n\n    json = {\n      data : 'abv',\n      token: token\n    };\n  }\n\n  return JSON.stringify(json);\n}\n\nexport const getAssignmentsByProfessor = async () => {\n  try {\n    const json = convertToJson_AddToken()\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/${userID}/course/assignment`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n//Professor\nexport const getSpecificAssignment = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment/${assignmentID}`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const deleteCourseByProfessor = async (courseID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/course/delete/${courseID}`, json);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getTeamsByProfessor = async () => {\n    try {\n      const json = convertToJson_AddToken()\n      const userID = localStorage.getItem('userID');\n      const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/${userID}/course/team`,json);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n}\nexport const getQualityCheckSolutionByProfessor = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assignmentID}/solution/qualityCheck`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getQualityCheckPeerReviewByProfesssor = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assignmentID}/peerreview/qualityCheck`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const sendReviewByProfessor = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assignmentID}/assignReview`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const sendFeedBackByProfessor = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment/setResultStage/${assignmentID}`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport const postNewStudentByProfessor = async (data) => {\n    try {\n      const json = convertToJson_AddToken(data)\n      const response = await axios.post(`${url}:${STUDENT_PORT}/api/student`, json);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n}\nexport const postNewAssignmentByProfessor = async (data) => {\n  try {\n    const json = convertToJson_AddToken(data)\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n} \nexport const editAssignmentByProfessor = async (data) => {\n  try {\n    const json = convertToJson_AddToken(data)\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment/update`,json);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const deleteAssignmentByProfessor = async (assID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment/delete/${assID}`, json);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const postNewCourseByProfessor = async (data) => {\n  try {\n    const json = convertToJson_AddToken(data)\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/parse`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const deleteStudentByProfessor = async (stuID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/delete/${stuID}`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport const rejectSolutionByProfessor = async (assID,teamID) => {\n  try {\n    console.log(assID);\n    console.log(teamID);\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assID}/team/${teamID}/reject/solution`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const rejectPeerReviewByProfessor = async (assID,teamId, solutionId, solutionSubmissionName) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assID}/team/${teamId}/reject/review/${solutionId}/solutionSubmissionName/${solutionSubmissionName}`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n//Student\nexport const getResultsByStudent = async () => {\n  try {\n    const json = convertToJson_AddToken()\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/course/assignment/result/student`,json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getPeerReviewResulttByStudent = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/assignment/${assignmentID}/result/student`,json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getAssignmenstByStudent = async () => {\n    try {\n      \n      const json = convertToJson_AddToken()\n      const userID = localStorage.getItem('userID');\n      console.log(userID)\n      const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/course/assignment/student`,json);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n}\nexport const getSubmissionsToReviewByStudent = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/assignment/${assignmentID}/reviews`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getTeamIdByStudentAndCourse = async (courseID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/course/${courseID}/teamId`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const postNewSolutionByStudent = async (data) => {\n  try {\n    const json = convertToJson_AddToken(data)\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/solution`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const postNewPeerReviewByStudent = async (data) => {\n  try {\n    const json = convertToJson_AddToken(data)\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/review`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getTeamsByStudent = async () => {\n  try {\n    const json = convertToJson_AddToken()\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/course/team/student`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const loginAuth = async (tokenId) => {\n  console.log(tokenId)\n  try {\n    const response = await axios.post(`${url}:${LOGIN_PORT}/api/login`, tokenId);\n    console.log(response)\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n\n","import * as React from \"react\";\nimport { styled } from \"@mui/system\";\nimport SwitchUnstyled, {\n  switchUnstyledClasses,\n} from \"@mui/core/SwitchUnstyled\";\n\nconst Root = styled(\"span\")(`\n  font-size: 0;\n  position: relative;\n  display: inline-block;\n  width: 32px;\n  height: 20px;\n  \n  margin: 10px;\n  cursor: pointer;\n\n  &.${switchUnstyledClasses.disabled} {\n    opacity: 0.4;\n    cursor: not-allowed;\n  }\n\n  & .${switchUnstyledClasses.track} {\n    background: #B3C3D3;\n    border-radius: 10px;\n    display: block;\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n  & .${switchUnstyledClasses.thumb} {\n    display: block;\n    width: 14px;\n    height: 14px;\n    top: 3px;\n    left: 3px;\n    border-radius: 16px;\n    background-color: #FFF;\n    position: relative;\n    transition: all 200ms ease;\n  }\n\n  &.${switchUnstyledClasses.focusVisible} .${switchUnstyledClasses.thumb} {\n    background-color: rgba(255,255,255,1);\n    box-shadow: 0 0 1px 8px rgba(0,0,0,0.25);\n  }\n\n  &.${switchUnstyledClasses.checked} { \n    .${switchUnstyledClasses.thumb} {\n      left: 14px;\n      top: 3px;\n      background-color: #FFF;\n    }\n\n    .${switchUnstyledClasses.track} {\n      background: #007FFF;\n    }\n  }\n\n  & .${switchUnstyledClasses.input} {\n    cursor: inherit;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    opacity: 0;\n    z-index: 1;\n    margin: 0;\n  }`);\n\nexport default function UnstyledSwitches({ setViewType }) {\n  const label = { componentsProps: { input: { \"aria-label\": \"Demo switch\" } } };\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n    if(!checked){\n      setViewType(\"Team List\")\n    }else{\n      setViewType(\"Student List\")\n    }}\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <SwitchUnstyled\n        component={Root}\n        {...label}\n        checked={checked}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n","import { makeStyles } from '@mui/styles';\nimport { primaryColor, darkColor, whiteColor, grayColor } from \"./Style\";\nconst ButtonStyle = makeStyles((theme) => ({\n  root: {\n    minHeight: \"auto\",\n    minWidth: \"auto\",\n    borderRadius: \"50px\",\n    textTransform: \"unset\",\n    fontWeight: \"600\",\n    padding: \"5px 15px\",\n    height: \"42px\",\n    display: \"flex\",\n    textAlign: \"center\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    cursor: \"pointer\"\n  },\n  displayNone:{\n    display : \"none\",\n  },\n  fullwidth: {\n    width: \"100%\"\n  },\n  height1: {\n    height: \"33px\",\n  },\n  height2: {\n    height: \"42px\",\n  },\n  height3: {\n    height: \"26px\",\n  },\n  type1: {\n    backgroundColor: darkColor,\n\n    color: whiteColor,\n    border: \"1px solid #000000\",\n    \"&:hover, &.Mui-focusVisible\": { backgroundColor: \"#222\" }\n  },\n  type2: {\n    backgroundColor: \"transparent\",\n    color: darkColor,\n    border: \"1px solid #000000\"\n  },\n  type3: {\n    backgroundColor: grayColor,\n    color: darkColor,\n  },\n  type4: {\n    backgroundColor: \"transparent\",\n    color: darkColor,\n  },\n}));\n\nexport default ButtonStyle;","import React from \"react\";\n\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n// @material-ui/core components\nimport { Box, TextField } from \"@mui/material\";\n// core components\nimport ButtonStyle from \"../styles/ButtonStyle\";\n\nconst CustomizedTextField = React.forwardRef((props, ref) => {\n  const {\n    text,\n    value,\n    handleTextFieldChange,\n    comments,\n    isDisabled,\n    number,\n    children,\n    ...rest\n  } = props;\n  var defaultValue = \"\";\n  if (value) {\n    defaultValue = value;\n  }\n\n  // ===== Handle Comments ============\n  const handleTextField = (event) => {\n    event.preventDefault();\n    handleTextFieldChange(event.target.value);\n  };\n\n  // Styles\n  const classes = ButtonStyle();\n  //const classes = makeComponentStyles();\n\n  return (\n    <Box>\n      <>\n        {\" \"}\n        {number ? (\n          <TextField\n            disabled={isDisabled}\n            sx={{ bgcolor: \"#fff\", width: \"100px\" }}\n            label={children}\n            id=\"outlined-size-small\"\n            size=\"small\"\n            type=\"number\"\n            InputProps={{ inputProps: { min: 0, max: 10 } }}\n            onChange={handleTextField}\n          />\n\n\n        ) : (\n          <>\n            {comments ? (\n              <TextField\n                sx={{ bgcolor: \"#fff\" }}\n                label={children}\n                id=\"outlined-size-small\"\n                size=\"small\"\n                multiline\n                maxRows={4}\n                onChange={handleTextField}\n              />\n            ) : (\n              <TextField\n                sx={{ bgcolor: \"#fff\" }}\n                label={children}\n                id=\"outlined-size-small\"\n                size=\"small\"\n                value={defaultValue}\n                onChange={handleTextField}\n              />\n            )}\n          </>\n        )}\n      </>\n    </Box>\n  );\n});\nCustomizedTextField.propTypes = {};\nexport default CustomizedTextField;\n","import React, {useState} from 'react';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup, { useRadioGroup } from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { secondaryColor, primaryColor, darkColor, blueColor, greenColor, purpleColor } from \"../styles/Style\";\nimport { styled } from '@mui/material/styles';\nimport CustomizedTextField from './CustomizedTextField';\n\n\nexport default function CustomizedRadios({type, filterType, setFilterType}) {\n  const handleChange = (event) => {\n    setFilterType(event.target.value);\n    console.log(event.target.value)\n   \n  };\n  return (\n    <FormControl component=\"fieldset\">\n      <RadioGroup\n        aria-label=\"gender\"\n        name=\"controlled-radio-buttons-group\"\n        value={filterType}\n        onChange={handleChange}\n        sx={{display: \"flex\", flexDirection: \"row\"}}\n      >\n      {type === \"radio1\" ? (<>\n        <FormControlLabel value=\"Draft\" control={<Radio />} label=\"Draft\" />\n        <FormControlLabel value=\"Active\" control={<Radio />} label=\"Active\" />\n        <FormControlLabel value=\"All\" control={<Radio />} label=\"All\" /></>) : <>\n        {type === \"radio2\" ? (<>\n          <FormControlLabel value=\"Needs Review\" control={<Radio />} label=\"Needs Review\" />\n        <FormControlLabel value=\"Completed\" control={<Radio />} label=\"Completed\" />\n        <FormControlLabel value=\"All\" control={<Radio />} label=\"All\" /></>) : <>\n        {type === \"radio3\" ? (<>\n        <FormControlLabel value=\"Upcoming\" control={<Radio />} label=\"Upcoming\" />\n        <FormControlLabel value=\"Completed\" control={<Radio />} label=\"Completed\" />\n        <FormControlLabel value=\"All\" control={<Radio />} label=\"All\" /></>) : <>\n        {type === \"radio4\" ? (<>\n        <FormControlLabel value=\"Independent\" control={<Radio />} label=\"Independent\" />\n        <FormControlLabel value=\"Randomized Teams\" control={<Radio />} label=\"Randomized Teams\" />\n        </>) : <>\n        \n      </>}\n      </>}\n      </>}\n      </>}\n      </RadioGroup>\n    </FormControl>\n  );\n}","import React from \"react\";\n\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n// @material-ui/core components\nimport { IoDownloadOutline} from \"react-icons/io5\";\nimport Button from \"@mui/material/Button\";\nimport {IoIosAddCircleOutline, IoIosArrowDropdown} from \"react-icons/io\";\nimport {BsArrowRightCircle, BsArrowLeftCircle} from \"react-icons/bs\";\nimport {BiCheckCircle} from 'react-icons/bi'\nimport CustomizedSwitch from \"../components/CustomizedSwitch\"\nimport CustomizedRadios from \"../components/CustomizedRadios\"\n// core components\nimport ButtonStyle from \"../styles/ButtonStyle\";\nimport { MdOutlineCancel } from \"react-icons/md\";\n\nconst CustomizedButtons = React.forwardRef((props, ref) => {\n  const {\n    model,\n    fullwidth,\n    type1,\n    type2,\n    type3,\n    type4,\n    height1,\n    height2,\n    children,\n    setViewType,\n    filterType,\n    setFilterType,\n    requestFilter,\n    ...rest\n  } = props;\n\n  // Styles\n  const classes = ButtonStyle();\n  //const classes = makeComponentStyles();\n  const btnClasses = classNames({\n    [classes.fullwidth]: fullwidth,\n    [classes.type1]: type1,\n    [classes.type2]: type2,\n    [classes.type3]: type3,\n    [classes.type4]: type4,\n    [classes.height1]: height1,\n    [classes.height2]: height2,\n    [classes.root]: true\n  });\n\n  return (\n    <Button {...rest} ref={ref} className={btnClasses}>\n      {children}\n      {model === \"add\" ? <IoIosAddCircleOutline size=\"1.5em\" style={{marginLeft: \"5px\"}}/> : <>\n      {model === \"download\" ? <IoDownloadOutline size=\"1.5em\" style={{marginLeft: \"5px\"}}/> : <>\n      {model === \"arrow\" ? <BsArrowRightCircle size=\"1.5em\" style={{marginLeft: \"5px\"}}/> : <>\n      {model === \"arrowL\" ? <BsArrowLeftCircle size=\"1.5em\" style={{marginLeft: \"5px\"}}/> : <>\n      {model === \"switch\" ? <CustomizedSwitch  setViewType={setViewType}/> : <>\n      {model === \"radio1\" ? <CustomizedRadios type={'radio1'} filterType={filterType} setFilterType={setFilterType} /> : <>\n      {model === \"radio2\" ? <CustomizedRadios type={'radio2'} filterType={filterType} setFilterType={setFilterType} /> : <>\n      {model === \"radio3\" ? <CustomizedRadios type={'radio3'} filterType={filterType} setFilterType={setFilterType} /> : <>\n      {model === \"radio4\" ? <CustomizedRadios type={'radio4'} filterType={filterType} setFilterType={setFilterType} /> : <>\n      {model === \"checked\" ? <BiCheckCircle size=\"1.5em\" style={{marginLeft: \"5px\"}}/> : <>\n      {model === \"expand\" ? <IoIosArrowDropdown size=\"1.5em\" style={{marginLeft: \"5px\"}} /> : <>\n      {model === \"delete\" ? <MdOutlineCancel size=\"1.5em\" style={{marginLeft: \"5px\"}} /> : <>\n      </>}\n      </>}\n      </>}\n      </>}\n      </>}\n      </>}\n      </>}\n      </>}\n      </>}\n      </>}\n      </>}\n      </>}\n    </Button>\n  );\n});\nCustomizedButtons.propTypes = {\n  fullwidth: PropTypes.bool,\n  type1: PropTypes.bool,\n  type2: PropTypes.bool,\n  type3: PropTypes.bool,\n  type4: PropTypes.bool,\n  height1: PropTypes.bool,\n  height2: PropTypes.bool,\n\n};\nexport default CustomizedButtons;","import React, { useState } from \"react\";\n// @mui components\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport bg from \"../../images/multi_background_login.jpg\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser, setUserName } from \"../../features/userSlice\";\n// styled components\nimport NavBarLogin from \"../../components/NavBar/NavBarLogin\";\nimport { Stack } from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport { loginAuth, testingHttps } from \"../../axios/APIRequests\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nconst CLIENT_ID = \"637717333332-2fauonnc42evp1f3qfi7e4br0okm5cu8.apps.googleusercontent.com\"\n\nfunction LoginPage({ history }) {\n  const dispatch = useDispatch();\n  const responseGoogle = (response) => {\n    if(response.profileObj === undefined || response.tokenId === undefined) return\n    dispatch(setUserName(response.profileObj.name));\n    signIn(response.tokenId)\n  };\n\n\n  const signIn = (tokenId) => {\n    // setAuthToken()\n    \n    loginAuth(tokenId)\n      .then(function (response) {\n        dispatch(setUser(response));\n        localStorage.token = response.token;\n        localStorage.userID = response.userID;\n        if(response.role === \"professor\") {\n          history.push(\"./professorhome\");\n        } else {\n          history.push(\"./studenthome\");\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBarLogin></NavBarLogin>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          flexDirection: \"row\",\n          margin: \"1em 12em\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"start\",\n            width: \"496px\",\n          }}\n        >\n          <Typography\n            style={{ fontWeight: \"600\" }}\n            variant=\"h4\"\n            component=\"div\"\n          >\n            A proven system to improve student grade outcomes.\n          </Typography>\n          <Typography variant=\"h6\" component=\"div\">\n            Distribute assignments and collect peer reviews with accuracy and\n            efficiency while utilizing this effective learning method.\n          </Typography>\n        </div>\n        <CustomizedCard\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            margin: \"3em 1em\",\n            width: \"422px\",\n            height: \"auto\",\n            padding: \"0.5em\",\n          }}\n        >\n          <CardHeader\n            sx={{ paddingBottom: \"0\" }}\n            title={\n              <Typography\n                style={{ fontWeight: \"600\" }}\n                variant=\"h5\"\n                component=\"div\"\n              >\n                Google Login\n              </Typography>\n            }\n          ></CardHeader>\n          <CardContent>\n            <Typography\n              style={{ fontWeight: \"400\" }}\n              variant=\"h6\"\n              component=\"div\"\n            >\n              Select your role to begin\n            </Typography>\n          </CardContent>\n          <CardContent\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Stack spacing={2}>\n\n              <CustomizedButtons onClick={test}>\n\n              </CustomizedButtons>\n              <GoogleLogin\n                clientId={CLIENT_ID}\n                buttonText=\"Professor\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n              <GoogleLogin\n                clientId={CLIENT_ID}\n                buttonText=\"Student\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n            </Stack>\n          </CardContent>\n        </CustomizedCard>\n      </div>\n    </CustomizedBody>\n  );\n}\n\nexport default LoginPage;\n","export default __webpack_public_path__ + \"static/media/multi_background_dashboard.93df40e4.jpg\";","export default __webpack_public_path__ + \"static/media/professor_logo.03d68dc3.png\";","export default __webpack_public_path__ + \"static/media/student_logo.cd5eb9a7.png\";","import KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { Button, Collapse, Grid, Stack } from \"@mui/material\";\nimport AppBar from \"@mui/material/AppBar\";\nimport React from \"react\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { selectUser, selectUserName, setUser } from \"../../features/userSlice\";\nimport professorLogo from \"../../images/professor_logo.png\";\nimport studentLogo from \"../../images/student_logo.png\";\n// styled components\nimport NavBarStyle from \"../../styles/NavBarStyle\";\nimport { darkColor, whiteColor } from \"../../styles/Style\";\nimport CustomizedContainer from \"../CustomizedContainer\";\nfunction NavBar({ history }) {\n  const dispatch = useDispatch();\n  const nav = NavBarStyle();\n  const getUser = useSelector(selectUser);\n  const getUserName = useSelector(selectUserName);\n  const { user, isAuthenticated, role } = getUser;\n  const handleLogOut = () => {\n    dispatch(setUser());\n  };\n  const [dropdown, setDropdown] = React.useState(false);\n  const handleSignOut = () => {\n    handleLogOut();\n    sessionStorage.clear();\n  };\n  const handleClick = () => {\n    setDropdown(!dropdown);\n  };\n  return (\n    <div className={nav.root}>\n      <AppBar\n        style={{\n          backgroundColor: whiteColor,\n          color: darkColor,\n          flexDirection: \"row\",\n        }}\n        className={nav.appBar}\n      >\n        <CustomizedContainer>\n          <Grid\n            container\n            rowSpacing={2}\n            sx={{ display: \"flex\", alignItems: \"center\" }}\n          >\n            \n            {user.role === \"professor\" ? (\n              <>\n              <Grid item xs={2}>\n              <Link\n                to=\"/professorhome\"\n                style={{ textDecoration: \"none\", color: \"#000\" }}\n              >\n                <img className={nav.logo} src={`${professorLogo}`} />\n              </Link>\n            </Grid>\n              <Grid\n                item\n                container\n                xs={8}\n                rowSpacing={2}\n                sx={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <Stack direction=\"row\" spacing={3} sx={{ paddingTop: \"16px\" }}>\n                  <Link\n                    to=\"/course\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <Stack\n                      direction=\"row\"\n                      spacing={1}\n                      sx={{ display: \"flex\", alignItems: \"center\" }}\n                      className={nav.link}\n                    >\n                      <div>Courses & Assignments</div>\n                      <AiOutlinePlusCircle />\n                    </Stack>\n                  </Link>\n                  <Link\n                    to=\"/courseresult\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <div className={nav.link}>Quality Check</div>\n                  </Link>\n                  <Link\n                    to=\"/studentinfoview\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <div className={nav.link}>Students & Teams</div>\n                  </Link>\n                </Stack>\n              </Grid>\n              </>\n            ) : (\n              <>\n              <Grid item xs={2}>\n              <Link\n                to=\"/studenthome\"\n                style={{ textDecoration: \"none\", color: \"#000\" }}\n              >\n                <img className={nav.logo} src={`${studentLogo}`} />\n              </Link>\n            </Grid>\n              <Grid\n                item\n                container\n                xs={8}\n                rowSpacing={2}\n                sx={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <Stack direction=\"row\" spacing={3} sx={{ paddingTop: \"16px\" }}>\n                  <Link\n                    to=\"/seeallassignment\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <Stack\n                      direction=\"row\"\n                      spacing={1}\n                      sx={{ display: \"flex\", alignItems: \"center\" }}\n                      className={nav.link}\n                    >\n                      <div>Assignments</div>\n                      <AiOutlinePlusCircle />\n                    </Stack>\n                  </Link>\n                  <Link\n                    to=\"/studentresults\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <div className={nav.link}>Results</div>\n                  </Link>\n                  <Link\n                    to=\"/studentteams\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <div className={nav.link}>Teams </div>\n                  </Link>\n                </Stack>\n              </Grid>\n              </>\n            )}\n\n            <Grid\n              item\n              container\n              xs={2}\n              rowSpacing={2}\n              sx={{ display: \"flex\", justifyContent: \"center\" }}\n            >\n              <Stack\n                direction=\"column\"\n                spacing={3}\n                sx={{ paddingTop: \"16px\", position: \"relative\" }}\n              >\n                <Stack direction=\"row\">\n                  <Button\n                    onClick={handleClick}\n                    sx={{ color: \"#000\",textTransform: \"unset\",width: \"130px\" }}\n                    endIcon={<KeyboardArrowDownIcon />}\n                  >\n                    {getUserName}\n                  </Button>\n                </Stack>\n                <Collapse\n                  in={dropdown}\n                  timeout=\"auto\"\n                  unmountOnExit\n                  sx={{ position: \"absolute\", top: \"50px\" }}\n                >\n                  <Link\n                    to=\"/login\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <Button\n                      variant=\"contained\"\n                      className={nav.link}\n                      sx={{ width: \"130px\" }}\n                      onClick={handleSignOut}\n                    >\n                      Sign out\n                    </Button>\n                  </Link>\n                </Collapse>\n              </Stack>\n            </Grid>\n          </Grid>\n        </CustomizedContainer>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import { makeStyles } from '@mui/styles';\nimport { primaryColor, darkColor } from \"./Style\";\nconst DividerStyle = makeStyles((theme) => ({\n  type1: {\n    border: `1.5px solid ${primaryColor}`\n  },\n  type2: {\n    border: `1px solid ${darkColor}`\n  },\n}));\n\nexport default DividerStyle;","import React from \"react\";\n\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n// core components\nimport DividerStyle from \"../styles/DividerStyle\";\nimport { Divider } from \"@mui/material\";\n\nconst CustomizedDivider = React.forwardRef((props, ref) => {\n  const {\n    type1,\n    type2,\n    children,\n    ...rest\n  } = props;\n\n  // Styles\n  const classes = DividerStyle();\n  //const classes = makeComponentStyles();\n  const dividerClasses = classNames({\n    [classes.type1]: type1,\n    [classes.type2]: type2,\n  });\n\n  return (\n    <Divider variant=\"middle\" {...rest} ref={ref} className={dividerClasses}>\n      {children}\n    </Divider>\n  )\n});\nCustomizedDivider.propTypes = {\n    type1: PropTypes.bool,\n    type2: PropTypes.bool,\n};\nexport default CustomizedDivider;\n","import { makeStyles } from \"@mui/styles\";\nimport { blueColor, primaryColor, darkColor } from \"./Style\";\nconst LoadingStyle = makeStyles((theme) => ({\n  box: {\n    display: \"flex\",\n    height: \"300px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  }, \n  logo: {\n    width:\"300px\",\n    marginBottom: \"20px\"\n  },\n  loading: {\n    color: blueColor\n  },\n}));\n\nexport default LoadingStyle;\n","import React from \"react\";\n// @mui components\n\nimport { styled } from \"@mui/material/styles\";\nimport logo from \"../images/logo.png\";\n\n// styled components\nimport LoadingStyle from \"../styles/LoadingStyle\";\n\nimport CustomizedContainer from \"../components/CustomizedContainer\";\nimport CustomizedCard from \"../components/CustomizedCard\";\nimport { CircularProgress } from \"@mui/material\";\n\nfunction Loading({ history, error }) {\n  const loading = LoadingStyle();\n\n  return (\n    <CustomizedContainer>\n      <CustomizedCard>\n        <div className={loading.box}>\n          <img className={loading.logo} src={`${logo}`} />\n          <div>{error}</div>\n          <CircularProgress className={loading.loading}></CircularProgress>\n        </div>\n      </CustomizedCard>\n    </CustomizedContainer>\n  );\n}\n\nexport default Loading;\n","import React, { useState, useEffect } from \"react\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Divider,\n  List,\n  ListItem,\n  IconButton,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemButton,\n  ListItemIcon,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport { BiCheckCircle } from \"react-icons/bi\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedDivider from \"../../components/CustomizedDivider\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport {\n  getAssignmentsByProfessor,\n  getTeamsByProfessor,\n} from \"../../axios/APIRequests\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\n\nfunction CourseBar({ course, history }) {\n  return (\n    <Stack spacing={0} >\n      <CustomizedButtons\n        type3\n        fullwidth\n        model={\"arrow\"}\n        onClick={() => history.push(\"/course\")}\n      >\n        {`${course.title}, Section ${course.sectionNumber}, ${course.semester}`}\n      </CustomizedButtons>\n      <>\n        {course.assignments.length !== 0 ? (\n          <List dense={true} sx={{flex:1}}>\n            {course.assignments.map((assignment) => (\n                <>\n                {!assignment.isSolutionCompleted && (\n                  <ListItem\n                    button\n                    justifyContent=\"space-between\"\n                    onClick={() => history.push(\"/assignmentdisplay\", {\n                      assignmentID: assignment.assignmentID,\n                    })}\n                  >\n                    \n                    <ListItemText\n                      style={{width: \"60%\"}}\n                      primary={\n                        <Typography component=\"span\" fontWeight=\"600\" variant=\"body2\">\n                          {`${assignment.title} Solution`}\n                        </Typography>\n                      }\n                    />\n                    <ListItemText\n                      direction=\"row\" justifyContent=\"flex-end\"\n                      primary={`Due ${new Date(\n                        assignment.solutionDueDateTime\n                      ).toLocaleDateString()}`}\n                    />\n                  </ListItem>\n                )}\n                {!assignment.isPeerReviewCompleted && (\n                  <ListItem\n                    button\n                    onClick={() => history.push(\"/assignmentdisplay\", {\n                      assignmentID: assignment.assignmentID,\n                    })}\n                  >\n                    <ListItemText\n                      primary={\n                        <Typography component=\"span\" fontWeight=\"600\" variant=\"body2\">\n                          {`${assignment.title} Peer Review`}\n                        </Typography>\n                      }\n                    />\n                    <ListItemText\n                      primary={`Due ${new Date(\n                        assignment.peerReviewDueDateTime\n                      ).toLocaleDateString()}`}\n                    />\n                  </ListItem>\n                )}\n                </>\n              ))}\n          </List>\n        ) : (\n          <Stack alignItems=\"center\" p={2} >No Assignment</Stack>\n        )}\n      </>\n    </Stack>\n  );\n}\n\nfunction ProfessorHomeDashBoard({ history }) {\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState([]);\n\n  useEffect(() => {\n    console.log(courses);\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course, key) => {\n        if (course.assignments !== undefined) {\n          setLoading(false);\n        }\n      });\n    }\n  }, [courses]);\n\n  useEffect(() => {\n    getAssignmentsByProfessor()\n      .then((value) => {\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Home\n          </Typography>\n        </Breadcrumbs>\n        <Grid\n          container\n          spacing={3}\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={4.7}>\n            <CustomizedCard>\n              <CardHeader\n                sx={{ paddingBottom: \"8px\" }}\n                title={\n                  <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                    <ListItem>\n                      <ListItemIcon>\n                        <FiberManualRecordIcon\n                          sx={{ color: \"#347DEB\" }}\n                          fontSize=\"medium\"\n                        />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={\n                          <Typography\n                            component=\"span\"\n                            fontWeight=\"600\"\n                            variant=\"h6\"\n                          >\n                            Assignments by Course\n                          </Typography>\n                        }\n                      />\n                    </ListItem>\n                  </List>\n                }\n              ></CardHeader>\n              <CustomizedDivider\n                type1\n                sx={{ marginBottom: \"15px\" }}\n              ></CustomizedDivider>\n              <CardContent\n                sx={{\n                  paddingTop: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <>\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <Stack sx={{flex:1}} spacing={1}>\n                      {courses.map((course, key) => {\n                        return (\n                          <CourseBar\n                            course={course}\n                            key={key}\n                            history={history}\n                          ></CourseBar>\n                        );\n                      })}\n                    </Stack>\n                  )}\n                </>\n              </CardContent>\n            </CustomizedCard>\n          </Grid>\n          <Grid item container spacing={3} xs={7.3}>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem\n                        secondaryAction={\n                          <CustomizedButtons\n                            type1\n                            height1\n                            onClick={() => {\n                              history.push(\"./courseresult\");\n                            }}\n                          >\n                            See All\n                          </CustomizedButtons>\n                        }\n                      >\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#0DC38D\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Quality Check\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <List sx={{ width: \"100%\" }}>\n                      {courses.map((course, key) => {\n                        return (\n                          <>\n                            {course.assignments.length !== 0 ? (\n                              <>\n                                {course.assignments.map((assignment, key) => {\n                                  return (\n                                    <>\n                                      {assignment.reviewStage === true ? (\n                                        <ListItem\n                                          button\n                                          divider\n                                          onClick={() =>\n                                            history.push(\n                                              \"/studentpeerreviewqualitycheck\", {assignmentID: assignment.assignmentID}\n                                            )\n                                          }\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            sx={{ width: \"30%\" }}\n                                            primary={`${assignment.title} Peer Review`}\n                                          />\n                                          <ListItemText\n                                            sx={{\n                                              display: \"flex\",\n                                              justifyContent: \"center\",\n                                            }}\n                                            primary={`submissions closed ${new Date(\n                                              assignment.peerReviewDueDateTime\n                                            ).toLocaleString()}`}\n                                          />\n                                        </ListItem>\n                                      ) : (\n                                        <></>\n                                      )}\n                                      <ListItem\n                                          button\n                                          divider\n                                          onClick={() =>\n                                            history.push(\n                                              \"/studentsolutionqualitycheck\", {assignmentID: assignment.assignmentID}\n                                            )\n                                          }\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            sx={{ width: \"30%\" }}\n                                            primary={`${assignment.title} Solution`}\n                                          />\n                                          <ListItemText\n                                            sx={{\n                                              display: \"flex\",\n                                              justifyContent: \"center\",\n                                            }}\n                                            primary={`Due ${new Date(\n                                              assignment.solutionDueDateTime\n                                            ).toLocaleString()}`}\n                                          />\n                                        </ListItem>\n                                    </>\n                                  );\n                                })}\n                              </>\n                            ) : (\n                              <Stack sx={{flex:1}} alignItems=\"center\">No Assignment</Stack>\n                            )}\n                          </>\n                        );\n                      })}\n                    </List>\n                  )}\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem>\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#6F40DC\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Manage Students & Teams by Course\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <>\n                    {loading === true ? (\n                      <CircularProgress\n                        className={loading.loading}\n                      ></CircularProgress>\n                    ) : (\n                      <Grid container spacing={2}>\n                        {courses.map((course, key) => {\n                          return (\n                            <Grid item xs={6}>\n                              <CustomizedButtons\n                                type2\n                                fullwidth\n                                onClick={() => {\n                                  history.push(\"./studentinfoview\");\n                                }}\n                                model={\"arrow\"}\n                                key={key}\n                              >\n                                {`${course.code}, Section ${course.sectionNumber}, ${course.semester}`}\n                              </CustomizedButtons>\n                            </Grid>\n                          );\n                        })}\n                      </Grid>\n                    )}\n                  </>\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              <CustomizedButtons\n                type1\n                model={\"add\"}\n                onClick={() => history.push(\"/coursecreation\")}\n              >\n                Create a New Course\n              </CustomizedButtons>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default ProfessorHomeDashBoard;\n","import React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport PDFControlBar from './PDFControlBar';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst PDFReader = () => {\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  // for onchange event\n  const [pdfFile, setPdfFile]=useState(null);\n  const [pdfFileError, setPdfFileError]=useState('');\n\n  // for submit event\n  const [viewPdf, setViewPdf]=useState(null);\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n  const fileType=['application/pdf'];\n  const handlePdfFileChange=(e)=>{\n    let selectedFile=e.target.files[0];\n    if(selectedFile){\n      if(selectedFile&&fileType.includes(selectedFile.type)){\n        let reader = new FileReader();\n            reader.readAsDataURL(selectedFile);\n            reader.onloadend = (e) =>{\n              setPdfFile(e.target.result);\n              setPdfFileError('');\n            }\n      }\n      else{\n        setPdfFile(null);\n        setPdfFileError('Please select valid pdf file');\n      }\n    }\n    else{\n      console.log('select your file');\n    }\n  }\n  const handlePdfFileSubmit=(e)=>{\n    e.preventDefault();\n    if(pdfFile!==null){\n      setViewPdf(pdfFile);\n    }\n    else{\n      setViewPdf(null);\n    }\n  }\n  return (\n    <div>\n      <form onSubmit={handlePdfFileSubmit}>\n        <input type=\"file\" className='form-control'\n          required onChange={handlePdfFileChange}\n        />\n        {pdfFileError&&<div className='error-msg'>{pdfFileError}</div>}\n        <br></br>\n        <button type=\"submit\" >\n          Preview\n        </button>\n      </form>\n      {viewPdf&&<>\n        <PDFControlBar\n          scale={scale}\n          setScale={setScale}\n          numPages={numPages}\n          pageNumber={pageNumber}\n          setPageNumber={setPageNumber}\n          file={viewPdf}\n        />\n        <Document\n          file={viewPdf}\n          onLoadSuccess={onDocumentLoadSuccess}\n        >\n          <Page pageNumber={pageNumber} scale={scale} />\n        </Document>\n      </>}\n      \n    </div>\n  );\n};\n\nexport default PDFReader;\n","import React, {useState} from 'react';\nimport PDFReader from '../components/PDFhandling/PDFReader';\nimport CustomizedButtons from '../components/CustomizedButtons';\nexport default function Testing() {\n  const [text, settext] = useState(\"helloworld\")\n  const hanldechangetext = () => {\n    settext(\"goodbye\")\n  }\n  return (\n    <>\n    <div>{text}</div>\n    <button onClick={hanldechangetext}>Click</button>\n    <CustomizedButtons type3 height1>Click</CustomizedButtons>\n    <CustomizedButtons type3 height1>Click herer</CustomizedButtons>\n    </>\n  );\n}","import { makeStyles } from '@mui/styles';\nimport { secondaryColor, primaryColor, darkColor, blueColor, greenColor, purpleColor } from \"./Style\";\nconst TabStyle = makeStyles((theme) => ({\n  root: {\n\n    fontWeight: \"600\",\n    color: \"#fff\",\n    \"& .MuiTabs-indicator\": {\n      \n        display: \"flex\",\n        height: \"100%\",\n        justifyContent: \"center\",\n        backgroundColor: \"transparent\",\n      },\n  },\n  fullwidth: {\n    width: \"100%\",\n  },\n  type1: {\n    \"& .MuiTabs-indicatorSpan\": {\n      backgroundColor: blueColor,\n    },\n  },\n  type2: {\n    \"& .MuiTabs-indicatorSpan\": {\n      backgroundColor: purpleColor,\n    },\n  },\n  type3: {\n    \"& .MuiTabs-indicatorSpan\": {\n      backgroundColor: greenColor,\n    },\n  },\n}));\n\nexport default TabStyle;","import React from \"react\";\n\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n// @material-ui/core components\nimport { styled } from \"@mui/material/styles\";\nimport { Tabs, Tab, Typography, Box } from \"@mui/material\";\n// core components\nimport TabStyle from \"../styles/TabStyle\";\n\nconst StyledTabs = styled((props) => (\n  <Tabs\n    {...props}\n    TabIndicatorProps={{ children: <span className=\"MuiTabs-indicatorSpan\" /> }}\n  />\n))({\n  \"& .MuiTabs-indicator\": {\n    display: \"flex\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \n  },\n  \"& .MuiTabs-indicatorSpan\": {\n    width: \"100%\",\n    borderRadius: \"10px 10px 0 0\",\n    backgroundColor: \"#347DEB\",\n  },\n});\n\nconst StyledTab = styled((props) => <Tab disableRipple {...props} />)(\n  ({ theme }) => ({\n    textTransform: \"none\",\n    fontWeight: theme.typography.fontWeightRegular,\n    fontSize: theme.typography.pxToRem(15),\n    marginRight: theme.spacing(0.5),\n    borderRadius: \"10px 10px 0 0\",\n    width:\"200px\",\n    color: \"#000\",\n    fontWeight: \"600\",\n    zIndex: 1,\n    outline: \"none\",\n    // borderRadius: \"10px 10px 0 0\",\n    backgroundColor: \"rgba(207, 225, 255, 1)\",\n    \"&.Mui-selected\": {\n      color: \"#fff\",\n      backgroundColor: \"rgba(207, 225, 255, 0.1)\",\n    },\n    \"&.Mui-focusVisible\": {\n      backgroundColor: \"rgba(100, 95, 228, 1)\",\n    },\n  })\n);\nconst CustomizedTabs = React.forwardRef((props, ref) => {\n  const {\n    model,\n    fullWidth,\n    type1,\n    type2,\n    type3,\n    labels,\n    children,\n    setTab,\n    tab,\n    ...rest\n  } = props;\n\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n  };\n  // Styles\n  const classes = TabStyle();\n  const tabClasses = classNames({\n    [classes.type1]: type1,\n    [classes.type2]: type2,\n    [classes.type3]: type3,\n    [classes.root]: true,\n  });\n\n  return (\n    <StyledTabs\n      value={tab}\n      variant={fullWidth}\n      onChange={handleChange}\n      aria-label=\"styled tabs example\"\n      {...rest}\n      ref={ref}\n      className={tabClasses}\n    >\n      {labels.map(label => {\n        return <StyledTab label= {label}/>\n      }) }\n    </StyledTabs>\n  );\n});\nCustomizedTabs.propTypes = {\n  value: PropTypes.any,\n  setValue: PropTypes.func,\n  type1: PropTypes.bool,\n  type1: PropTypes.bool,\n  type1: PropTypes.bool,\n};\nexport default CustomizedTabs;\n","import * as React from \"react\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport Modal from \"@mui/material/Modal\";\nimport Fade from \"@mui/material/Fade\";\nimport Typography from \"@mui/material/Typography\";\nimport CustomizedCard from \"./CustomizedCard\";\nimport CustomizedButtons from \"./CustomizedButtons\";\nimport { Grid } from \"@mui/material\";\n\nconst modalStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 6,\n};\nexport default function TransitionsModal({\n  modalType,\n  isCourseModalOpened,\n  handleCloseCourseModal,\n  isStudentModalOpened,\n  handleCloseStudentModal,\n  isAssignmentModalOpened,\n  handleCloseAssignmentModal,\n  handleDeleteStudent,\n  handleDeleteCourse,\n  handleDeleteAssignment,\n}) {\n  return (\n    <>\n      {modalType === \"course\" ? (\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          open={isCourseModalOpened}\n          onClose={handleCloseCourseModal}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={isCourseModalOpened}>\n            <CustomizedCard sx={modalStyle}>\n              <Grid container>\n                <Grid item xs={12}>\n                  <Typography\n                    id=\"transition-modal-title\"\n                    variant=\"h6\"\n                    component=\"h2\"\n                    sx={{ fontWeight: \"600\", textAlign: \"center\" }}\n                  >\n                    Are you sure you’d like to delete this course?\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography\n                    id=\"transition-modal-description\"\n                    variant=\"h7\"\n                    component=\"div\"\n                    sx={{ textAlign: \"center\" }}\n                  >\n                    All associated student and assignment data will be removed.\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <div style={{ padding: \"10px\" }}></div>\n                </Grid>\n                <Grid\n                  item\n                  container\n                  xs={12}\n                  sx={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <Grid item xs={3}>\n                    <CustomizedButtons\n                      type2\n                      height1\n                      onClick={handleCloseCourseModal}\n                    >\n                      Cancel\n                    </CustomizedButtons>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <CustomizedButtons\n                      type1\n                      height1\n                      onClick={handleDeleteCourse}\n                    >\n                      Delete\n                    </CustomizedButtons>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </CustomizedCard>\n          </Fade>\n        </Modal>\n      ) : (\n        <>\n          {modalType === \"assignment\" ? (\n            <Modal\n              aria-labelledby=\"transition-modal-title\"\n              aria-describedby=\"transition-modal-description\"\n              open={isAssignmentModalOpened}\n              onClose={handleCloseAssignmentModal}\n              closeAfterTransition\n              BackdropComponent={Backdrop}\n              BackdropProps={{\n                timeout: 500,\n              }}\n            >\n              <Fade in={isAssignmentModalOpened}>\n                <CustomizedCard sx={modalStyle}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <Typography\n                        id=\"transition-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{ fontWeight: \"600\", textAlign: \"center\" }}\n                      >\n                        Are you sure you’d like to delete this assignment?\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography\n                        id=\"transition-modal-description\"\n                        variant=\"h7\"\n                        component=\"div\"\n                        sx={{ textAlign: \"center\" }}\n                      >\n                        All assignment data will be removed.\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <div style={{ padding: \"10px\" }}></div>\n                    </Grid>\n                    <Grid\n                      item\n                      container\n                      xs={12}\n                      sx={{ display: \"flex\", justifyContent: \"center\" }}\n                    >\n                      <Grid item xs={3}>\n                        <CustomizedButtons\n                          type2\n                          height1\n                          onClick={handleCloseAssignmentModal}\n                        >\n                          Cancel\n                        </CustomizedButtons>\n                      </Grid>\n                      <Grid item xs={3}>\n                        <CustomizedButtons\n                          type1\n                          height1\n                          onClick={handleDeleteAssignment}\n                        >\n                          Delete\n                        </CustomizedButtons>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </CustomizedCard>\n              </Fade>\n            </Modal>\n          ) : (\n            <Modal\n              aria-labelledby=\"transition-modal-title\"\n              aria-describedby=\"transition-modal-description\"\n              open={isStudentModalOpened}\n              onClose={handleCloseStudentModal}\n              closeAfterTransition\n              BackdropComponent={Backdrop}\n              BackdropProps={{\n                timeout: 500,\n              }}\n            >\n              <Fade in={isStudentModalOpened}>\n                <CustomizedCard sx={modalStyle}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <Typography\n                        id=\"transition-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        sx={{ fontWeight: \"600\", textAlign: \"center\" }}\n                      >\n                        Are you sure you’d like to delete this user?\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography\n                        id=\"transition-modal-description\"\n                        variant=\"h7\"\n                        component=\"div\"\n                        sx={{ textAlign: \"center\" }}\n                      >\n                        User first/last name. Course they’ll be removed from\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <div style={{ padding: \"10px\" }}></div>\n                    </Grid>\n                    <Grid\n                      item\n                      container\n                      xs={12}\n                      sx={{ display: \"flex\", justifyContent: \"center\" }}\n                    >\n                      <Grid item xs={3}>\n                        <CustomizedButtons\n                          type2\n                          height1\n                          onClick={handleCloseStudentModal}\n                        >\n                          Cancel\n                        </CustomizedButtons>\n                      </Grid>\n                      <Grid item xs={3}>\n                        <CustomizedButtons\n                          type1\n                          height1\n                          onClick={handleDeleteStudent}\n                        >\n                          Delete\n                        </CustomizedButtons>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </CustomizedCard>\n              </Fade>\n            </Modal>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n// @mui components\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { TiDelete } from \"react-icons/ti\";\nimport { MdDelete } from \"react-icons/md\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  Breadcrumbs,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedModal from \"../../components/CustomizedModal\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport {\n  getAssignmentsByProfessor,\n  deleteAssignmentByProfessor,\n} from \"../../axios/APIRequests\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction ProfessorCourse({ history }) {\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const [error, setError] = useState(\"\")\n  const { user, isAuthenticated, authLoading } = getUser;\n  const [filterType, setFilterType] = React.useState(\"All\");\n  const [courses, setCourses] = React.useState();\n  const [loading, setLoading] = React.useState(true);\n  const [tab, setTab] = React.useState(0);\n  const [courseNames, setCourseNames] = React.useState([]);\n  const [isAssignmentModalOpened, setIsAssignmentModalOpened] = useState(false);\n  const handleOpenAssignmentModal = () => setIsAssignmentModalOpened(true);\n  const handleCloseAssignmentModal = () => setIsAssignmentModalOpened(false);\n  const [deletedAssignmentID, setDeletedAssignmentID] = useState()\n  const handleGetAssignmentByProfessor = () => {\n    getAssignmentsByProfessor()\n    .then((value) => {\n      console.log(value);\n      setCourses(value);\n    })\n    .catch((err) => {\n      console.log(err);\n      setError(err)\n    });\n  }\n  useEffect(() => {\n    var nameLists = [];\n    console.log(courses);\n    if (courses !== undefined) {\n      courses.map((course) => {\n        nameLists.push(course.code);\n      });\n      setCourseNames(nameLists);\n      setLoading(false);\n    }\n    return () => {\n      console.log(\"unmount\");\n    };\n  }, [courses]);\n  useEffect(() => {\n    handleGetAssignmentByProfessor()\n    return () => {\n      console.log(\"unmount\");\n    };\n  }, []);\n \n  const handleDeleteAssignment = () => {\n    deleteAssignmentByProfessor(deletedAssignmentID)\n      .then((value) => {\n        console.log(value);\n        handleGetAssignmentByProfessor()\n        handleCloseAssignmentModal(true)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Course\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading error={error}/>\n          ) : (\n            <>\n              {courses.length === 0 ? (\n                <CustomizedCard>\n                  <CardContent>\n                  <Stack style={{flex:1}} alignItems=\"center\">Please create a new course</Stack>\n                  </CardContent>\n                </CustomizedCard>\n              ) : (\n                <>\n                <Grid container sx={{ marginBottom: \"20px\" }}>\n                  <Grid\n                    item\n                    xs={8}\n                    sx={{ display: \"flex\", alignItems: \"center\" }}\n                  >\n                    <Typography\n                      style={{\n                        display: \"flex\",\n                        textAlign: \"center\",\n                        fontWeight: \"600\",\n                      }}\n                      variant=\"h6\"\n                      component=\"div\"\n                    >\n                      Courses and Assignments\n                    </Typography>\n                  </Grid>\n\n                  <Grid\n                    item\n                    xs={4}\n                    sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                  >\n                    <Stack direction=\"row\" spacing={2}>\n                      <CustomizedButtons\n                        type2\n                        model={\"add\"}\n                        onClick={() => history.push(\"/coursecreation\")}\n                      >\n                        Create Course\n                      </CustomizedButtons>\n                      <CustomizedButtons\n                        type1\n                        onClick={() => history.push(\"/studentinfoview\")}\n                      >\n                        View Student Info\n                      </CustomizedButtons>\n                    </Stack>\n                  </Grid>\n                </Grid>\n                <div>\n                  <CustomizedTabs\n                    type1\n                    setTab={setTab}\n                    tab={tab}\n                    fullWidth={\"fullWidth\"}\n                    labels={courseNames}\n                  ></CustomizedTabs>\n                  {courses.map((course, key) => {\n                    return (\n                      <TabPanel value={tab} index={key}>\n                        <CustomizedCard>\n                          <CardHeader\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                            }}\n                            title={\n                              <Grid container>\n                                <Grid item xs={6}>\n                                  <CustomizedButtons\n                                    type2\n                                    model={\"add\"}\n                                    onClick={() =>\n                                      history.push(\"/assignmentcreation\", {\n                                        courseID: course.courseID,\n                                      })\n                                    }\n                                  >\n                                    Create New Assignment\n                                  </CustomizedButtons>\n                                </Grid>\n                                <Grid\n                                  item\n                                  xs={6}\n                                  sx={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\",\n                                  }}\n                                >\n                                  <CustomizedButtons\n                                    type3\n                                    model={\"radio1\"}\n                                    fullwidth\n                                    filterType={filterType}\n                                    setFilterType={setFilterType}\n                                  >\n                                    Filter Assignment\n                                  </CustomizedButtons>\n                                </Grid>\n                              </Grid>\n                            }\n                          ></CardHeader>\n                          <CardContent\n                            sx={{\n                              paddingTop: \"0\",\n                            }}\n                          >\n                            {course.assignments.map((assignment, key) => {\n                              return (\n                                <>\n                                  {(filterType === \"All\" ||\n                                    (filterType === \"Draft\") ===\n                                      assignment.draft) && (\n                                    <ListItem\n                                      key={key}\n                                      button\n                                      divider\n                                      secondaryAction={\n                                        <IconButton edge=\"end\">\n                                          <MdDelete\n                                            style={{\n                                              color: \"red\",\n                                              size: \"1.5em\",\n                                            }}\n                                            onClick={()=>{\n                                              handleOpenAssignmentModal()\n                                              setDeletedAssignmentID(assignment.assignmentID)\n                                            }}\n                                          />\n                                        </IconButton>\n                                      }\n                                    >\n                                      <ListItemText\n                                        onClick={() =>{\n                                          console.log(\"go\")\n                                          history.push(\"/assignmentdisplay\", {\n                                            assignmentID: assignment.assignmentID,\n                                          })}\n                                        }\n                                        sx={{ fontWeight: \"800\" }}\n                                        primary={\n                                          <div\n                                            style={{\n                                              display: \"flex\",\n                                              justifyContent: \"space-between\",\n                                              alignItems: \"center\",\n                                            }}\n                                          >\n                                            <Typography\n                                              style={{\n                                                display: \"flex\",\n                                                alignItems: \"center\",\n                                                fontWeight: \"600\",\n                                              }}\n                                              variant=\"body1\"\n                                              component=\"div\"\n                                            >\n                                            {assignment.title}\n                                            \n                                            </Typography>\n                                            <Stack direction=\"row\">\n                                              <Typography\n                                                style={{\n                                                  display: \"flex\",\n                                                  alignItems: \"center\",\n                                                  fontWeight: \"600\",\n                                                }}\n                                                variant=\"body1\"\n                                                component=\"div\"\n                                              >\n                                                Preview\n                                              </Typography>\n                                            </Stack>\n                                          </div>\n                                        }\n                                        secondary={\n                                          <Grid container>\n                                            <Grid\n                                              item\n                                              xs={12}\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"space-between\",\n                                              }}\n                                            >\n                                              <Typography\n                                                variant=\"body2\"\n                                                component=\"div\"\n                                              >\n                                                Solution\n                                              </Typography>\n                                              <Typography\n                                                variant=\"body2\"\n                                                component=\"div\"\n                                              >\n                                                Due Date:{\" \"}\n                                                {new Date(\n                                                  assignment.solutionDueDateTime\n                                                ).toLocaleString()}\n                                              </Typography>\n                                            </Grid>\n                                            <Grid\n                                              item\n                                              xs={12}\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"space-between\",\n                                              }}\n                                            >\n                                              <Typography\n                                                variant=\"body2\"\n                                                component=\"div\"\n                                              >\n                                                Peer Review\n                                              </Typography>\n                                              <Typography\n                                                variant=\"body2\"\n                                                component=\"div\"\n                                              >\n                                                Due Date:{\" \"}\n                                                {new Date(\n                                                  assignment.peerReviewDueDateTime\n                                                ).toLocaleString()}\n                                              </Typography>\n                                            </Grid>\n                                          </Grid>\n                                        }\n                                      />\n                                    </ListItem>\n                                  )}\n                                </>\n                              );\n                            })}\n                          </CardContent>\n                        </CustomizedCard>\n                      </TabPanel>\n                    );\n                  })}\n                </div>\n                </>\n              )}\n            </>\n          )}\n        </>\n        <CustomizedModal\n        modalType={\"assignment\"}\n        isAssignmentModalOpened={isAssignmentModalOpened}\n        handleCloseAssignmentModal={handleCloseAssignmentModal}\n        handleDeleteAssignment={handleDeleteAssignment}\n      />\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default ProfessorCourse;\n","import React, { useState } from \"react\";\nimport { Stack, Typography } from \"@mui/material\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n// style\nimport ButtonStyle from \"../styles/ButtonStyle\";\n\nfunction CustomizedCSVUploader(props) {\n  const { setCSVFile, multipleCSV, ...rest } = props;\n\n  // Styles\n  const classes = ButtonStyle();\n\n  const inputStyleClasses = classNames({\n    [classes.root]: true,\n    [classes.displayNone]: true,\n  });\n\n  const uploadBtnClasses = classNames({\n    [classes.type1]: true,\n    [classes.height3]: true,\n    [classes.root]: true,\n  });\n\n  //=========== Handle Submission\n  const [pdfFileError, setPdfFileError] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n\n  const fileType = [\"text/csv\"];\n  const handlePdfFileChange = (e) => {\n    let arrayPdfFiles = []\n    console.log(e.target.files)\n    for (let i = 0; i < e.target.files.length; i++) {\n      console.log(e.target.files[i]);\n      let selectedFile = e.target.files[i];\n      if (selectedFile) {\n        if (selectedFile && fileType.includes(selectedFile.type)) {\n          setFileName(selectedFile.name);\n          let reader = new FileReader();\n          //reader.readAsDataURL(selectedFile);\n          reader.readAsText(selectedFile);\n          reader.onloadend = (e) => {\n            //let unit8Array = new Uint8Array(e.target.result);\n            let text = e.target.result//unit8Array//.split(',')\n            var lines = text.toString().split(\"\\n\")\n            var result = [];\n            var headers=lines[0].split(\",\");\n            for(var i=1;i<lines.length-1;i++){\n\n              var obj = {};\n              var currentline=lines[i].split(\",\");\n              for(var j=0;j<headers.length;j++){\n                obj[headers[j]] = currentline[j];\n            }\n              result.push(obj);\n            }\n            \n            if(multipleCSV){\n              arrayPdfFiles = [...arrayPdfFiles,result]\n              setCSVFile(arrayPdfFiles);\n              setPdfFileError(\"\");\n            }\n            else{\n                setCSVFile(result);\n              setPdfFileError(\"\");\n            }\n            \n          };\n        } else {\n            setCSVFile(null);\n          setPdfFileError(\"Please select valid csv file\");\n        }\n      } else {\n        console.log(\"select your file\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Stack direction=\"row\" spacing={3}>\n        {multipleCSV === true ? (\n          <input\n            type=\"file\"\n            id=\"file\"\n            accept=\".csv\"\n            class=\"inputfile\"\n            multiple\n            className={inputStyleClasses}\n            onChange={handlePdfFileChange}\n          />\n        ) : (\n          <input\n            type=\"file\"\n            id=\"file\"\n            accept=\".csv\"\n            class=\"inputfile\"\n            className={inputStyleClasses}\n            onChange={handlePdfFileChange}\n          />\n        )}\n\n        <label for=\"file\">\n          <span id=\"file-name\" class=\"file-box\"></span>\n          <span class={uploadBtnClasses}>Upload CSV file</span>\n        </label>\n        <Typography\n          style={{\n            display: \"flex\",\n            textAlign: \"center\",\n            fontWeight: \"500\",\n          }}\n          variant=\"h6\"\n          component=\"div\"\n        >\n          {fileName}\n        </Typography>\n      </Stack>\n    </div>\n  );\n\n\n}\n  CustomizedCSVUploader.propTypes = {\n    multipleCSV: PropTypes.bool,\n  };\nexport default CustomizedCSVUploader;\n","import React, { useState,useEffect } from \"react\";\nimport {\n  Card,\n  Typography,\n  Container,\n  CardContent,\n  Stack,\n  Breadcrumbs,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControl,\n} from \"@mui/material\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport axios from \"axios\";\nimport { CSVReader } from \"react-papaparse\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport { Box } from \"@mui/system\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport CustomizedCSVUploader from \"../../components/CustomizedCSVUploader\";\nimport { postNewCourseByProfessor } from \"../../axios/APIRequests\";\n\nconst buttonRef = React.createRef();\n\nfunction AddCoursePage1({ history }) {\n  const [newCourse, setNewCourse] = useState()\n  const [title, setTitle] = useState(\"\");\n  const [submissionType, setSubmissionType] = React.useState(\"Manually Set Teams\");\n  const [isTeamed, setIsTeamed] = useState(true);\n  const [numberOfTeam, setNumberOfTeam] = React.useState(2);\n  const [csvFile, setCSVFile] = useState(null);\n  var ErrorMessage = \"Please fill out !!!\"\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isPublishing, setIsPublishing] = useState(false);\n  const handleChangeTeams = (event) => {\n    setNumberOfTeam(event.target.value);\n  };\n  useEffect(() => {\n    const DiableTeamInput = () => {\n      if(submissionType === \"Randomized Teams\"){\n        setIsDisabled(false)\n        setIsTeamed(true)\n      }\n      else if (submissionType === \"Independent\"){\n        setIsDisabled(true)\n        setIsTeamed(false)\n      }\n      else{\n        setIsTeamed(true)\n      }\n    }\n    DiableTeamInput()\n  }, [submissionType])\n\n  const handleAddCourse = () => {\n    if( title===\"\"  || csvFile === null)\n    {\n      alert(ErrorMessage)\n    }\n    else{\n    var newCourse = {\n      userID: localStorage.getItem('userID'),\n      \"title\": title,\n      \"isTeamed\": isTeamed,\n      \"code\": title,\n    };\n    var json = {\n      \"csvContents\": csvFile,\n      \"numberOfTeams\": numberOfTeam,\n      \"course\": newCourse,\n    };\n    const json_ = JSON.stringify(json);\n    \n    postNewCourseByProfessor(json)\n      .then(function (response) {\n        console.log(response);\n        history.push(\"./course\")\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\">Course</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Create Course\n          </Typography>\n        </Breadcrumbs>\n\n        <>\n          <Typography\n            style={{ fontWeight: \"600\" }}\n            variant=\"h6\"\n            component=\"div\"\n          >\n            Create Course\n          </Typography>\n          <div style={{ padding: \"10px\" }}></div>\n          <CustomizedCard>\n            <CardContent>\n              <div style={{ width: \"100%\" }}>\n                <Stack direction=\"column\" spacing={2} sx={{ display: \"flex\" }}>\n                  <Typography\n                    style={{ fontWeight: \"600\" }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Course Settings:\n                  </Typography>\n                  <Stack\n                    direction=\"row\"\n                    spacing={4}\n                    sx={{ display: \"flex\", alignItems: \"center\" }}\n                  >\n                    <CustomizedTextField\n                      value={title}\n                      handleTextFieldChange={setTitle}\n                    >\n                      Course Title To Display{\" \"}\n                    </CustomizedTextField>\n                    <Typography\n                      style={{ fontWeight: \"600\" }}\n                      variant=\"body1\"\n                      component=\"div\"\n                    >\n                      Course reference number (CRN) recommended\n                    </Typography>\n                  </Stack>\n                  <Typography\n                    style={{ fontWeight: \"600\" }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Please select team settings:\n                  </Typography>\n                  <Stack direction=\"row\" spacing={1} >\n                    <CustomizedButtons\n                      type4\n                      model={\"radio4\"}\n                      filterType={submissionType}\n                      setFilterType={setSubmissionType}\n                    ></CustomizedButtons>\n                    <FormControl sx={{ width: \"100px\", height: \"10px\" }} disabled={isDisabled}>\n                      <InputLabel id=\"demo-simple-select-label\">\n                        Teams\n                      </InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={numberOfTeam}\n                        label=\"Teams\"\n                        onChange={handleChangeTeams}\n                      >\n                        {Array.from(Array(5).keys()).map((index, key) => (\n                          <MenuItem value={index + 2} key={key}>\n                            {index + 2}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Stack>\n                  <Typography variant=\"body2\" component=\"div\">\n                    Please upload the course student list CSV file provided by\n                    your administrator.\n                  </Typography>\n                  <CustomizedCSVUploader\n                    setCSVFile={setCSVFile}\n                  ></CustomizedCSVUploader>\n                </Stack>\n              </div>\n            </CardContent>\n          </CustomizedCard>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginTop: \"20px\",\n            }}\n          >\n            <Stack direction=\"row\" spacing={2}>\n              <CustomizedButtons\n                type2\n                height1\n                onClick={() => {\n                  history.push(\"./professorhome\");\n                }}\n              >\n                Cancel\n              </CustomizedButtons>\n              <CustomizedButtons type1 height1 onClick={handleAddCourse}>\n                Publish\n              </CustomizedButtons>\n            </Stack>\n          </div>\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default AddCoursePage1;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Radio,\n  autocompleteClasses,\n} from \"@mui/material\";\n// styled components\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport PDFControlBar from \"../../components/PDFhandling/PDFControlBar\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction AssignmentViewer({ history, location }) {\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  const [isLoading, setIsLoading] = useState(true);\n  const [tab, setTab] = React.useState(0);\n  //const [isPreV, setisPreV] = useState(initialState)\n  //const [assignment, setAssignment] = useState();\n\n  var assignment = location.state.assignment;\n  var solutionPdf = assignment.solutionPdfDoc;\n  var peerReviewPdf = assignment.peerReviewPdfDoc;\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n  // const handlePreviewMode = () => {\n  //   setIsPreviewMode(false);\n  // };\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed></NavBar>\n      <CustomizedContainer>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              fontWeight: \"600\",\n            }}\n            variant=\"h6\"\n            component=\"div\"\n          >\n            {assignment.title}\n          </Typography>\n          <CustomizedButtons\n            type2\n            onClick={() => {\n              history.push(\"/assignmentcreation\", {\n                assignment: assignment,\n                courseID: location.state.courseID,\n              });\n            }}\n          >\n            Close Preview\n          </CustomizedButtons>\n        </Stack>\n        <CustomizedCard sx={{ margin: \"20px 0\" }}>\n          <CardContent>\n            <Grid container>\n              <Grid item xs={12}>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Publish Date:\n                  </Typography>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {new Date().toDateString()}\n                  </Typography>\n                </Stack>\n              </Grid>\n              <Grid item xs={6}>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Solution Due Date:\n                  </Typography>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {new Date(assignment.solutionDueDateTime).toLocaleString()}\n                  </Typography>\n                </Stack>\n              </Grid>\n              <Grid item xs={6}>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Peer Review Due:\n                  </Typography>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {new Date(\n                      assignment.peerReviewDueDateTime\n                    ).toLocaleString()}\n                  </Typography>\n                </Stack>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </CustomizedCard>\n        <div>\n          <CustomizedTabs\n            type1\n            setTab={setTab}\n            tab={tab}\n            labels={[\"Solution\", \"Peer Review\"]}\n          ></CustomizedTabs>\n          <TabPanel value={tab} index={0}>\n            <CustomizedCard>\n              <CardContent>\n                {solutionPdf && (\n                  <Stack\n                  direction=\"row\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  p={1}\n                  height={825}\n                  >\n                    <CustomizedButtons\n                      model={\"arrowL\"}\n                      style={{ color: \"black\", marginBottom: \"10px\" }}\n                      onClick={goToPreviousPage}\n                    ></CustomizedButtons>\n                    <Document\n                      file={{ data: solutionPdf }}\n                      onLoadSuccess={onDocumentLoadSuccess}\n                    >\n                      <Page pageNumber={pageNumber} scale={scale} />\n                    </Document>\n                    <CustomizedButtons\n                      model={\"arrow\"}\n                      style={{ color: \"black\", marginBottom: \"10px\" }}\n                      onClick={goToNextPage}\n                    ></CustomizedButtons>\n                  </Stack>\n                )}\n              </CardContent>\n            </CustomizedCard>\n          </TabPanel>\n          <TabPanel value={tab} index={1}>\n            <CustomizedCard>\n              <CardContent>\n                <>\n                  {peerReviewPdf && (\n                    <Stack\n                      direction=\"row\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                      p={1}\n                      height={825}\n                    >\n                      <CustomizedButtons\n                        model={\"arrowL\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToPreviousPage}\n                      ></CustomizedButtons>\n                      <Document\n                        file={{ data: peerReviewPdf }}\n                        onLoadSuccess={onDocumentLoadSuccess}\n                      >\n                        <Page pageNumber={pageNumber} scale={scale} />\n                      </Document>\n                      <CustomizedButtons\n                        model={\"arrow\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToNextPage}\n                      ></CustomizedButtons>\n                    </Stack>\n                  )}\n                </>\n              </CardContent>\n            </CustomizedCard>\n          </TabPanel>\n        </div>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default AssignmentViewer;\n","import React, { useState , useEffect} from \"react\";\nimport { Stack, Typography } from \"@mui/material\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n// style\nimport ButtonStyle from \"../styles/ButtonStyle\";\n\nfunction CustomizedPdfUploader(props) {\n  const { id, pdfFileName, setPdfFileName, setPdfFile, multiplePdf, ...rest } =\n    props;\n\n  // Styles\n  const classes = ButtonStyle();\n\n  const inputStyleClasses = classNames({\n    [classes.displayNone]: true,\n  });\n\n  const uploadBtnClasses = classNames({\n    [classes.type1]: true,\n    [classes.height1]: true,\n    [classes.root]: true,\n  });\n\n  //=========== Handle Submission\n  const [pdfFileError, setPdfFileError] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n\n  useEffect(() => {\n    if (pdfFileName !== undefined) {\n      setFileName(pdfFileName);\n    }\n  }, [pdfFileName]);\n\n  const fileType = [\"application/pdf\"];\n  const handlePdfFileChange = (e) => {\n    let arrayPdfFiles = [];\n    for (let i = 0; i < e.target.files.length; i++) {\n      let selectedFile = e.target.files[i];\n      if (selectedFile) {\n        if (selectedFile && fileType.includes(selectedFile.type)) {\n          setFileName(selectedFile.name);\n           \n          if(pdfFileName !== undefined)\n          {\n             \n              setPdfFileName(selectedFile.name);\n          }\n        \n        \n          let reader = new FileReader();\n          //reader.readAsDataURL(selectedFile);\n          reader.readAsArrayBuffer(selectedFile);\n          reader.onloadend = (e) => {\n            let unit8Array = new Int8Array(e.target.result);\n            let byteArray = unit8Array.toString().split(\",\").map(Number);\n           \n            if (multiplePdf) {\n              arrayPdfFiles = [...arrayPdfFiles, byteArray];\n              setPdfFile(arrayPdfFiles);\n              setPdfFileError(\"\");\n            } else {\n              setPdfFile(byteArray);\n              setPdfFileError(\"\");\n            }\n          };\n        } else {\n          setPdfFile(null);\n          setPdfFileError(\"Please select valid pdf file\");\n        }\n      } else {\n        console.log(\"select your file\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Stack direction=\"row\" spacing={3} alignItems=\"center\">\n        {multiplePdf === true ? (\n          <input\n            type=\"file\"\n            id={id}\n            accept=\"application/pdf\"\n            class=\"inputfile\"\n            multiple\n            className={inputStyleClasses}\n            onChange={handlePdfFileChange}\n          />\n        ) : (\n          <input\n            type=\"file\"\n            id={id}\n            accept=\"application/pdf\"\n            class=\"inputfile\"\n            className={inputStyleClasses}\n            onChange={handlePdfFileChange}\n          />\n        )}\n\n        <label for={id}>\n          <span id=\"file-name\" class=\"file-box\"></span>\n          <span class={uploadBtnClasses}>Upload PDF file</span>\n        </label>\n        <Typography\n          style={{\n            display: \"flex\",\n            textAlign: \"center\",\n            fontWeight: \"500\",\n          }}\n          variant=\"body1\"\n          component=\"div\"\n        >\n          {fileName}\n        </Typography>\n      </Stack>\n    </div>\n  );\n\n\n}\n  CustomizedPdfUploader.propTypes = {\n    multiplePdf: PropTypes.bool,\n  };\nexport default CustomizedPdfUploader;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Radio,\n  Breadcrumbs,\n} from \"@mui/material\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport TextField from \"@mui/material/TextField\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n// Worker\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport CustomizedRadios from \"../../components/CustomizedRadios\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport AssignmentViewer from \"./AssignmentViewer\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport { postNewAssignmentByProfessor } from \"../../axios/APIRequests\";\nimport { ConsoleView } from \"react-device-detect\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction AssignmentCreation({ history, location }) {\n  const [newAssignment, setNewAssignment] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [solutionPdfFile, setSolutionPdfFile] = useState([]);\n  const [peerReviewPdfFile, setPeerReviewPdfFile] = useState([]);\n  const [solutionDueDate, setSolutionDueDate] = useState(new Date());\n  const [prDueDate, setPRDueDate] = useState(new Date());\n  const [solutionPdfFileName, setSolutionPdfFileName] = useState(\"\");\n  const [peerReviewPdfFileName, setPeerReviewPdfFileName] = useState(\"\");\n  var ErrorMessage = \"Please fill out !!!\"\n  const [disablePublishBtn, setDisablePublishBtn] = useState(true)\n  useEffect(() => {\n    if (location.state.assignment == undefined) return\n      var assignment = location.state.assignment;\n      console.log(assignment)\n      setTitle(assignment.title);\n      setSolutionDueDate(new Date(assignment.solutionDueDateTime))\n      setPRDueDate(new Date(assignment.peerReviewDueDateTime))\n      setSolutionPdfFileName(assignment.solutionPdfFileName)\n      setPeerReviewPdfFileName(assignment.peerReviewPdfFileName)\n      setSolutionPdfFile(assignment.solutionPdfDoc)\n      setPeerReviewPdfFile(assignment.peerReviewPdfDoc)\n\n    if ( title === \"\" || solutionPdfFile.length === 0 ||  peerReviewPdfFile.length === 0) {\n      setDisablePublishBtn(true)  \n      return\n    }\n    setDisablePublishBtn(false)\n  }, []);\n\n  useEffect(() => {\n    const generateAssignment = () => {\n      setNewAssignment({\n        courseID: location.state.courseID,\n        settings: \"settings\",\n        title: title,\n        draft: true,\n        solutionPdfDoc: solutionPdfFile,\n        peerReviewPdfDoc: peerReviewPdfFile,\n        solutionPdfFileName : solutionPdfFileName,\n        peerReviewPdfFileName:peerReviewPdfFileName,\n        solutionDueDateTime: solutionDueDate.toJSON().split(\".\")[0],\n        peerReviewDueDateTime: prDueDate.toJSON().split(\".\")[0],\n      });\n    };\n    \n    generateAssignment();\n  }, [title, solutionPdfFile, peerReviewPdfFile,solutionPdfFileName,peerReviewPdfFileName, solutionDueDate, prDueDate]);\n\n  const handlePreview = () => {\n    \n    if (\n      title === \"\" ||\n      solutionPdfFile.length === 0 ||\n      peerReviewPdfFile.length === 0\n    ) {\n        alert(ErrorMessage)\n    } else{\n      var assignment = {\n        courseID: location.state.courseID,\n        settings: \"settings\",\n        title: title,\n        solutionPdfDoc: solutionPdfFile,\n        peerReviewPdfDoc: peerReviewPdfFile,\n        solutionPdfFileName : solutionPdfFileName,\n        peerReviewPdfFileName:peerReviewPdfFileName,\n        solutionDueDateTime: solutionDueDate,\n        peerReviewDueDateTime: prDueDate,\n      }\n      console.log(assignment)\n        history.push(\"./assignmentviewer\", {assignment: assignment , \n          courseID: location.state.courseID \n        })\n    }\n   \n  }\n  const handleSaveDraft = () => {\n    if (\n      title === \"\" ||\n      solutionPdfFile.length === 0 ||\n      peerReviewPdfFile.length === 0\n    ) {\n      alert(ErrorMessage)\n    } else {\n      const json = JSON.stringify(newAssignment);\n      console.log(json);\n      postNewAssignmentByProfessor(newAssignment)\n        .then(function (response) {\n          console.log(response);\n          history.push(\"/course\");\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n  const handlePublish = () => {\n    if (\n      title === \"\" ||\n      solutionPdfFile.length === 0 ||\n      peerReviewPdfFile.length === 0\n    ) {\n      alert(ErrorMessage)\n    } else {\n      var tempAss = {...newAssignment, draft: false}\n      console.log(tempAss)\n      const json = JSON.stringify(tempAss);\n      console.log(json);\n      postNewAssignmentByProfessor(tempAss)\n        .then(function (response) {\n          console.log(response);\n          history.push(\"/course\");\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed></NavBar>\n      <>\n      <CustomizedContainer>\n            <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n              <Typography color=\"text.primary\">Home</Typography>\n              <Typography color=\"text.primary\">Courses</Typography>\n              <Typography color=\"text.primary\">Course Name</Typography>\n              <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n                New Assignment\n              </Typography>\n            </Breadcrumbs>\n            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n\n                <Typography\n                  style={{ fontWeight: \"600\" }}\n                  variant=\"body1\"\n                  component=\"div\"\n                >\n                  Build New Assignment\n                </Typography>\n                <CustomizedButtons\n                  type2\n                  onClick={handlePreview}\n                >\n                  Preview\n                </CustomizedButtons>\n            </Stack>\n\n            {/* First Box */}\n            <CustomizedCard sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}>\n              <CardContent>\n                <Stack direction=\"column\" spacing={2}>\n                  <Typography\n                    style={{\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Title Assignment:\n                  </Typography>\n                  <Stack direction=\"row\" spacing={2}>\n                    <CustomizedTextField\n                      value={title}\n                      handleTextFieldChange={setTitle}\n                    >\n                      Title\n                    </CustomizedTextField>\n                    <Typography\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        fontWeight: \"600\",\n                      }}\n                      variant=\"body1\"\n                      component=\"div\"\n                    >\n                      ‘Solution’ and ‘Peer Review’ will be added to title in\n                      their respective phases.\n                    </Typography>\n                  </Stack>\n                </Stack>\n              </CardContent>\n            </CustomizedCard>\n\n            {/* second box */}\n            <CustomizedCard sx={{ marginBottom: \"30px\" }}>\n              <CardContent>\n                <Stack direction=\"column\" spacing={2}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Solution Assignment Content:\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"div\">\n                    Please set the due date and upload instruction PDFs to be\n                    displayed within solution assignment.\n                  </Typography>\n                  <Stack\n                    direction=\"row\"\n                    spacing={2}\n                    sx={{ display: \"flex\", alignItems: \"center\" }}\n                  >\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                      <DateTimePicker\n                        renderInput={(props) => <TextField {...props} />}\n                        label=\"Solution Due Date\"\n                        value={solutionDueDate}\n                        onChange={(newValue) => {\n                          setSolutionDueDate(newValue);\n                        }}\n                      />\n                    </LocalizationProvider>\n                    <CustomizedPdfUploader\n                      id=\"solution\"\n                      pdfFileName={solutionPdfFileName}\n                      setPdfFileName={setSolutionPdfFileName}\n                      setPdfFile={setSolutionPdfFile}\n                    ></CustomizedPdfUploader>\n                  </Stack>\n                </Stack>\n              </CardContent>\n            </CustomizedCard>\n\n            {/* third box */}\n            <CustomizedCard sx={{ marginBottom: \"30px\" }}>\n              <CardContent>\n                <Stack direction=\"column\" spacing={2}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Peer Review Assignment Content:\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"div\">\n                    Please set the due date and upload instruction PDFs to be\n                    displayed within Peer Review Assignment. Please note that\n                    peer reviews must be manually sent for review by professors\n                    after quality checking.\n                  </Typography>\n                  <Stack\n                    direction=\"row\"\n                    spacing={2}\n                    sx={{ display: \"flex\", alignItems: \"center\" }}\n                  >\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                      <DateTimePicker\n                        renderInput={(props) => <TextField {...props} />}\n                        label=\"Peer Review Due Date\"\n                        value={prDueDate}\n                        onChange={(newValue) => {\n                          setPRDueDate(newValue);\n                        }}\n                      />\n                    </LocalizationProvider>\n                    <CustomizedPdfUploader\n                      id=\"peerReview\"\n                      pdfFileName={peerReviewPdfFileName}\n                      setPdfFileName={setPeerReviewPdfFileName}\n                      setPdfFile={setPeerReviewPdfFile}\n                    ></CustomizedPdfUploader>\n                  </Stack>\n                </Stack>\n              </CardContent>\n            </CustomizedCard>\n\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                margintop: \"10px\",\n              }}\n            >\n              <Stack direction=\"row\" spacing={2}>\n                <CustomizedButtons type2 model={\"type2\"} onClick={handleSaveDraft}>\n                Save Draft\n              </CustomizedButtons>\n              <CustomizedButtons onClick={handlePublish} type1 >\n                Publish\n              </CustomizedButtons>\n              </Stack>\n              \n            </Grid>\n          </CustomizedContainer>\n      </>\n    </CustomizedBody>\n  );\n}\n\nexport default AssignmentCreation;\n","import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { MdOutlineCancel, MdTurnedInNot } from \"react-icons/md\";\nimport { MdDelete } from \"react-icons/md\";\nimport { IoIosArrowDropdown, IoIosArrowDropup } from \"react-icons/io\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedModal from \"../../components/CustomizedModal\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Divider,\n  Box,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Stack,\n  TextField,\n  Modal,\n  Fade,\n  Collapse,\n  CircularProgress,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@mui/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\n\nimport Loading from \"../../components/Loading\";\nimport axios from \"axios\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport {\n  getTeamsByProfessor,\n  deleteStudentByProfessor,\n  deleteCourseByProfessor,\n  postNewStudentByProfessor,\n} from \"../../axios/APIRequests\";\n\nconst AddStudentBox = (props) => {\n  const {\n    classes,\n    handleAddStudent,\n    firstName,\n    lastName,\n    sID,\n    email,\n    setFirstName,\n    setLastName,\n    setSID,\n    setEmail,\n    handleCloseAddStudentBox,\n  } = props;\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"#EDEDED\",\n        borderRadius: \"10px\",\n        padding: \"15px\",\n      }}\n    >\n      <Grid container rowSpacing={1}>\n        <Grid item xs={12}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Typography\n              style={{\n                display: \"flex\",\n                textAlign: \"center\",\n                fontWeight: \"600\",\n              }}\n              variant=\"h6\"\n              component=\"div\"\n            >\n              Add Student to Course\n            </Typography>\n            <IconButton aria-label=\"delete\" onClick={handleCloseAddStudentBox}>\n              <MdOutlineCancel />\n            </IconButton>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <Stack\n            direction=\"row\"\n            spacing={3}\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <CustomizedTextField value={firstName} handleTextFieldChange={setFirstName}>\n              First Name\n            </CustomizedTextField>\n            <CustomizedTextField value={lastName} handleTextFieldChange={setLastName}>\n              Last Name\n            </CustomizedTextField>\n            <CustomizedTextField value={sID} handleTextFieldChange={setSID}>\n              Student ID\n            </CustomizedTextField>\n            <CustomizedTextField value={email} handleTextFieldChange={setEmail}>\n              Email\n            </CustomizedTextField>\n            <CustomizedButtons type1 height1 onClick={handleAddStudent}>\n              Add\n            </CustomizedButtons>\n          </Stack>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction StudentInfoViewPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [viewType, setViewType] = useState(\"Student List\");\n  const [isOpenedAddStudentBox, setIsOpenedAddStudentBox] = useState(false);\n  const [isCourseModalOpened, setIsCourseModalOpened] = useState(false);\n  const [isStudentModalOpened, setIsStudentModalOpened] = useState(false);\n  const [firstName, setFirstName] = useState();\n  const [lastName, setLastName] = useState();\n  const [sID, setSID] = useState();\n  const [email, setEmail] = useState();\n\n  const [deletedStudentID, setDeletedStudentID] = useState()\n\n  const handleOpenAddStudentBox = () => setIsOpenedAddStudentBox(true);\n  const handleCloseAddStudentBox = () => setIsOpenedAddStudentBox(false);\n  const handleOpenCourseModal = () => setIsCourseModalOpened(true);\n  const handleCloseCourseModal = () => setIsCourseModalOpened(false);\n  const handleOpenStudentModal = () => setIsStudentModalOpened(true);\n  const handleCloseStudentModal = () => setIsStudentModalOpened(false);\n  const [teamKeys, setTeamKeys] = useState({});\n\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState();\n  const [courseNames, setCourseNames] = React.useState([]);\n  const handleGetTeamsByProfessor = () => {\n    getTeamsByProfessor()\n    .then((value) => {\n      console.log(value);\n      setCourses(value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n  useEffect(() => {\n    var courseNameLists = [];\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course) => {\n        courseNameLists.push(course.code);\n      });\n      setCourseNames(courseNameLists);\n      console.log(\"`loading`\");\n      setLoading(false);\n    }\n  }, [courses]);\n\n  useEffect(() => {\n    handleGetTeamsByProfessor()\n  }, []);\n  const handleClick = (key) => () => {\n    setTeamKeys({ [key]: !teamKeys[key] });\n  };\n  const handleDeleteCourse = () => {\n    const deletedCourseID = courses[tab].courseID; //tab is the index of chosen course\n    deleteCourseByProfessor(deletedCourseID)\n      .then((value) => {\n        console.log(value);\n        handleCloseCourseModal(true)\n        handleGetTeamsByProfessor()\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const handleDeleteStudent = () => {\n    console.log(deletedStudentID);\n    deleteStudentByProfessor(deletedStudentID)\n      .then((value) => {\n        console.log(value);\n        handleCloseStudentModal(true)\n        handleGetTeamsByProfessor()\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const handleAddStudent = () => {\n    var newStudent = {\n      firstName: firstName,\n      lastName: lastName,\n      studentID: sID,\n      email: email,\n    };\n    var json = {\n      courseID: courses[tab].courseID,\n      student: newStudent,\n    };\n    const json_ = JSON.stringify(json);\n    postNewStudentByProfessor(json)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    setIsOpenedAddStudentBox(false);\n  };\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\">Courses</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Students & Teams\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Grid container sx={{ marginBottom: \"20px\" }}>\n                <Grid\n                  item\n                  xs={9}\n                  sx={{ display: \"flex\", alignItems: \"center\" }}\n                >\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"h6\"\n                    component=\"div\"\n                  >\n                    Student Information\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  xs={3}\n                  sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                >\n                  <CustomizedButtons\n                    type2\n                    model={\"add\"}\n                    onClick={()=>{\n                      handleOpenCourseModal()}}\n                  >\n                    Delete Course\n                  </CustomizedButtons>\n                </Grid>\n              </Grid>\n              <div>\n                <CustomizedTabs\n                  type2\n                  setTab={setTab}\n                  value={tab}\n                  fullWidth={\"fullWidth\"}\n                  labels={courseNames}\n                ></CustomizedTabs>\n                {courses.map((course, key) => {\n                  return <TabPanel value={tab} index={key}>\n                    <CustomizedCard>\n                      <CardHeader\n                        sx={{\n                          paddingBottom: \"0\",\n                        }}\n                        title={\n                          <>\n                            {isOpenedAddStudentBox === false ? (\n                              <Grid container>\n                                <Grid item xs={3}>\n                                  <CustomizedButtons\n                                    type3\n                                    sx={{ width: \"170px\" }}\n                                    model={\"add\"}\n                                    model={\"switch\"}\n                                    setViewType={setViewType}\n                                  >\n                                    {viewType}\n                                  </CustomizedButtons>\n                                </Grid>\n                                <Grid\n                                  item\n                                  xs={9}\n                                  sx={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\",\n                                  }}\n                                >\n                                  <CustomizedButtons\n                                    type3\n                                    model={\"add\"}\n                                    onClick={handleOpenAddStudentBox}\n                                  >\n                                    Add new student\n                                  </CustomizedButtons>\n                                </Grid>\n                              </Grid>\n                            ) : (\n                              <Collapse\n                                in={isOpenedAddStudentBox}\n                                timeout=\"auto\"\n                                unmountOnExit\n                              >\n                                <AddStudentBox\n                                  handleAddStudent={handleAddStudent}\n                                  setFirstName={setFirstName}\n                                  firstName={firstName}\n                                  setLastName={setLastName}\n                                  lastName={lastName}\n                                  setSID={setSID}\n                                  sID={sID}\n                                  setEmail={setEmail}\n                                  email={email}\n                                  handleCloseAddStudentBox={\n                                    handleCloseAddStudentBox\n                                  }\n                                ></AddStudentBox>\n                              </Collapse>\n                            )}\n                          </>\n                        }\n                      ></CardHeader>\n                      <CardContent\n                        sx={{\n                          paddingTop: \"0\",\n                        }}\n                      >\n                        {viewType === \"Student List\" ? (\n                          <List component=\"nav\">\n                            {course.students.length !== 0 ? (\n                              <>\n                                {course.students.map((student) => (\n                                  <ListItem\n                                    button\n                                    divider\n                                    secondaryAction={\n                                      <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"delete\"\n                                        onClick={()=>{\n                                          setDeletedStudentID(student.userID)\n                                          handleOpenStudentModal()}}\n                                      >\n                                        <MdDelete style={{\n                                            color: \"red\",\n                                            size: \"1.5em\",\n                                          }}/>\n                                      </IconButton>\n                                    }\n                                  >\n                                    <ListItemText\n                                      primary={`${student.firstName} ${student.lastName}`}\n                                    />\n                                    <ListItemText\n                                      sx={{\n                                        display: \"flex\",\n                                        justifyContent: \"flex-end\",\n                                      }}\n                                      primary=\"Added via CSV upload 08/13/21\"\n                                    />\n                                  </ListItem>\n                                ))}\n                              </>\n                            ) : (\n                              <ListItem>\n                                <ListItemText\n                                  sx={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\",\n                                  }}\n                                  primary=\"There is no student in this course\"\n                                />\n                              </ListItem>\n                            )}\n                          </List>\n                        ) : (\n                          <List component=\"nav\">\n                            {course.teams.map((team, key) => {\n                              const open = teamKeys[key] || false;\n                              return (\n                                <div key={key}>\n                                  <ListItem\n                                    button\n                                    divider\n                                    secondaryAction={\n                                      <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"delete\"\n                                      >\n                                        {open ? (\n                                          <IoIosArrowDropdown />\n                                        ) : (\n                                          <IoIosArrowDropup />\n                                        )}\n                                      </IconButton>\n                                    }\n                                    onClick={handleClick(key)}\n                                  >\n                                    <ListItemText\n                                      primary={`Team ${team.teamName}`}\n                                    />\n                                    <ListItemText\n                                      sx={{\n                                        display: \"flex\",\n                                        justifyContent: \"flex-end\",\n                                      }}\n                                      primary={`${team.students.length} team members`}\n                                    />\n                                  </ListItem>\n\n                                  <Collapse\n                                    in={open}\n                                    timeout=\"auto\"\n                                    unmountOnExit\n                                  >\n                                    <List component=\"div\" disablePadding>\n                                      <>\n                                        {team.students.map((student, key) => (\n                                          <ListItem\n                                            key={key}\n                                            button\n                                            sx={{ pl: 4 }}\n                                            divider\n                                            secondaryAction={\n                                              <IconButton\n                                                style={{color:\"red\"}}\n                                                edge=\"end\"\n                                                aria-label=\"delete\"\n                                                onClick={()=>{\n                                                  setDeletedStudentID(student.userID)\n                                                  handleOpenStudentModal()}}\n                                              >\n                                                <MdDelete />\n                                              </IconButton>\n                                            }\n                                          >\n                                            <ListItemText\n                                              primary={`${student.firstName} ${student.lastName}`}\n                                            />\n                                          </ListItem>\n                                        ))}\n                                      </>\n                                    </List>\n                                  </Collapse>\n                                </div>\n                              );\n                            })}\n                          </List>\n                        )}\n                      </CardContent>\n                    </CustomizedCard>\n                  </TabPanel>\n                })}\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n      <CustomizedModal\n        modalType={\"course\"}\n        isCourseModalOpened={isCourseModalOpened}\n        handleCloseCourseModal={handleCloseCourseModal}\n        handleDeleteCourse={handleDeleteCourse}\n      />\n      <CustomizedModal\n        modalType={\"student\"}\n        isStudentModalOpened={isStudentModalOpened}\n        handleCloseStudentModal={handleCloseStudentModal}\n        handleDeleteStudent={handleDeleteStudent}\n      />\n    </CustomizedBody>\n  );\n}\n\nexport default StudentInfoViewPage;\n","import { Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { BiCheckCircle } from \"react-icons/bi\";\n\nfunction SuccessfulNotification() {\n  return (\n    <div\n      style={{\n        width: \"400px\",\n        height: \"50px\",\n        backgroundColor: \"#fff\",\n        overflow: \"hidden\",\n        padding: \"0 10px\",\n        border: \"3px solid #0DC38D\",\n        borderRadius: \"10px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <BiCheckCircle size=\"2em\" style={{ marginRight: \"10px\", color: \"#0DC38D\" }} />\n      <Typography\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          fontWeight: \"600\",\n        }}\n        variant=\"body1\"\n        component=\"div\"\n      >\n      Results successfully sent to students\n      </Typography>\n    </div>\n  );\n}\n\nexport default SuccessfulNotification;\n","import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport SuccessfulNotification from \"../../components/SuccessfulNotification\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\n\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport { getAssignmentsByProfessor } from \"../../axios/APIRequests\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction CourseResultPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [filterType, setFilterType] = useState(\"All\");\n  const [courses, setCourses] = useState();\n\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n  const [loading, setLoading] = React.useState(true);\n  const [courseNames, setCourseNames] = React.useState([]);\n\n  useEffect(() => {\n    var nameLists = [];\n\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course) => {\n        nameLists.push(course.code);\n      });\n      setCourseNames(nameLists);\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getAssignmentsByProfessor()\n      .then((value) => {\n        console.log(value);\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  // useEffect(() => {\n  //   console.log(filterType);\n  //   const filteredItems = courses.assignments.filter((assignment) => {\n  //     return item.type == filterType || filterType === \"All\";\n  //   });\n  //   setItems(filteredItems);\n  // }, [filterType]);\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Course Results\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"h6\"\n                    component=\"div\"\n                  >\n                    Quality Check\n                  </Typography>\n\n              </Stack>\n              <div>\n                <CustomizedTabs\n                  type3\n                  setTab={setTab}\n                  value={tab}\n                  fullWidth={\"fullWidth\"}\n                  labels={courseNames}\n                ></CustomizedTabs>\n                {courses.map((course, key) => (\n                  <TabPanel value={tab} index={key}>\n                    <CustomizedCard>\n                      <CardHeader\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                        title={\n                          <Grid container>\n                            <Grid\n                              item\n                              xs={12}\n                              sx={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                              }}\n                            >\n                              <CustomizedButtons\n                                type3\n                                model={\"radio2\"}\n                                fullwidth\n                                filterType={filterType}\n                                setFilterType={setFilterType}\n                              >\n                                Filter Results\n                              </CustomizedButtons>\n                            </Grid>\n                          </Grid>\n                        }\n                      ></CardHeader>\n                      <CardContent\n                        sx={{\n                          paddingTop: \"0\",\n                        }}\n                      >\n                        {course.assignments.map((assignment) => {\n                          return (\n                            <>\n                              {!assignment.draft && (\n                                <>\n                                  {(filterType === \"All\" ||\n                                    (filterType === \"Completed\") === false) && ( //assignment.solution.isReviewed\n                                    <ListItem\n                                      button\n                                      divider\n                                      onClick={() =>\n                                        history.push(\n                                          \"/studentsolutionqualitycheck\",\n                                          {\n                                            assignmentID:\n                                              assignment.assignmentID,\n                                          }\n                                        )\n                                      }\n                                      secondaryAction={\n                                        <IconButton edge=\"end\">\n                                          <BsArrowRightCircle />\n                                        </IconButton>\n                                      }\n                                    >\n                                      <ListItemText\n                                        sx={{ width: \"30%\" }}\n                                        primary={`${assignment.title} Solutions`}\n                                      />\n\n                                      <>\n                                        {\n                                          //assignment.solution.isReviewed\n                                          assignment.reviewStage === false ? (\n                                            <>\n                                              <ListItemText\n                                                sx={{\n                                                  display: \"flex\",\n                                                  justifyContent: \"center\",\n                                                }}\n                                                primary={`Due ${new Date(\n                                                  assignment.solutionDueDateTime\n                                                ).toLocaleString()}`}\n                                              />\n                                              <ListItemText\n                                                primary={\n                                                  <div\n                                                    style={{\n                                                      display: \"flex\",\n                                                      alignItems: \"center\",\n                                                      justifyContent:\n                                                        \"flex-end\",\n                                                    }}\n                                                  >\n                                                    <FiberManualRecordIcon\n                                                      sx={{\n                                                        color: \"#0DC38D\",\n                                                        marginRight: \"10px\",\n                                                      }}\n                                                      fontSize=\"medium\"\n                                                    />{\" \"}\n                                                    <>Needs Review</>\n                                                  </div>\n                                                }\n                                              />\n                                            </>\n                                          ) : (\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Completed ${new Date(\n                                                assignment.solutionDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          )\n                                        }\n                                      </>\n                                    </ListItem>\n                                  )}\n                                  {assignment.reviewStage && (\n                                    <>\n                                      {(filterType === \"All\" ||\n                                        (filterType === \"Completed\") ===\n                                          false) && ( //assignment.peerreview.isReviewed\n                                        <ListItem\n                                          button\n                                          divider\n                                          onClick={() =>\n                                            history.push(\n                                              \"/studentpeerreviewqualitycheck\",\n                                              {\n                                                assignmentID:\n                                                  assignment.assignmentID,\n                                              }\n                                            )\n                                          }\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            sx={{ width: \"30%\" }}\n                                            primary={`${assignment.title} Peer Reviews`}\n                                          />\n\n                                          <>\n                                            {\n                                              //assignment.peerreview.isReviewed\n                                              assignment.reviewStage ===\n                                              false ? (\n                                                <>\n                                                  <ListItemText\n                                                    sx={{\n                                                      display: \"flex\",\n                                                      justifyContent: \"center\",\n                                                    }}\n                                                    primary={`submissions closed ${new Date(\n                                                      assignment.peerReviewDueDateTime\n                                                    ).toLocaleString()}`}\n                                                  />\n\n                                                  <ListItemText\n                                                    primary={\n                                                      <div\n                                                        style={{\n                                                          display: \"flex\",\n                                                          alignItems: \"center\",\n                                                          justifyContent:\n                                                            \"flex-end\",\n                                                        }}\n                                                      >\n                                                        <FiberManualRecordIcon\n                                                          sx={{\n                                                            color: \"#0DC38D\",\n                                                            marginRight: \"10px\",\n                                                          }}\n                                                          fontSize=\"medium\"\n                                                        />{\" \"}\n                                                        <>Needs Review</>\n                                                      </div>\n                                                    }\n                                                  />\n                                                </>\n                                              ) : (\n                                                <ListItemText\n                                                  sx={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-end\",\n                                                  }}\n                                                  primary={`Completed ${new Date(\n                                                    assignment.peerReviewDueDateTime\n                                                  ).toLocaleString()}`}\n                                                />\n                                              )\n                                            }\n                                          </>\n                                        </ListItem>\n                                      )}\n                                    </>\n                                  )}\n                                </>\n                              )}\n                            </>\n                          );\n                        })}\n                      </CardContent>\n                    </CustomizedCard>\n                  </TabPanel>\n                ))}\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default CourseResultPage;\n","import React, {useState, useEffect} from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { primaryColor, darkColor, grayColor, greenColor, whiteColor, blueColor } from \"../styles/Style\";\nimport { borderRadius, Box } from \"@mui/system\";\n\nexport default function StickyHeadTable({jsonData}) {\n  console.log(jsonData)\n  const [arrayData, setarrayData] = useState([]);\n  useEffect(() => {\n      var result = [];\n      for(var i in jsonData){\n        var row = [];\n        for(var j in jsonData[i]){\n          row.push(jsonData[i][j]);\n        }\n        result.push(row)\n      }\n      setarrayData(result)\n  }, [jsonData])\n  console.log(arrayData)\n\n  const label_1 = [\n    { id: \"name\", label: \"Team Name\", align: \"center\", width: 20 },\n  ];\n  const label_2 = [\n    {\n      id: \"avggradereceived\",\n      label: \"Avg Grade RECEIVED\",\n      align: \"center\",\n      width: 20,\n    },\n  ];\n  const headers = arrayData.map((index, i) => {\n    return {\n      key: i,\n      id: index[0],\n      label: index[0],\n      width: 20,\n      align: \"center\",\n      format: (value) => value.toLocaleString(\"en-US\"),\n    };\n  });\n\n  const columns = label_1.concat(headers);\n  return (\n    <Box sx={{ width: \"100%\"}}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\n          <TableHead>\n            <TableRow >\n              {columns.map((column, indexCol) => {\n                let bgColor;\n                let color;\n                if (indexCol == columns.length - 1) {\n                  bgColor = greenColor\n                  color = whiteColor\n                }\n                else{\n                  bgColor = grayColor\n                  color = darkColor\n                }\n                return <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{\n                    width: \"10px\",\n                    height: \"10px\",\n                    border: \"0.01px solid #000\",\n                    backgroundColor: bgColor,\n                    color: color,\n                  }}\n                >\n                  {column.label}\n                </TableCell>\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {arrayData\n              .map((row, indexRow) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} style={{\n                    width: \"10px\",\n                    height: \"10px\"}}>\n                    {columns.map((column, indexCol) => {\n                      let value = row[indexCol];\n                      let bgColor;\n                      let color;\n                      {\n                        if(indexCol == indexRow + 1 || indexCol == 0 && indexRow != arrayData.length - 1){\n                          bgColor = primaryColor\n                        }\n                        else {\n                          if (indexCol == columns.length - 1 && indexRow != arrayData.length - 1) {\n                            bgColor = greenColor\n                            color = whiteColor\n                          }\n                          else {\n                            if (indexRow == arrayData.length - 1 && indexCol != columns.length - 1) {\n                              bgColor = blueColor\n                              color = whiteColor\n                            }\n                            else {\n                              bgColor = whiteColor\n                            }\n                          }\n                        }\n                      }\n                      return (\n                        <TableCell\n                          key={column.id}\n                          align={column.align}\n                          style={{\n                            width: \"10px\",\n                            height: \"10px\",\n                            color: color,\n                            backgroundColor: bgColor,\n                            border: \"0.01px solid #000\",\n                          }}\n                        >\n                          {value != 0 ? value : \"\"}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n","import { Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { CSVReader } from \"react-papaparse\";\n\nfunction CSVReader2({ setjsonData }) {\n  const handleOnDrop = (data) => {\n    console.log(\"---------------------------\");\n\n    //console.log(data)\n    const combinedData = data.map((object) => {\n      return object.data;\n    });\n    //console.log(combinedData);\n    setjsonData(combinedData);\n    console.log(\"---------------------------\");\n  };\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = (data) => {\n    console.log(\"---------------------------\");\n    setjsonData([]);\n    console.log(\"---------------------------\");\n  };\n  return (\n    <div style={{ width: \"100%\" }}>\n    <CSVReader\n      onDrop={handleOnDrop}\n      onError={handleOnError}\n      addRemoveButton\n      onRemoveFile={handleOnRemoveFile}\n      style={{\n        dropArea: {\n          borderColor: \"transparent\",\n          borderRadius: 20,\n        },\n        dropAreaActive: {\n          borderColor: \"red\",\n        },\n        dropFile: {\n          width: 200,\n          height: 80,\n          background: \"#347DEB\",\n        },\n        fileSizeInfo: {\n          display: \"none\",\n          color: \"#000\",\n          backgroundColor: \"transparent\",\n          lineHeight: 1,\n          marginBottom: \"0.5em\",\n          padding: \"0 0.4em\",\n        },\n        fileNameInfo: {\n          color: \"#fff\",\n          backgroundColor: \"transparent\",\n          fontSize: \"1em\",\n          lineHeight: 1,\n          marginBottom: \"0.2em\",\n        },\n        removeButton: {\n          color: \"#347DEB\",\n          backgroundColor: \"#fff\",\n        },\n        progressBar: {\n          backgroundColor: \"#fff\",\n        },\n      }}\n    >\n      <Typography\n        style={{ fontWeight: \"600\" }}\n        variant=\"body1\"\n        component=\"div\"\n      >\n        Drop CSV file here or click to upload\n      </Typography>\n    </CSVReader>\n  </div>\n  );\n}\nexport default CSVReader2;\n","import React, { useState } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { MdOutlineCancel } from \"react-icons/md\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedTables from \"../../components/CustomizedTables\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  Grid,\n  Breadcrumbs\n} from \"@mui/material\";\nimport CSVUploader from \"../../components/CSVUploader\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@mui/styles\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n\nfunction ResultsViewerPage({ history }) {\n  const [jsonData, setjsonData] = useState([]);\n  console.log(jsonData)\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n      <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\">Courses</Typography>\n          <Typography color=\"text.primary\">Course Name</Typography>\n          <Typography color=\"text.primary\" style={{fontWeight:\"600\"}}>New Assignment</Typography>\n        </Breadcrumbs>\n        <Grid container sx={{ marginBottom: \"20px\" }}>\n          <Grid item xs={9}>\n            <Typography\n              style={{\n                display: \"flex\",\n                textAlign: \"center\",\n                fontWeight: \"600\",\n              }}\n              variant=\"h6\"\n              component=\"div\"\n            >\n              Student Information\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            xs={3}\n            sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            <CustomizedButtons type3 model={\"checked\"}>\n              Send Results\n            </CustomizedButtons>\n          </Grid>\n        </Grid>\n        <div>\n          <CustomizedCard>\n            <CardContent\n              sx={{\n                paddingTop: \"0\",\n              }}\n            >\n              <CSVUploader setjsonData={setjsonData}></CSVUploader>\n              <CustomizedTables\n                jsonData={jsonData.slice(0, -1)}\n              ></CustomizedTables>\n            </CardContent>\n          </CustomizedCard>\n        </div>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default ResultsViewerPage;\n","import b64toBlob from \"b64-to-blob\";\n\nexport const base64ArrayBuffer = (arrayBuffer) => {\n  var base64 = \"\";\n  var encodings =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  var bytes = new Uint8Array(arrayBuffer);\n  var byteLength = bytes.byteLength;\n  var byteRemainder = byteLength % 3;\n  var mainLength = byteLength - byteRemainder;\n\n  var a, b, c, d;\n  var chunk;\n\n  // Main loop deals with bytes in chunks of 3\n  for (var i = 0; i < mainLength; i = i + 3) {\n    // Combine the three bytes into a single integer\n    chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n\n    // Use bitmasks to extract 6-bit segments from the triplet\n    a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n    b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\n    c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\n    d = chunk & 63; // 63       = 2^6 - 1\n\n    // Convert the raw binary segments to the appropriate ASCII encoding\n    base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\n  }\n\n  // Deal with the remaining bytes and padding\n  if (byteRemainder === 1) {\n    chunk = bytes[mainLength];\n\n    a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n\n    // Set the 4 least significant bits to zero\n    b = (chunk & 3) << 4; // 3   = 2^2 - 1\n\n    base64 += encodings[a] + encodings[b] + \"==\";\n  } else if (byteRemainder === 2) {\n    chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\n\n    a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n    b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\n\n    // Set the 2 least significant bits to zero\n    c = (chunk & 15) << 2; // 15    = 2^4 - 1\n\n    base64 += encodings[a] + encodings[b] + encodings[c] + \"=\";\n  }\n\n  return base64;\n};\n\nconst openNewTab = (response) => {\n  var contentType = \"application/pdf\";\n  var sliceSize = 512;\n\n  var byteCharacters = atob(response);\n  var byteArrays = [];\n\n  for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    var byteNumbers = new Array(slice.length);\n    for (var i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    var byteArray = new Uint8Array(byteNumbers);\n\n    byteArrays.push(byteArray);\n  }\n\n  var blob = new Blob(byteArrays, { type: contentType });\n  blob = b64toBlob(response, contentType);\n  var blobUrl = URL.createObjectURL(blob);\n  return blobUrl;\n};\n\nexport const handleConvertByteArrayToPdf = (byteArr) => {\n  if (byteArr === \"\") {\n    alert(\"Input must not be empty !\");\n  } else {\n    \n    let data = byteArr.toString().trim().replace(/ /g, \"\");\n    data.replace(/\\r?\\n|\\r/g, \"\");\n    let arrData = JSON.parse(\"[\" + data + \"]\");\n    const base64 = base64ArrayBuffer(arrData);\n    return openNewTab(base64);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport { FcHighPriority } from \"react-icons/fc\";\nimport { GoTriangleDown, GoTriangleUp } from \"react-icons/go\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n//PDF\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport PDFControlBar from \"../../components/PDFhandling/PDFControlBar\";\n\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Collapse,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport { getQualityCheckSolutionByProfessor, rejectSolutionByProfessor, sendReviewByProfessor,postNewSolutionByStudent } from \"../../axios/APIRequests\";\nimport { handleConvertByteArrayToPdf } from \"../../utils/byteArrayToPDF\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction StudentSolutionQualityCheckPage({ history, location }) {\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n  const [openErrors, setOpenErrors] = React.useState(false);\n  const [submissionPdfFile, setSubmissionPdfFile] = useState();\n  const [solutionPdfFileName, setSolutionPdfFileName] = useState(\"\");\n  const handleClick = () => {\n    setOpenErrors(!openErrors);\n  };\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  const [tab, setTab] = React.useState(0);\n  const [assignment, setAssignment] = useState();\n  const [linkDownload, setLinkDownload] = useState();\n  const [submittedTeam, setSubmittedTeam] = useState(0)\n  const [totalTeam, setTotalTeam] = useState(0)\n\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n  };\n  const [loading, setLoading] = useState(true);\n  // for submit event\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n  const handleGetQualityCheckSolutionByProfessor = (assignmentID) => {\n    getQualityCheckSolutionByProfessor(assignmentID)\n    .then((value) => {\n      console.log(value);\n      setAssignment(value);\n      if (value !== undefined) {\n        setLoading(false);\n        setSubmittedTeam(value.teams.filter((team) => team.submission !== undefined).length)\n        setTotalTeam(value.teams.length)\n      }\n      console.log(value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n  useEffect(() => {\n    if (location.state.assignmentID == undefined) return;\n    var assignmentID = location.state.assignmentID;\n    console.log(assignmentID);\n    handleGetQualityCheckSolutionByProfessor(assignmentID)\n  }, []);\n  useEffect(() => {\n    if(assignment === undefined) return\n    if(assignment.teams[tab].submission !== undefined){\n      setLinkDownload(handleConvertByteArrayToPdf(assignment.teams[tab].submission.pdfDoc));\n    }\n  }, [tab])\n  const handleSendForReview = () => {\n    sendReviewByProfessor(assignment.assignmentID)\n    .then(function (response) {\n      console.log(response);\n      history.push(\"./courseresult\");\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handleReupload = (teamId) => {\n    if (submissionPdfFile.length === 0) {\n      alert(\"Please upload your pdf file before submitting !!!\")\n    } else {\n      var newSubmission = {\n        teamID: teamId,\n        pdfDoc: submissionPdfFile,\n        seen: false,\n        assignmentID: assignment.assignmentID,\n      };\n\n      const json = JSON.stringify(newSubmission);\n      console.log(newSubmission);\n      postNewSolutionByStudent(newSubmission)\n        .then(function (response) {\n          console.log(response);\n          var assignmentID = location.state.assignmentID;\n          setSubmissionPdfFile()\n          setSolutionPdfFileName(\"\")\n          handleGetQualityCheckSolutionByProfessor(assignmentID)\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }\n  const handleReject = (teamID) => {\n    console.log(teamID);\n    rejectSolutionByProfessor(assignment.assignmentID,teamID)\n    .then(function (response) {\n      console.log(response);\n      \n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Student Dashboard</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Solution Results\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Stack\n                direction=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                mb={3}\n              >\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"h6\"\n                  component=\"div\"\n                >\n                  Solution Quality Check\n                </Typography>\n                <CustomizedButtons\n                  type1\n                  model={\"checked\"}\n                  onClick={handleSendForReview}\n                >\n                  Send for Reviews\n                </CustomizedButtons>\n              </Stack>\n              <div>\n                <CustomizedCard>\n                  <CardContent\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <Stack>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                          fontWeight: \"600\",\n                        }}\n                        variant=\"body1\"\n                        component=\"div\"\n                      >\n                        {`${assignment.title} Solution`}\n                      </Typography>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                        }}\n                        variant=\"body2\"\n                        component=\"div\"\n                      >\n                        {`Submissions closed ${new Date(\n                          assignment.solutionDueDateTime\n                        ).toLocaleString()}`}\n                      </Typography>\n                    </Stack>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                          fontWeight: \"600\",\n                        }}\n                        variant=\"body2\"\n                        component=\"div\"\n                      >\n                        {`${submittedTeam} out of ${totalTeam} teams submitted`}\n                      </Typography>\n                    </div>\n                  </CardContent>\n                </CustomizedCard>\n                <Stack direction=\"row\" justifyContent=\"space-between\" mt={3}>\n                  {assignment.teams.map((team, key) => {\n                    return (\n                      <TabPanel value={tab} index={key} style={{ flex: 1 }}>\n                        <CustomizedCard>\n                          {team.submission !== undefined ? (\n                            <CardContent>\n                              <Stack direction=\"column\">\n                                <Stack\n                                  direction=\"row\"\n                                  justifyContent=\"space-between\"\n                                  alignItems=\"center\"\n                                  mb={2}\n                                >\n                                  <Stack direction=\"column\" spacing={1}>\n                                    <Typography\n                                      style={{\n                                        display: \"flex\",\n                                        textAlign: \"center\",\n                                        fontWeight: \"600\",\n                                      }}\n                                      variant=\"body1\"\n                                      component=\"div\"\n                                    >\n                                      {`Team ${team.teamName}`}\n                                    </Typography>\n                                    <Typography\n                                      style={{\n                                        display: \"flex\",\n                                        textAlign: \"center\",\n                                      }}\n                                      variant=\"body1\"\n                                      component=\"div\"\n                                    >\n                                      Submitted at{\" \"}\n                                      {new Date(\n                                        team.submission.submissionTime\n                                      ).toLocaleString()}\n                                    </Typography>\n                                  </Stack>\n                                  <Stack\n                                    direction=\"column\"\n                                    spacing={1}\n                                    alignItems=\"flex-end\"\n                                  >\n                                    <CustomizedButtons\n                                      type3\n                                      model={\"download\"}\n                                      href={linkDownload}\n                                      download={\"Solution.pdf\"}\n                                    >\n                                      Download Solutions\n                                    </CustomizedButtons>\n                                    <Stack\n                                      sx={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                        justifyContent: \"space-between\",\n                                        alignItems: \"center\",\n                                        width: \"130px\",\n                                        cursor: \"pointer\",\n                                      }}\n                                      onClick={handleClick}\n                                    >\n                                      <FcHighPriority size=\"1.5em\" />\n                                      <Typography\n                                        style={{\n                                          display: \"flex\",\n                                          textAlign: \"center\",\n                                          fontWeight: \"600\",\n                                        }}\n                                        variant=\"body2\"\n                                        component=\"div\"\n                                      >\n                                        View Errors\n                                      </Typography>\n                                      {openErrors === false ? (\n                                        <GoTriangleDown size=\"1em\" />\n                                      ) : (\n                                        <GoTriangleUp size=\"1em\" />\n                                      )}\n                                    </Stack>\n                                  </Stack>\n                                </Stack>\n                                <Collapse\n                                  in={openErrors}\n                                  timeout=\"auto\"\n                                  unmountOnExit\n                                >\n                                  <div\n                                    style={{\n                                      backgroundColor: \"#F2F4F5\",\n                                      borderRadius: \"10px\",\n                                      padding: \"20px 20px 30px 30px\",\n                                    }}\n                                  >\n                                    <Typography\n                                      style={{\n                                        display: \"flex\",\n                                        textAlign: \"center\",\n                                        fontWeight: \"600\",\n                                      }}\n                                      variant=\"body1\"\n                                      component=\"div\"\n                                    >\n                                      Error Found\n                                    </Typography>\n                                    <List>\n                                      {team.submission.listOfQCWordViolations\n                                        .split(\",\")\n                                        .map((word, key) => (\n                                          <ListItem key={key}>\n                                            <Typography\n                                              style={{\n                                                display: \"flex\",\n                                                textAlign: \"center\",\n                                              }}\n                                              variant=\"body2\"\n                                              component=\"div\"\n                                            >\n                                              {word}\n                                            </Typography>\n                                          </ListItem>\n                                        ))}\n                                    </List>\n                                    <Stack direction=\"row\" spacing={3}>\n                                      {submissionPdfFile !== undefined && (\n                                        <CustomizedButtons\n                                        type1\n                                        height1\n                                        onClick={() => {\n                                          handleReupload(team.teamID);\n                                        }}\n                                      >\n                                        Submit\n                                      </CustomizedButtons>\n                                      )}\n                                      <CustomizedPdfUploader\n                                        id=\"submission\"\n                                        value={submissionPdfFile}\n                                        setPdfFile={setSubmissionPdfFile}\n                                        pdfFileName={solutionPdfFileName}\n                                        setPdfFileName={setSolutionPdfFileName}\n                                      ></CustomizedPdfUploader>\n                                      <CustomizedButtons\n                                        type2\n                                        height1\n                                        onClick={() => {\n                                          handleReject(team.teamID);\n                                        }}\n                                      >\n                                        Reject PDF\n                                      </CustomizedButtons>\n                                    </Stack>\n                                  </div>\n                                </Collapse>\n                              </Stack>\n                              {team.submission.pdfDoc && (\n                                <Stack\n                                  direction=\"row\"\n                                  justifyContent=\"center\"\n                                  alignItems=\"center\"\n                                  p={1}\n                                  height={825}\n                                >\n                                  <CustomizedButtons\n                                    model={\"arrowL\"}\n                                    style={{\n                                      color: \"black\",\n                                      marginBottom: \"10px\",\n                                    }}\n                                    onClick={goToPreviousPage}\n                                  ></CustomizedButtons>\n                                  <Document\n                                    file={{ data: team.submission.pdfDoc }}\n                                    onLoadSuccess={onDocumentLoadSuccess}\n                                  >\n                                    <Page\n                                      pageNumber={pageNumber}\n                                      scale={scale}\n                                    />\n                                  </Document>\n                                  <CustomizedButtons\n                                    model={\"arrow\"}\n                                    style={{\n                                      color: \"black\",\n                                      marginBottom: \"10px\",\n                                    }}\n                                    onClick={goToNextPage}\n                                  ></CustomizedButtons>\n                                </Stack>\n                              )}\n                            </CardContent>\n                          ) : (\n                            <CardContent>\n                              <List>\n                                <div\n                                  style={{\n                                    display: \"flex\",\n                                    marginBottom: \"20px\",\n                                    flexDirection: \"column\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Stack direction=\"row\" spacing={1}>\n                                    <Typography\n                                      style={{\n                                        display: \"flex\",\n                                        textAlign: \"center\",\n                                        fontWeight: \"600\",\n                                      }}\n                                      variant=\"body1\"\n                                      component=\"div\"\n                                    >\n                                      {`Team ${team.teamName}`}\n                                    </Typography>\n                                  </Stack>\n                                  <Typography\n                                    style={{\n                                      display: \"flex\",\n                                      textAlign: \"center\",\n                                      fontWeight: \"400\",\n                                    }}\n                                    variant=\"body1\"\n                                    component=\"div\"\n                                  >\n                                    This team has not submitted their solution\n                                    yet !!!\n                                  </Typography>\n                                </div>\n                              </List>\n                            </CardContent>\n                          )}\n                        </CustomizedCard>\n                      </TabPanel>\n                    );\n                  })}\n                  <CustomizedCard\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      height: \"250px\",\n                      marginLeft: \"20px\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <Tabs\n                      value={tab}\n                      orientation=\"vertical\"\n                      onChange={handleChange}\n                      variant=\"scrollable\"\n                      scrollButtons\n                      allowScrollButtonsMobile\n                    >\n                      {assignment.teams.map((team, key) => (\n                        <Tab label={`Team ${team.teamName}`} />\n                      ))}\n                    </Tabs>\n                  </CustomizedCard>\n                </Stack>\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default StudentSolutionQualityCheckPage;\n","import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport { FcHighPriority } from \"react-icons/fc\";\nimport { GoTriangleDown, GoTriangleUp } from \"react-icons/go\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n//PDF\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport { handleConvertByteArrayToPdf } from \"../../utils/byteArrayToPDF\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Collapse,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n  Tabs,\n  Tab,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedTables from \"../../components/CustomizedTables\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport {\n  getQualityCheckPeerReviewByProfesssor,\n  sendFeedBackByProfessor,\n  rejectPeerReviewByProfessor,\n  postNewPeerReviewByStudent,\n} from \"../../axios/APIRequests\";\nimport { IoIosArrowDropdown, IoIosArrowDropup } from \"react-icons/io\";\nimport { GrDocumentMissing } from \"react-icons/gr\";\nimport { BsFillFileEarmarkExcelFill } from \"react-icons/bs\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction StudentPeerReviewQualityCheckPage({ history, location }) {\n  const [tab, setTab] = useState(0);\n  const [teamTab, setTeamTab] = useState(0);\n  const [submissionTab, setSubmissionTab] = useState(0);\n  //const [jsonData, setjsonData] = useState([]);\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const [linkDownload, setLinkDownload] = useState();\n  const [openErrors, setOpenErrors] = React.useState(false);\n  const [assignment, setAssignment] = useState();\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  const [teamKeys, setTeamKeys] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const [submissionPdfFile, setSubmissionPdfFile] = useState();\n  const [peerReviewPdfFileName, setPeerReviewPdfFileName] = useState(\"\");\n  const [submissionArray, setSubmissionArray] = useState([]);\n  const handleClick = () => {\n    setOpenErrors(!openErrors);\n  };\n  const handleChangeTeamTab = (event, newValue) => {\n    setTeamTab(newValue);\n  };\n  const handleChangeSubmissionTab = (event, newValue) => {\n    setSubmissionTab(newValue);\n  };\n  useEffect(() => {\n    if (location.state.assignmentID == undefined) return;\n    var assignmentID = location.state.assignmentID;\n    console.log(assignmentID);\n    getQualityCheckPeerReviewByProfesssor(assignmentID)\n      .then((value) => {\n        console.log(value);\n        setAssignment(value);\n        if (value !== undefined) {\n          setLoading(false);\n        }\n        console.log(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  useEffect(() => {\n    if (assignment !== undefined) {\n      if (assignment.teams[teamTab].peerReview[submissionTab] !== undefined) {\n        console.log(assignment.teams[teamTab].peerReview[submissionTab].pdfDoc);\n        setLinkDownload(\n          handleConvertByteArrayToPdf(\n            assignment.teams[teamTab].peerReview[submissionTab].pdfDoc\n          )\n        );\n      }\n    }\n  }, [assignment, teamTab, submissionTab]);\n  // for submit event\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n  const handleExpand = (key) => () => {\n    setTeamKeys({ [key]: !teamKeys[key] });\n  };\n  const handleSendForFeedBack = () => {\n    sendFeedBackByProfessor(assignment.assignmentID)\n      .then(function (response) {\n        console.log(response);\n        history.push(\"./courseresult\");\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const handleReupload = (teamId) => {\n    // var newSubArray = [];\n    // if (submissionPdfFile.length === 0) {\n    //   alert(\"Please upload your pdf file before submitting !!!\");\n    // } else {\n    //     var newSubmission = {\n    //       teamID: teamId,\n    //       assignmentID: peerReviewInfo.assignmentID,\n    //       pdfDoc: submission.pdfDoc,\n    //       score: submission.score,\n    //       submissionID: peerReviewInfo.teams[index].submission.submissionID,\n    //     };\n    //     newSubArray.push(newSubmission);\n    //   const json = JSON.stringify(newSubArray);\n    //   console.log(newSubArray);\n    //   postNewPeerReviewByStudent(newSubArray)\n    //     .then(function (response) {\n    //       console.log(response);\n    //       history.push(\"/seeallassignment\");\n    //     })\n    //     .catch(function (error) {\n    //       console.log(error);\n    //     });\n    // }\n  };\n  const handleReject = (teamID) => {\n    console.log(teamID);\n    rejectPeerReviewByProfessor(assignment.assignmentID, teamID)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Student Dashboard</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Peer Review Results\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Stack\n                direction=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                mb={3}\n              >\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"h6\"\n                  component=\"div\"\n                >\n                  Peer Review Quality Check\n                </Typography>\n                <CustomizedButtons\n                  type1\n                  model={\"checked\"}\n                  onClick={handleSendForFeedBack}\n                >\n                  Send Feedback\n                </CustomizedButtons>\n              </Stack>\n              <Stack>\n                <CustomizedCard style={{ marginBottom: \"20px\" }}>\n                  <CardContent\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Stack>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                          fontWeight: \"600\",\n                        }}\n                        variant=\"body1\"\n                        component=\"div\"\n                      >\n                        {`${assignment.title} Peer Review`}\n                      </Typography>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                        }}\n                        variant=\"body2\"\n                        component=\"div\"\n                      >\n                        {`Submissions closed ${new Date(\n                          assignment.peerReviewDueDateTime\n                        ).toLocaleString()}`}\n                      </Typography>\n                    </Stack>\n                    <CustomizedButtons\n                      type3\n                      model={\"download\"}\n                      href={linkDownload}\n                      download={\"PeerReviewInstructor.pdf\"}\n                    >\n                      Download Peer Review Instruction\n                    </CustomizedButtons>\n                  </CardContent>\n                </CustomizedCard>\n                <Stack direction=\"row\" alignItems=\"flex-start\">\n                  <Stack sx={{ flex: 1 }}>\n                    <CustomizedTabs\n                      type3\n                      setTab={setTab}\n                      value={tab}\n                      labels={[\"Distributions\", \"Peer Reviews\"]}\n                    ></CustomizedTabs>\n                    <TabPanel value={tab} index={0}>\n                      <CustomizedCard>\n                        <CardContent>\n                          <Stack\n                            direction=\"column\"\n                            mb={1}\n                            justifyContent=\"space-between\"\n                          >\n                            <Typography\n                              style={{\n                                display: \"flex\",\n                                textAlign: \"center\",\n                                fontWeight: \"600\",\n                              }}\n                              variant=\"body1\"\n                              component=\"div\"\n                            >\n                              View each team's average score. Expand a team to\n                              view each peer review score received.\n                            </Typography>\n                            <List component=\"nav\">\n                              {assignment.outlier.map((team, key) => {\n                                const open = teamKeys[key] || false;\n                                return (\n                                  <div key={key}>\n                                    <ListItem\n                                      button\n                                      divider\n                                      secondaryAction={\n                                        <>\n                                          {team.peerReview.length === 0 ? (\n                                            <BsFillFileEarmarkExcelFill\n                                              style={{ color: \"red\" }}\n                                            />\n                                          ) : (\n                                            <IconButton\n                                              edge=\"end\"\n                                              aria-label=\"delete\"\n                                            >\n                                              {open ? (\n                                                <IoIosArrowDropup />\n                                              ) : (\n                                                <IoIosArrowDropdown />\n                                              )}\n                                            </IconButton>\n                                          )}\n                                        </>\n                                      }\n                                      onClick={handleExpand(key)}\n                                    >\n                                      <ListItemText\n                                        sx={{ fontWeight: \"600\" }}\n                                        primary={`Team ${team.teamName}`}\n                                      />\n                                      <>\n                                        {team.peerReview.length === 0 ? (\n                                          <ListItemText\n                                            sx={{\n                                              display: \"flex\",\n                                              justifyContent: \"flex-end\",\n                                            }}\n                                            primary={`This team has not submit the solution\n                                          `}\n                                          />\n                                        ) : (\n                                          <>\n                                            {team.averageScore === -1 ? (\n                                              <ListItemText\n                                                sx={{\n                                                  display: \"flex\",\n                                                  justifyContent: \"flex-end\",\n                                                }}\n                                                primary={`No team reviews the solution of this team\n                                          `}\n                                              />\n                                            ) : (\n                                              <ListItemText\n                                                sx={{\n                                                  display: \"flex\",\n                                                  justifyContent: \"flex-end\",\n                                                }}\n                                                primary={`Average Score: ${Math.round(\n                                                  team.averageScore\n                                                )}`}\n                                              />\n                                            )}\n                                          </>\n                                        )}\n                                      </>\n                                    </ListItem>\n\n                                    <Collapse\n                                      in={open}\n                                      timeout=\"auto\"\n                                      unmountOnExit\n                                    >\n                                      <List component=\"div\" disablePadding>\n                                        <>\n                                          {team.peerReview.map(\n                                            (review, key) => (\n                                              <ListItem\n                                                key={key}\n                                                button\n                                                sx={{ pl: 4 }}\n                                                divider\n                                              >\n                                                <ListItemText\n                                                  primary={`Team ${review.teamName}`}\n                                                />\n                                                <>\n                                                  {review.score ===\n                                                  undefined ? (\n                                                    <ListItemText\n                                                      sx={{\n                                                        display: \"flex\",\n                                                        justifyContent:\n                                                          \"flex-end\",\n                                                      }}\n                                                      primary={`In Process`}\n                                                    />\n                                                  ) : (\n                                                    <ListItemText\n                                                      sx={{\n                                                        display: \"flex\",\n                                                        justifyContent:\n                                                          \"flex-end\",\n                                                      }}\n                                                      primary={`Score: ${review.score}`}\n                                                    />\n                                                  )}\n                                                </>\n                                              </ListItem>\n                                            )\n                                          )}\n                                        </>\n                                      </List>\n                                    </Collapse>\n                                  </div>\n                                );\n                              })}\n                            </List>\n                          </Stack>\n                        </CardContent>\n                      </CustomizedCard>\n                    </TabPanel>\n                    <TabPanel value={tab} index={1}>\n                      <CustomizedCard>\n                        <CardContent>\n                          {assignment.teams.map((team, key) => {\n                            return (\n                              <TabPanel value={teamTab} index={key}>\n                                {team.peerReview.length !== 0 ? (\n                                  <Stack\n                                    direction=\"column\"\n                                    alignItems=\"center\"\n                                    spacing={4}\n                                  >\n                                    <Tabs\n                                      value={submissionTab}\n                                      onChange={handleChangeSubmissionTab}\n                                      variant=\"scrollable\"\n                                      scrollButtons\n                                      allowScrollButtonsMobile\n                                    >\n                                      {team.peerReview.map(\n                                        (peerreview, key) => (\n                                          <Tab\n                                            label={`Peer Review ${key + 1}`}\n                                          />\n                                        )\n                                      )}\n                                    </Tabs>\n                                    {team.peerReview.map((peerreview, key2) => {\n                                      return (\n                                        <TabPanel\n                                          value={submissionTab}\n                                          index={key2}\n                                        >\n                                          <Stack\n                                            sx={{ flex: 1 }}\n                                            direction=\"column\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"space-between\"\n                                          >\n                                            <Stack\n                                              direction=\"column\"\n                                              spacing={1}\n                                            >\n                                              <Stack\n                                                direction=\"row\"\n                                                justifyContent=\"space-between\"\n                                              >\n                                                <Stack\n                                                  direction=\"column\"\n                                                  spacing={1}\n                                                >\n                                                  <Typography\n                                                    style={{\n                                                      display: \"flex\",\n                                                      textAlign: \"center\",\n                                                      fontWeight: \"600\",\n                                                    }}\n                                                    variant=\"body1\"\n                                                    component=\"div\"\n                                                  >\n                                                    {`Team ${team.teamName} Review of Team ${peerreview.solutionTeamName}`}\n                                                  </Typography>\n                                                  <Typography\n                                                    style={{\n                                                      display: \"flex\",\n                                                      textAlign: \"center\",\n                                                    }}\n                                                    variant=\"body1\"\n                                                    component=\"div\"\n                                                  >\n                                                    {`Submitted at ${new Date(\n                                                      peerreview.submissionTime\n                                                    ).toLocaleString()}`}\n                                                  </Typography>\n                                                </Stack>\n                                                <Stack\n                                                  direction=\"column\"\n                                                  alignItems=\"flex-end\"\n                                                  spacing={1}\n                                                >\n                                                  <CustomizedButtons\n                                                    type3\n                                                    height1\n                                                    model={\"download\"}\n                                                    href={linkDownload}\n                                                    download={\"PeerReview.pdf\"}\n                                                  >\n                                                    Download Peer Review\n                                                  </CustomizedButtons>\n                                                  <Stack\n                                                    sx={{\n                                                      display: \"flex\",\n                                                      flexDirection: \"row\",\n                                                      justifyContent:\n                                                        \"space-between\",\n                                                      alignItems: \"center\",\n                                                      width: \"130px\",\n                                                      cursor: \"pointer\",\n                                                    }}\n                                                    onClick={handleClick}\n                                                  >\n                                                    <FcHighPriority size=\"1.5em\" />\n                                                    <Typography\n                                                      style={{\n                                                        display: \"flex\",\n                                                        textAlign: \"center\",\n                                                        fontWeight: \"600\",\n                                                      }}\n                                                      variant=\"body2\"\n                                                      component=\"div\"\n                                                    >\n                                                      View Errors\n                                                    </Typography>\n                                                    {openErrors === false ? (\n                                                      <GoTriangleDown size=\"1em\" />\n                                                    ) : (\n                                                      <GoTriangleUp size=\"1em\" />\n                                                    )}\n                                                  </Stack>\n                                                </Stack>\n                                              </Stack>\n                                              <Collapse\n                                                in={openErrors}\n                                                timeout=\"auto\"\n                                                unmountOnExit\n                                              >\n                                                <div\n                                                  style={{\n                                                    backgroundColor: \"#F2F4F5\",\n                                                    borderRadius: \"10px\",\n                                                    padding:\n                                                      \"20px 20px 30px 30px\",\n                                                  }}\n                                                >\n                                                  <Typography\n                                                    style={{\n                                                      display: \"flex\",\n                                                      textAlign: \"center\",\n                                                      fontWeight: \"600\",\n                                                    }}\n                                                    variant=\"body1\"\n                                                    component=\"div\"\n                                                  >\n                                                    Error Found\n                                                  </Typography>\n                                                  <List>\n                                                    {peerreview.listOfQCWordViolations\n                                                      .split(\",\")\n                                                      .map((word, key) => (\n                                                        <ListItem key={key}>\n                                                          <Typography\n                                                            style={{\n                                                              display: \"flex\",\n                                                              textAlign:\n                                                                \"center\",\n                                                            }}\n                                                            variant=\"body2\"\n                                                            component=\"div\"\n                                                          >\n                                                            {word}\n                                                          </Typography>\n                                                        </ListItem>\n                                                      ))}\n                                                  </List>\n                                                  <Stack\n                                                    direction=\"row\"\n                                                    spacing={3}\n                                                  >\n                                                    {/* {submissionPdfFile !==\n                                                      undefined && (\n                                                      <CustomizedButtons\n                                                        type1\n                                                        height1\n                                                        onClick={() => {\n                                                          handleReupload(\n                                                            team.teamID\n                                                          );\n                                                        }}\n                                                      >\n                                                        Submit\n                                                      </CustomizedButtons>\n                                                    )}\n                                                    <CustomizedPdfUploader\n                                                      id=\"submission\"\n                                                      value={submissionPdfFile}\n                                                      setPdfFile={\n                                                        setSubmissionPdfFile\n                                                      }\n                                                      pdfFileName={\n                                                        peerReviewPdfFileName\n                                                      }\n                                                      setPdfFileName={\n                                                        setPeerReviewPdfFileName\n                                                      }\n                                                    ></CustomizedPdfUploader> */}\n                                                    <CustomizedButtons\n                                                      type2\n                                                      height1\n                                                      onClick={() => {\n                                                        handleReject(\n                                                          team.teamID\n                                                        );\n                                                      }}\n                                                    >\n                                                      Reject PDF\n                                                    </CustomizedButtons>\n                                                  </Stack>\n                                                </div>\n                                              </Collapse>\n                                            </Stack>\n                                            {peerreview.pdfDoc && (\n                                              <Stack\n                                                direction=\"row\"\n                                                justifyContent=\"center\"\n                                                alignItems=\"center\"\n                                                p={1}\n                                                height={825}\n                                              >\n                                                <CustomizedButtons\n                                                  model={\"arrowL\"}\n                                                  style={{\n                                                    color: \"black\",\n                                                    marginBottom: \"10px\",\n                                                  }}\n                                                  onClick={goToPreviousPage}\n                                                ></CustomizedButtons>\n                                                <Document\n                                                  file={{\n                                                    data: peerreview.pdfDoc,\n                                                  }}\n                                                  onLoadSuccess={\n                                                    onDocumentLoadSuccess\n                                                  }\n                                                >\n                                                  <Page\n                                                    pageNumber={pageNumber}\n                                                    scale={scale}\n                                                  />\n                                                </Document>\n                                                <CustomizedButtons\n                                                  model={\"arrow\"}\n                                                  style={{\n                                                    color: \"black\",\n                                                    marginBottom: \"10px\",\n                                                  }}\n                                                  onClick={goToNextPage}\n                                                ></CustomizedButtons>\n                                              </Stack>\n                                            )}\n                                          </Stack>\n                                        </TabPanel>\n                                      );\n                                    })}\n                                  </Stack>\n                                ) : (\n                                  <Stack\n                                    sx={{ height: \"100%\", flex: 1 }}\n                                    direction=\"row\"\n                                    justifyContent=\"center\"\n                                    alignItems=\"center\"\n                                  >\n                                    This team has not submitted Peer Review yet.\n                                  </Stack>\n                                )}\n                              </TabPanel>\n                            );\n                          })}\n                        </CardContent>\n                      </CustomizedCard>\n                    </TabPanel>\n                  </Stack>\n                  {tab !== 0 && (\n                    <CustomizedCard\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        height: \"250px\",\n                        marginLeft: \"20px\",\n                        marginTop: \"47px\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <Tabs\n                        value={teamTab}\n                        orientation=\"vertical\"\n                        onChange={handleChangeTeamTab}\n                        variant=\"scrollable\"\n                        scrollButtons\n                        allowScrollButtonsMobile\n                      >\n                        {assignment.teams.map((team, key) => (\n                          <Tab label={`Team ${team.teamName}`} />\n                        ))}\n                      </Tabs>\n                    </CustomizedCard>\n                  )}\n                </Stack>\n              </Stack>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default StudentPeerReviewQualityCheckPage;\n","import React, { useState, useEffect } from \"react\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Divider,\n  List,\n  ListItem,\n  IconButton,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemButton,\n  ListItemIcon,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport { BiCheckCircle } from \"react-icons/bi\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedDivider from \"../../components/CustomizedDivider\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport {\n  getAssignmenstByStudent,\n  getResultsByStudent,\n} from \"../../axios/APIRequests\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nfunction CourseBar({ course, history }) {\n  return (\n    <Stack spacing={0}>\n      <CustomizedButtons\n        type3\n        fullwidth\n        \n        onClick={() => history.push(\"/studentresults\")}\n      >\n        {`${course.title}, Section ${course.sectionNumber}, ${course.semester}`}\n      </CustomizedButtons>\n      <List dense={true} sx={{flex:1}}>\n        {course.assignments.map((assignment) => (\n          <>\n            {!assignment.draft && (\n              <>\n                {assignment.averageScore !== -1 ? (\n                  <ListItem\n                    button\n                    divider\n                    onClick={() =>\n                      history.push(\"/studentpeerreviewresultsdisplay\", {\n                        assignmentID: assignment.assignmentID,\n                      })\n                    }\n                    secondaryAction={\n                      <IconButton edge=\"end\" aria-label=\"delete\">\n                        <BsArrowRightCircle />\n                      </IconButton>\n                    }\n                  >\n                    <ListItemText primary={`${assignment.title}`} />\n                    <ListItemText primary={\"Completed\"} />\n                    <ListItemText\n                      sx={{\n                        display: \"flex\",\n                        justifyContent: \"flex-end\",\n                      }}\n                      primary={\"Score: \" + `${Math.round(assignment.averageScore)}`}\n                    />\n                  </ListItem>\n                ) : (\n                  <ListItem\n                    button\n                    divider\n                    disabled\n                    secondaryAction={\n                      <IconButton edge=\"end\" aria-label=\"delete\">\n                        <BsArrowRightCircle />\n                      </IconButton>\n                    }\n                  >\n                    <ListItemText primary={`${assignment.title}`} />\n                    <ListItemText primary={\"In process\"} />\n                  </ListItem>\n                )}\n              </>\n            )}\n          </>\n        ))}\n      </List>\n    </Stack>\n  );\n}\n\nfunction StudentHomeDashBoard({ history }) {\n  const [loading, setLoading] = React.useState(true);\n  const [assignmentCourses, setAssignmentCourses] = React.useState([]);\n  const [resultCourses, setResultCourses] = React.useState([]);\n  useEffect(() => {\n    if (assignmentCourses === undefined || assignmentCourses.length === 0) return\n    if (resultCourses === undefined || resultCourses.length === 0) return\n    setLoading(false);\n  }, [assignmentCourses,resultCourses ]);\n  useEffect(() => {\n    getAssignmenstByStudent()\n      .then((value) => {\n        setAssignmentCourses(value);\n        getResultsByStudent()\n          .then((value) => {\n            setResultCourses(value);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Home\n          </Typography>\n        </Breadcrumbs>\n        <Grid\n          container\n          spacing={3}\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={4.7}>\n            <CustomizedCard>\n              <CardHeader\n                sx={{ paddingBottom: \"8px\" }}\n                title={\n                  <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                    <ListItem>\n                      <ListItemIcon>\n                        <FiberManualRecordIcon\n                          sx={{ color: \"#0DC38D\" }}\n                          fontSize=\"medium\"\n                        />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={\n                          <Typography\n                            component=\"span\"\n                            fontWeight=\"600\"\n                            variant=\"h6\"\n                          >\n                            Recent Results\n                          </Typography>\n                        }\n                      />\n                    </ListItem>\n                  </List>\n                }\n              ></CardHeader>\n              <CustomizedDivider\n                type1\n                sx={{ marginBottom: \"15px\" }}\n              ></CustomizedDivider>\n              <CardContent\n                sx={{\n                  paddingTop: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <>\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <Stack sx={{flex:1}} spacing={2}>\n                      {resultCourses.map((course, key) => {\n                        return (\n                          <CourseBar\n                            course={course}\n                            key={key}\n                            history={history}\n                          ></CourseBar>\n                        );\n                      })}\n                    </Stack>\n                  )}\n                </>\n              </CardContent>\n            </CustomizedCard>\n          </Grid>\n          <Grid item container spacing={3} xs={7.3}>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem\n                        secondaryAction={\n                          <CustomizedButtons\n                            type1\n                            height1\n                            onClick={() => {\n                              history.push(\"./seeallassignment\");\n                            }}\n                          >\n                            See All\n                          </CustomizedButtons>\n                        }\n                      >\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#347DEB\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Upcoming Assignments\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <List sx={{ width: \"100%\" }}>\n                      {assignmentCourses.map((course, key) => {\n                        return (\n                          <>\n                            {course.assignments.map((assignment, key) => {\n                              return (\n                                <>\n                                  {!assignment.draft && (\n                                    <>\n                                      {!assignment.isSolutionCompleted && (\n                                        <ListItem\n                                          key={key}\n                                          button\n                                          divider\n                                          onClick={() => {\n                                            history.push(\n                                              \"./newsolutionassignmentview\",\n                                              { assignment: assignment }\n                                            );\n                                          }}\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            primary={`${assignment.title} Solution`}\n                                          />\n                                          {assignment.isSolutionCompleted ? (\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Completed ${new Date(\n                                                assignment.solutionDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          ) : (\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Due ${new Date(\n                                                assignment.solutionDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          )}\n                                        </ListItem>\n                                      )}\n                                      {!assignment.isPeerReviewCompleted && (\n                                        <>\n                                          {assignment.reviewStage === true && (\n                                            <ListItem\n                                              key={key}\n                                              button\n                                              divider\n                                              onClick={() => {\n                                                history.push(\n                                                  \"./peerreviewassignmentview\",\n                                                  {\n                                                    assignmentID:\n                                                      assignment.assignmentID,\n                                                  }\n                                                );\n                                              }}\n                                              secondaryAction={\n                                                <IconButton edge=\"end\">\n                                                  <BsArrowRightCircle />\n                                                </IconButton>\n                                              }\n                                            >\n                                              <ListItemText\n                                                primary={`${assignment.title} Peer Review`}\n                                              />\n                                              {assignment.isPeerReviewCompleted ? ( //assignment.peerreview.isCompleted === true\n                                                <ListItemText\n                                                  sx={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-end\",\n                                                  }}\n                                                  primary={`Completed ${new Date(\n                                                    assignment.peerReviewDueDateTime\n                                                  ).toLocaleString()}`}\n                                                />\n                                              ) : (\n                                                <ListItemText\n                                                  sx={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-end\",\n                                                  }}\n                                                  primary={`Due ${new Date(\n                                                    assignment.peerReviewDueDateTime\n                                                  ).toLocaleString()}`}\n                                                />\n                                              )}\n                                            </ListItem>\n                                          )}\n                                        </>\n                                      )}\n                                    </>\n                                  )}\n                                </>\n                              );\n                            })}\n                          </>\n                        );\n                      })}\n                    </List>\n                  )}\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem\n                        button\n                        onClick={() => history.push(\"/studentteams\")}\n                        secondaryAction={\n                          <IconButton edge=\"end\">\n                            <BsArrowRightCircle />\n                          </IconButton>\n                        }\n                      >\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#6F40DC\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Manage Teams\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n              </CustomizedCard>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            ></Grid>\n          </Grid>\n        </Grid>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default StudentHomeDashBoard;\n","import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport { getAssignmenstByStudent } from \"../../axios/APIRequests\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction SeeAllAssignmentPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [filterType, setFilterType] = useState(\"All\");\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState();\n  const [courseNames, setCourseNames] = React.useState([]);\n\n  useEffect(() => {\n    var courseNameLists = [];\n    if (courses !== undefined && courses.length !== 0) {\n      console.log(courses);\n      courses.map((course) => {\n        courseNameLists.push(course.code);\n      });\n      setCourseNames(courseNameLists);\n      console.log(\"`loading`\");\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getAssignmenstByStudent()\n      .then((value) => {\n        console.log(value);\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CustomizedBody bg={bg}\n    >\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Assignments\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Grid container sx={{ marginBottom: \"20px\" }}>\n                <Grid item xs={8}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"h6\"\n                    component=\"div\"\n                  >\n                    Assignments by Course\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  xs={4}\n                  sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                >\n                  <CustomizedButtons\n                    type1\n                    onClick={() => history.push(\"/studentteams\")}\n                  >\n                    View Teams\n                  </CustomizedButtons>\n                </Grid>\n              </Grid>\n              <div>\n                <CustomizedTabs\n                  type1\n                  setTab={setTab}\n                  value={tab}\n                  fullWidth={\"fullWidth\"}\n                  labels={courseNames}\n                ></CustomizedTabs>\n                {courses.map((course, id) => (\n                  <TabPanel value={tab} index={id}>\n                    <CustomizedCard>\n                      <CardHeader\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                        title={\n                          <Grid container>\n                            <Grid\n                              item\n                              xs={12}\n                              sx={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                              }}\n                            >\n                              <CustomizedButtons\n                                type3\n                                model={\"radio3\"}\n                                fullwidth\n                                filterType={filterType}\n                                setFilterType={setFilterType}\n                              >\n                                Filter Results\n                              </CustomizedButtons>\n                            </Grid>\n                          </Grid>\n                        }\n                      ></CardHeader>\n                      <CardContent\n                        sx={{\n                          paddingTop: \"0\",\n                        }}\n                      >\n                        {course.assignments.map((assignment, key) => {\n                          return (\n                            <>\n                              {!assignment.draft && (\n                                <>\n                                  {(filterType === \"All\" ||\n                                    (filterType === \"Completed\") ===\n                                      assignment.isSolutionCompleted) && (\n                                    <ListItem\n                                      key={key}\n                                      button\n                                      divider\n                                      onClick={() => {\n                                        history.push(\n                                          \"./newsolutionassignmentview\",\n                                          { assignment: assignment }\n                                        );\n                                      }}\n                                      secondaryAction={\n                                        <IconButton edge=\"end\">\n                                          <BsArrowRightCircle />\n                                        </IconButton>\n                                      }\n                                    >\n                                      <ListItemText\n                                        primary={`${assignment.title} Solution`}\n                                      />\n                                      {assignment.isSolutionCompleted ? (\n                                        <ListItemText\n                                          sx={{\n                                            display: \"flex\",\n                                            justifyContent: \"flex-end\",\n                                          }}\n                                          primary={`Completed ${new Date(\n                                            assignment.solutionDueDateTime\n                                          ).toLocaleString()}`}\n                                        />\n                                      ) : (\n                                        <ListItemText\n                                          sx={{\n                                            display: \"flex\",\n                                            justifyContent: \"flex-end\",\n                                          }}\n                                          primary={`Due ${new Date(\n                                            assignment.solutionDueDateTime\n                                          ).toLocaleString()}`}\n                                        />\n                                      )}\n                                    </ListItem>\n                                  )}\n                                  {(filterType === \"All\" ||\n                                    (filterType === \"Completed\") === assignment.isPeerReviewCompleted) && (\n                                    <>\n                                      {assignment.reviewStage === true && (\n                                        <ListItem\n                                          key={key}\n                                          button\n                                          divider\n                                          onClick={() => {\n                                            history.push(\n                                              \"./peerreviewassignmentview\",\n                                              {\n                                                assignmentID:\n                                                  assignment.assignmentID,\n                                              }\n                                            );\n                                          }}\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            primary={`${assignment.title} Peer Review`}\n                                          />\n                                          {assignment.isPeerReviewCompleted ? ( //assignment.peerreview.isCompleted === true\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Completed ${new Date(\n                                                assignment.peerReviewDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          ) : (\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Due ${new Date(\n                                                assignment.peerReviewDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          )}\n                                        </ListItem>\n                                      )}\n                                    </>\n                                  )}\n                                </>\n                              )}\n                            </>\n                          );\n                        })}\n                      </CardContent>\n                    </CustomizedCard>\n                  </TabPanel>\n                ))}\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default SeeAllAssignmentPage;\n","import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nimport { FaUserCheck } from \"react-icons/fa\";\nimport { IoIosArrowDropdown, IoIosArrowDropup } from \"react-icons/io\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedModal from \"../../components/CustomizedModal\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Divider,\n  Box,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Stack,\n  TextField,\n  Modal,\n  Fade,\n  Collapse,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport Loading from \"../../components/Loading\";\nimport { getTeamsByProfessor, getTeamsByStudent } from \"../../axios/APIRequests\";\n\nconst styles = (theme) => ({\n  input: {\n    height: 30,\n    paddingTop: \"5px\",\n  },\n});\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction StudentTeamsPage({ history }) {\n\n  const [tab, setTab] = useState(0);\n  const [teamKeys, setTeamKeys] = useState({});\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState();\n  const [courseNames, setCourseNames] = React.useState([]);\n\n  useEffect(() => {\n    var courseNameLists = [];\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course) => {\n        courseNameLists.push(course.code);\n      });\n      setCourseNames(courseNameLists);\n      console.log(\"`loading`\");\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getTeamsByStudent()\n    .then((value) => {\n      console.log(value);\n      setCourses(value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }, []);\n  const handleClick = (key) => () => {\n    setTeamKeys({ [key]: !teamKeys[key] });\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\">Courses</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"800\" }}>\n            Students & Teams\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Grid container sx={{ marginBottom: \"20px\" }}>\n                <Grid item xs={9}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"h6\"\n                    component=\"div\"\n                  >\n                    Student Information\n                  </Typography>\n                </Grid>\n              </Grid>\n              <div>\n                <CustomizedTabs\n                  type2\n                  setTab={setTab}\n                  value={tab}\n                  labels={courseNames}\n                  fullWidth={\"fullWidth\"}\n                ></CustomizedTabs>\n                {courses.map((course, key) => (\n                  <TabPanel value={tab} index={key}>\n                    <CustomizedCard>\n                      <CardContent\n                        sx={{\n                          paddingTop: \"0\",\n                        }}\n                      >\n                       <List component=\"nav\">\n                            {course.teams.map((team, key) => {\n                              const open = teamKeys[key] || false;\n                              return (\n                                <div key={key}>\n                                  <ListItem\n                                    button\n                                    divider\n                                    secondaryAction={\n                                      <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"delete\"\n                                      >\n                                        {open ? (\n                                           <IoIosArrowDropup />\n                                        ) : (\n                                          <IoIosArrowDropdown />\n                                        )}\n                                      </IconButton>\n                                    }\n                                    onClick={handleClick(key)}\n                                  >\n                                    <ListItemText\n                                      primary={`Team ${team.teamName}`}\n                                    />\n                                    <ListItemText\n                                      sx={{\n                                        display: \"flex\",\n                                        justifyContent: \"flex-end\",\n                                      }}\n                                      primary={`${team.students.length} team members`}\n                                    />\n                                  </ListItem>\n\n                                  <Collapse\n                                    in={open}\n                                    timeout=\"auto\"\n                                    unmountOnExit\n                                  >\n                                    <List component=\"div\" disablePadding>\n                                      <>\n                                        {team.students.map((student, key) => (\n                                          <ListItem\n                                            key={key}\n                                            button\n                                            sx={{ pl: 4 }}\n                                            divider\n                                            secondaryAction={\n                                              <IconButton\n                                                edge=\"end\"\n                                                aria-label=\"delete\"\n                                              >\n                                                {(student.userID.toString() === localStorage.getItem('userID')) && (\n                                                   <FaUserCheck style={{color: \"green\"}}/>\n                                                )}\n                                              </IconButton>\n                                            }\n                                          >\n                                            <ListItemText\n                                              primary={`${student.firstName} ${student.lastName}`}\n                                            />\n                                          </ListItem>\n                                        ))}\n                                      </>\n                                    </List>\n                                  </Collapse>\n                                </div>\n                              );\n                            })}\n                          </List>\n                      </CardContent>\n                    </CustomizedCard>\n                  </TabPanel>\n                ))}\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default StudentTeamsPage;\n","import React, { useState, useEffect } from \"react\";\n\n// @mui components\nimport Typography from \"@mui/material/Typography\";\n//PDF\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport { CardContent, Grid, List, Stack } from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport { getTeamIdByStudentAndCourse, postNewSolutionByStudent } from \"../../axios/APIRequests\";\nimport { handleConvertByteArrayToPdf } from \"../../utils/byteArrayToPDF\";\n\nfunction NewSolutionAssignmentView({ history, location }) {\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  // ========= main variable =======\n\n  const [assignment, setAssignment] = useState();\n  const [submissionPdfFile, setSubmissionPdfFile] = useState();\n  const [linkDownload, setLinkDownload] = useState();\n  const [teamId, setTeamId] = useState();\n  var ErrorMessage = \"Please upload your pdf file before submitting !!!\"\n  useEffect(() => {\n    if (assignment !== undefined) {\n      // =========== Handle PDF Download From Byte Array ==================\n      setLinkDownload(handleConvertByteArrayToPdf(assignment.solutionPdfDoc))\n      getTeamIdByStudentAndCourse(assignment.courseID)\n        .then((value) => {\n          setTeamId(value.teamID);\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [assignment]);\n\n  useEffect(() => {\n    setAssignment(location.state.assignment);\n  }, []);\n\n\n  //======= handle send request to backend =====\n  const handleSubmitFile = (event) => {\n    //TODO add function to send request to backend\n\n    if (submissionPdfFile.length === 0) {\n      alert(ErrorMessage)\n    } else {\n      var newSubmission = {\n        teamID: teamId,\n        pdfDoc: submissionPdfFile,\n        seen: false,\n        assignmentID: assignment.assignmentID,\n      };\n\n      const json = JSON.stringify(newSubmission);\n      console.log(newSubmission);\n      postNewSolutionByStudent(newSubmission)\n        .then(function (response) {\n          console.log(response);\n          history.push(\"/seeallassignment\");\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    \n  };\n\n  // for submit event\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      {loading === true ? (\n        <Loading />\n      ) : (\n        <>\n          <CustomizedContainer>\n            <Grid\n              container\n              sx={{\n                marginBottom: \"20px\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n              spacing={9}\n            >\n              <Grid item xs={9}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"h6\"\n                  component=\"div\"\n                >\n                  {`${assignment.title} Solution`}\n                </Typography>\n              </Grid>\n            </Grid>\n            <div>\n              <CustomizedCard style={{ marginTop: \"20px\"}}>\n                <CardContent>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        marginBottom: \"20px\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                        <Typography\n                          style={{\n                            display: \"flex\",\n                            textAlign: \"center\",\n                            fontWeight: \"600\",\n                          }}\n                          variant=\"body1\"\n                          component=\"div\"\n                        >\n                          Due Date:\n                        </Typography>\n                        <Typography\n                          style={{\n                            display: \"flex\",\n                            textAlign: \"center\",\n                          }}\n                          variant=\"body1\"\n                          component=\"div\"\n                        >\n                          {new Date(\n                            assignment.solutionDueDateTime\n                          ).toLocaleString()}\n                        </Typography>\n                      </Stack>\n                      <CustomizedButtons\n                        type3\n                        model={\"download\"}\n                        href={linkDownload}\n                        download={\"SolutionInstructor\"}\n                        title=\"download\"\n                    \n                      >\n                        Download Instructions\n                      </CustomizedButtons>\n                    </div>\n                  {assignment.solutionPdfDoc && (\n                    <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" p={1} height={825}\n                    >\n                      <CustomizedButtons\n                        model={\"arrowL\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToPreviousPage}\n                      ></CustomizedButtons>\n                      <Document\n                        file={{ data: assignment.solutionPdfDoc }}\n                        onLoadSuccess={onDocumentLoadSuccess}\n                      >\n                        <Page pageNumber={pageNumber} scale={scale} />\n                      </Document>\n                      <CustomizedButtons\n                        model={\"arrow\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToNextPage}\n                      ></CustomizedButtons>\n                    </Stack>\n                  )}\n                </CardContent>\n              </CustomizedCard>\n              <CustomizedCard\n                style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n              >\n                <CardContent>\n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                    <Typography\n                      style={{\n                        display: \"flex\",\n                        textAlign: \"center\",\n                        fontWeight: \"600\",\n                      }}\n                      variant=\"body1\"\n                      component=\"div\"\n                    >\n                      Submit Solution as a PDF attachment:\n                    </Typography>\n                      <CustomizedPdfUploader\n                        id=\"submission\"\n                        setPdfFile={setSubmissionPdfFile}\n                      ></CustomizedPdfUploader>\n                  </Stack>\n                </CardContent>\n              </CustomizedCard>\n            </div>\n            <Stack\n              direction=\"row\"\n              justifyContent=\"flex-end\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <CustomizedButtons type2>Cancel</CustomizedButtons>\n              <CustomizedButtons type1 onClick={handleSubmitFile}>\n                Submit\n              </CustomizedButtons>\n            </Stack>\n          </CustomizedContainer>\n        </>\n      )}\n    </CustomizedBody>\n  );\n}\n\nexport default NewSolutionAssignmentView;\n","import React, { useState, useEffect } from \"react\";\n// @mui components\nimport Typography from \"@mui/material/Typography\";\n//PDF\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport { CardContent, FormControl, Grid, InputLabel, List, MenuItem, Select, Stack, Tab, Tabs } from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport { handleConvertByteArrayToPdf } from \"../../utils/byteArrayToPDF\";\nimport { Box } from \"@mui/system\";\nimport { getSubmissionsToReviewByStudent,getTeamIdByStudentAndCourse,postNewPeerReviewByStudent,postNewSolutionByStudent} from \"../../axios/APIRequests\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction PeerReviewAssignmentView({ history, location }) {\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  const [tab, setTab] = useState(0);\n  // ========= main variable =======\n  const [score, setScore] = useState();\n  const [teamId, setTeamId] = useState(); \n  const [peerReviewInfo, setPeerReviewInfo] = useState();\n  const [submissionPdfFile, setSubmissionPdfFile] = useState();\n  const [submissionPdfFileName, setSubmissionPdfFileName] = useState(\"\");\n  const [submissionArray, setSubmissionArray] = useState([]);\n  const [linkDownload, setLinkDownload] = useState(); //this is peer review instuction pdf\n  const [submissionLinkDownload, setSubmissionLinkDownload] = useState(); //this is solution submssion pdf\n  var ErrorMessage = \"Please fill out !!!\";\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n  };\n  const handleChangeScore = (event) => {\n    setScore(event.target.value);\n    submissionArray[tab].score = event.target.value;\n  };\n  useEffect(() => {\n    if (location.state.assignmentID == undefined) return;\n    var assignmentID = location.state.assignmentID;\n    getSubmissionsToReviewByStudent(assignmentID)\n      .then((value) => {\n        console.log(value)\n        if (value !== undefined) {\n          setPeerReviewInfo(value);\n          let subArray = [];\n        //initialize submission array\n        value.teams.map((index) => {\n          let sub = {\n            pdfDoc: [],\n            fileName: \"\",\n            score: 0,\n          };\n          subArray.push(sub);\n        });\n          setSubmissionArray(subArray);\n          setLoading(false);\n          getTeamIdByStudentAndCourse(value.courseID)\n          .then((value) => {\n            setTeamId(value.teamID);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n          \n          if (value !== undefined) {\n            setLinkDownload(handleConvertByteArrayToPdf(value.peerReviewPdfDoc));\n          }\n        } \n      })\n      .catch((err) => {\n        console.log(err);\n      });\n     \n  }, []);\n\n  console.log(submissionArray)\n  useEffect(() => {\n    if (peerReviewInfo !== undefined) {\n      setSubmissionLinkDownload(\n        handleConvertByteArrayToPdf(peerReviewInfo.teams[tab].submission.pdfDoc)\n      );\n      setScore(submissionArray[tab].score);\n      setSubmissionPdfFileName(submissionArray[tab].fileName)\n    }\n  }, [tab]);\n\n  useEffect(() => {\n    console.log(submissionArray);\n    if (submissionArray.length === 0) return;\n\n    submissionArray[tab].pdfDoc = submissionPdfFile;\n    submissionArray[tab].fileName = submissionPdfFileName\n  }, [submissionPdfFile]);\n  \n  //======= handle send request to backend =====\n  const handleSubmitFile = (event) => {\n    var newSubArray = []\n    if (submissionPdfFile.length === 0) {\n      alert(ErrorMessage);\n    } else {\n      submissionArray.map((submission,index) => {\n        var newSubmission = {\n          teamID: teamId,\n          assignmentID: peerReviewInfo.assignmentID,\n          pdfDoc: submission.pdfDoc,\n          score: submission.score,\n          submissionID: peerReviewInfo.teams[index].submission.submissionID,\n        };\n        newSubArray.push(newSubmission)\n      });\n      const json = JSON.stringify(newSubArray);\n      console.log(newSubArray);\n      postNewPeerReviewByStudent(newSubArray)\n        .then(function (response) {\n          console.log(response);\n           history.push(\"/seeallassignment\");\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  // for submit event\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      {loading === true ? (\n        <Loading />\n      ) : (\n        <>\n          <CustomizedContainer>\n            <Grid\n              container\n              sx={{\n                marginBottom: \"20px\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n              spacing={9}\n            >\n              <Grid item xs={9}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"h6\"\n                  component=\"div\"\n                >\n                  {`${peerReviewInfo.title} Peer Review`}\n                </Typography>\n              </Grid>\n            </Grid>\n            <div>\n              <CustomizedCard style={{ margin: \"20px 0\"  }}>\n                <CardContent>\n                  <Stack direction=\"row\" spacing={3} justifyContent=\"space-between\" alignItems=\"center\">\n                    <Stack direction=\"row\" spacing={1}>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                          fontWeight: \"600\",\n                        }}\n                        variant=\"body1\"\n                        component=\"div\"\n                      >\n                        Due Date:\n                      </Typography>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                        }}\n                        variant=\"body1\"\n                        component=\"div\"\n                      >\n                        {new Date(\n                          peerReviewInfo.peerReviewDueDateTime\n                        ).toLocaleString()}\n                      </Typography>\n                    </Stack>\n                    <CustomizedButtons\n                      type3\n                      model={\"download\"}\n                      href={linkDownload}\n                      download={\"PeerReviewInstructor.pdf\"}\n                      title=\"download\"\n                    >\n                      Download Instructions\n                    </CustomizedButtons>\n                  </Stack>\n                </CardContent>\n              </CustomizedCard>\n              {peerReviewInfo.teams.length !== 0 ? (\n\n                <Stack direction=\"row\" justifyContent=\"space-between\" style={{flex:\"1\"}}>\n                  {peerReviewInfo.teams.map((team, key) => {\n                    return (\n                      <TabPanel value={tab} index={key} style={{ flex:1}}>\n                        <CustomizedCard >\n                          <CardContent>\n                            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\"\n                            >\n                              <Stack direction=\"column\" spacing={1}>\n                                <Typography\n                                  style={{\n                                    display: \"flex\",\n                                    textAlign: \"center\",\n                                    fontWeight: \"600\",\n                                  }}\n                                  variant=\"body1\"\n                                  component=\"div\"\n                                >\n                                  {`Submission ${key + 1}`}\n                                </Typography>\n                              </Stack>\n                              <CustomizedButtons\n                                type2\n                                model={\"download\"}\n                                href={submissionLinkDownload}\n                                download={\"Solution.pdf\"}\n                              >\n                                Download Peer Review PDF\n                              </CustomizedButtons>\n                            </Stack>\n                            {team.submission.pdfDoc && (\n                              <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" p={1} height={825}\n                              >\n                                <CustomizedButtons\n                                  model={\"arrowL\"}\n                                  style={{ color: \"black\", marginBottom: \"10px\" }}\n                                  onClick={goToPreviousPage}\n                                ></CustomizedButtons>\n                                <Document\n                                  file={{ data: team.submission.pdfDoc }}\n                                  onLoadSuccess={onDocumentLoadSuccess}\n                                >\n                                  <Page pageNumber={pageNumber} scale={scale} />\n                                </Document>\n                                <CustomizedButtons\n                                  model={\"arrow\"}\n                                  style={{ color: \"black\", marginBottom: \"10px\" }}\n                                  onClick={goToNextPage}\n                                ></CustomizedButtons>\n                              </Stack>\n                            )}\n                            <Stack direction=\"column\" spacing={3}>\n                              <Typography\n                                style={{\n                                  display: \"flex\",\n                                  textAlign: \"center\",\n                                  fontWeight: \"600\",\n                                }}\n                                variant=\"body1\"\n                                component=\"div\"\n                              >\n                                Score Submission:\n                              </Typography>\n\n                              <Stack direction=\"row\" spacing={3} alignItems=\"center\">\n                                <FormControl sx={{width:\"100px\"}}>\n                                  <InputLabel id=\"demo-simple-select-label\">\n                                    Score\n                                  </InputLabel>\n                                  <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    value={score}\n                                    label=\"Score\"\n                                    onChange={handleChangeScore}\n                                  >\n                                    {Array.from(Array(10).keys()).map((index, key)=>(\n                                      <MenuItem value={index} key={key}>{index}</MenuItem>\n                                    ))}\n                                  </Select>\n                                </FormControl>\n                                <CustomizedPdfUploader\n                                  id=\"submission\"\n                                  pdfFileName={submissionPdfFileName}\n                                  setPdfFileName={setSubmissionPdfFileName}\n                                  setPdfFile={setSubmissionPdfFile}\n                                ></CustomizedPdfUploader>\n                              </Stack>\n                            </Stack>\n                          </CardContent>\n                        </CustomizedCard>\n                      </TabPanel>\n                    );\n                  })}\n                  <CustomizedCard\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      height: \"250px\",\n                      marginLeft: \"20px\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <Tabs\n                      value={tab}\n                      orientation=\"vertical\"\n                      onChange={handleChange}\n                      variant=\"scrollable\"\n                      scrollButtons\n                      allowScrollButtonsMobile\n                    >\n                      {peerReviewInfo.teams.map((team, key) => (\n                        <Tab label={`Submission ${key + 1}`} />\n                      ))}\n                    </Tabs>\n                  </CustomizedCard>\n                </Stack>\n              ) : (\n                <CustomizedCard style={{flex:\"1\"}}>\n                  <CardContent>\n                    <Stack direction=\"row\" justifyContent=\"space-between\" >There is no submission to review</Stack>\n                  </CardContent>\n                </CustomizedCard>\n              )}\n            </div>\n            {peerReviewInfo.teams.length !== 0 && (\n              <Stack\n              direction=\"row\"\n              justifyContent=\"flex-end\"\n              alignItems=\"center\"\n              spacing={2}\n              mt={3}\n              mr={20}\n            >\n              <CustomizedButtons type2>Cancel</CustomizedButtons>\n              <CustomizedButtons type1 onClick={handleSubmitFile}>\n                Submit\n              </CustomizedButtons>\n            </Stack>\n            )}\n          </CustomizedContainer>\n        </>\n      )}\n    </CustomizedBody>\n  );\n}\n\nexport default PeerReviewAssignmentView;\n","import React, { useState, useEffect } from \"react\";\n// @mui components\nimport {\n  CardContent,\n  Grid,\n  List,\n  Stack,\n  Typography,\n  Box,\n  CardHeader,\n} from \"@mui/material\";\n//PDF\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\n\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport { getPeerReviewResulttByStudent } from \"../../axios/APIRequests\";\nimport { handleConvertByteArrayToPdf } from \"../../utils/byteArrayToPDF\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\nfunction StudentPeerReviewResultsDisplay({ history, location }) {\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  const [tab, setTab] = useState(0);\n  // ========= main variable =======\n  const [comments, setComments] = React.useState(\"\");\n  const [assignment, setAssignment] = useState();\n  const [submissionPdfFile, setSubmissionPdfFile] = useState(null);\n  const [peerReviewResult, setPeerReviewResult] = useState();\n  const [linkDownload, setLinkDownload] = useState();\n  useEffect(() => {\n    if (location.state.assignmentID == undefined) return;\n    var assignmentID = location.state.assignmentID;\n    getPeerReviewResulttByStudent(assignmentID)\n      .then((value) => {\n        console.log(value);\n        if (peerReviewResult === undefined) {\n          setPeerReviewResult(value);\n        }\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  useEffect(() => {\n   \n    if(peerReviewResult !== undefined){\n     //console.log(peerReviewResult.peerReview[tab].pdfDoc)\n      setLinkDownload(handleConvertByteArrayToPdf(peerReviewResult.peerReview[tab].pdfDoc));\n    }\n  }, [peerReviewResult,tab])\n  // for submit event\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      {loading === true ? (\n        <Loading />\n      ) : (\n        <>\n          <CustomizedContainer>\n            <Grid\n              container\n              sx={{\n                marginBottom: \"20px\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n              spacing={9}\n            >\n              <Grid item xs={9}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"h6\"\n                  component=\"div\"\n                >\n                  Peer Review Results\n                </Typography>\n              </Grid>\n            </Grid>\n            <CustomizedCard style={{ marginTop: \"20px\" }}>\n              <CardContent>\n                <Stack\n                  direction=\"row\"\n                  justifyContent=\"space-between\"\n                  alignItems=\"center\"\n                  spacing={3}\n                >\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {`Averaged Score: ${Math.round(\n                    peerReviewResult.averageScore\n                  )}`}\n                  </Typography>\n                </Stack>\n              </CardContent>\n            </CustomizedCard>\n            <div style={{ marginTop: \"20px\" }}>\n              <CustomizedTabs\n                type3\n                setTab={setTab}\n                value={tab}\n                labels={Array.from(\n                  { length: peerReviewResult.peerReview.length },\n                  (_, index) => `Review ${index + 1}`\n                )}\n              ></CustomizedTabs>\n              {peerReviewResult.peerReview.map((review, key) => (\n                <TabPanel value={tab} index={key}>\n                  <CustomizedCard>\n                    <CardContent>\n                      <Stack direction=\"row\" justifyContent=\"space-between\">\n                        <CustomizedButtons type2>\n                          Score : {review.score}\n                        </CustomizedButtons>\n                        <CustomizedButtons\n                          type3\n                          model={\"download\"}\n                          href={linkDownload}\n                          download={\"PeerReview.pdf\"}\n                        >\n                          Download Reviews\n                        </CustomizedButtons>\n                      </Stack>\n                      {review.pdfDoc && (\n                        <Stack\n                          direction=\"row\"\n                          justifyContent=\"center\"\n                          alignItems=\"center\"\n                          p={1}\n                        >\n                          <CustomizedButtons\n                            model={\"arrowL\"}\n                            style={{ color: \"black\", marginBottom: \"10px\" }}\n                            onClick={goToPreviousPage}\n                          ></CustomizedButtons>\n                          <Document\n                            file={{ data: review.pdfDoc }}\n                            onLoadSuccess={onDocumentLoadSuccess}\n                          >\n                            <Page pageNumber={pageNumber} scale={scale} />\n                          </Document>\n                          <CustomizedButtons\n                            model={\"arrow\"}\n                            style={{ color: \"black\", marginBottom: \"10px\" }}\n                            onClick={goToNextPage}\n                          ></CustomizedButtons>\n                        </Stack>\n                      )}{\" \"}\n                    </CardContent>\n                  </CustomizedCard>\n                </TabPanel>\n              ))}\n            </div>\n          </CustomizedContainer>\n        </>\n      )}\n    </CustomizedBody>\n  );\n}\n\nexport default StudentPeerReviewResultsDisplay;\n","import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport { getResultsByStudent } from \"../../axios/APIRequests\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n\nconst demoData = [\n  {\n    name: \"Peer Review 1\",\n    date: \"10/07/21\",\n    type: \"Completed\",\n    deadline: \"10/01/21\",\n  },\n  {\n    name: \"Peer Review 2\",\n    date: \"11/07/21\",\n    type: \"Upcoming\",\n    deadline: \"10/01/21\",\n  },\n  {\n    name: \"Peer Review 3\",\n    date: \"13/07/21\",\n    type: \"Upcoming\",\n    deadline: \"10/01/21\",\n  },\n  {\n    name: \"Peer Review 4\",\n    date: \"12/07/21\",\n    type: \"Completed\",\n    deadline: \"10/01/21\",\n  },\n];\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction StudentResultPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [filterType, setFilterType] = useState(\"All\");\n  const [items, setItems] = useState(demoData);\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState();\n  const [courseNames, setCourseNames] = React.useState([]);\n\n  useEffect(() => {\n    var courseNameLists = [];\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course) => {\n        courseNameLists.push(course.code);\n      });\n      setCourseNames(courseNameLists);\n      console.log(\"`loading`\");\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getResultsByStudent()\n      .then((value) => {\n        console.log(value);\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    console.log(filterType);\n    const filteredItems = demoData.filter((item) => {\n      return item.type == filterType || filterType === \"All\";\n    });\n    setItems(filteredItems);\n  }, [filterType]);\n  return (\n    <CustomizedBody bg={bg}\n    >\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            CourseResults\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Grid container sx={{ marginBottom: \"20px\" }}>\n                <Grid item xs={8}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"h6\"\n                    component=\"div\"\n                  >\n                    Results\n                  </Typography>\n                </Grid>\n              </Grid>\n              <div>\n                <CustomizedTabs\n                  type3\n                  setTab={setTab}\n                  value={tab}\n                  fullWidth={\"fullWidth\"}\n                  labels={courseNames}\n                ></CustomizedTabs>\n                {courses.map((course, id) => (\n                  <TabPanel value={tab} index={id}>\n                    <CustomizedCard>\n                      <CardContent>\n                        {course.assignments.map((assignment) => (\n                          <>\n                            {!assignment.draft && (\n                              <>\n                                {assignment.averageScore !== -1 ? (\n                                  <ListItem\n                                    button\n                                    divider\n                                    onClick={() =>\n                                      history.push(\n                                        \"/studentpeerreviewresultsdisplay\",\n                                        {\n                                          assignmentID: assignment.assignmentID,\n                                        }\n                                      )\n                                    }\n                                    secondaryAction={\n                                      <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"delete\"\n                                      >\n                                        <BsArrowRightCircle />\n                                      </IconButton>\n                                    }\n                                  >\n                                    <ListItemText\n                                      primary={`${assignment.title}`}\n                                    />\n                                    <ListItemText primary={\"Completed\"} />\n                                    <ListItemText\n                                      sx={{\n                                        display: \"flex\",\n                                        justifyContent: \"flex-end\",\n                                      }}\n                                      primary={\n                                        \"Score: \" + `${Math.round(assignment.averageScore)}`\n                                      }\n                                    />\n                                  </ListItem>\n                                ) : (\n                                  <ListItem\n                                    button\n                                    divider\n                                    disabled\n                                    secondaryAction={\n                                      <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"delete\"\n                                      >\n                                        <BsArrowRightCircle />\n                                      </IconButton>\n                                    }\n                                  >\n                                    <ListItemText\n                                      primary={`${assignment.title}`}\n                                    />\n                                    <ListItemText primary={\"In process\"} />\n                                  </ListItem>\n                                )}\n                              </>\n                            )}\n                          </>\n                        ))}\n                      </CardContent>\n                    </CustomizedCard>\n                  </TabPanel>\n                ))}\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default StudentResultPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Radio,\n  autocompleteClasses,\n} from \"@mui/material\";\n// styled components\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport PDFControlBar from \"../../components/PDFhandling/PDFControlBar\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\nimport {\n  getSpecificAssignment,\n} from \"../../axios/APIRequests\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction AssignmentDisplay({ history, location }) {\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  const [isLoading, setIsLoading] = useState(true);\n  const [tab, setTab] = React.useState(0);\n  const [assignment, setAssignment] = useState()\n  const [loading, setLoading] = React.useState(true);\n  const [solutionPdf, setSolutionPdf] = useState()\n  const [peerReviewPdf, setPeerReviewPdf] = useState()\n\n  useEffect(() => {\n    if (assignment !== undefined && assignment.length !== 0) {\n      setSolutionPdf(assignment.solutionPdfDoc)\n      setPeerReviewPdf(assignment.peerReviewPdfDoc)\n      setLoading(false);\n    }\n  }, [assignment]);\n  useEffect(() => {\n    var assignmentID = location.state.assignmentID\n    getSpecificAssignment(assignmentID)\n    .then((value) => {\n      console.log(value);\n      setAssignment(value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }, []);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed></NavBar>\n      <CustomizedContainer>\n      <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack direction=\"row\" spacing={1}>\n            <Typography\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                fontWeight: \"600\",\n              }}\n              variant=\"h6\"\n              component=\"div\"\n            >\n              {assignment.title}\n            </Typography>\n            {assignment.draft === true ? (\n              <Typography\n                style={{\n                  display: \"flex\",\n                  color: \"#777\",\n                  fontWeight: \"500\",\n                  alignItems: \"center\",\n                }}\n                variant=\"h6\"\n                component=\"div\"\n              >\n                (Draft)\n              </Typography>\n            ) : (\n              <></>\n            )}\n          </Stack>\n\n          <Stack direction=\"row\" spacing={2}>\n            <CustomizedButtons\n              type1\n              onClick={() => {\n                history.push(\"/assignmentedit\", {\n                  assignmentID: assignment.assignmentID,\n                  courseID: assignment.courseID,\n                });\n              }}\n            >\n              Edit Assignment\n            </CustomizedButtons>\n            {assignment.draft === true ? (\n              <CustomizedButtons\n                type1\n                onClick={() => {\n                  history.push(\"/assignmentedit\", {\n                    assignment: assignment,\n                    courseID: assignment.courseID,\n                  });\n                }}\n              >\n                Publish\n              </CustomizedButtons>\n            ) : (\n              <></>\n            )}\n          </Stack>\n        </Stack>\n        <CustomizedCard sx={{ margin: \"20px 0\" }}>\n          <CardContent>\n            <Grid container>\n              <Grid item xs={12}>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Publish Date:\n                  </Typography>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {new Date(assignment.publishDateTime).toDateString()}\n                  </Typography>\n                </Stack>\n              </Grid>\n              <Grid item xs={6}>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Solution Due Date:\n                  </Typography>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {new Date(assignment.solutionDueDateTime).toLocaleString()}\n                  </Typography>\n                </Stack>\n              </Grid>\n              <Grid item xs={6}>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Peer Review Due:\n                  </Typography>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {new Date(\n                      assignment.peerReviewDueDateTime\n                    ).toLocaleString()}\n                  </Typography>\n                </Stack>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </CustomizedCard>\n        <div>\n          <CustomizedTabs\n            type1\n            setTab={setTab}\n            tab={tab}\n            labels={[\"Solution\", \"Peer Review\"]}\n          ></CustomizedTabs>\n          <TabPanel value={tab} index={0}>\n            <CustomizedCard>\n              <CardContent>\n                {solutionPdf && (\n                  <Stack\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    p={10}\n                  >\n                    <CustomizedButtons\n                      model={\"arrowL\"}\n                      style={{ color: \"black\", marginBottom: \"10px\" }}\n                      onClick={goToPreviousPage}\n                    ></CustomizedButtons>\n                    <Document\n                      file={{ data: solutionPdf }}\n                      onLoadSuccess={onDocumentLoadSuccess}\n                    >\n                      <Page pageNumber={pageNumber} scale={scale} />\n                    </Document>\n                    <CustomizedButtons\n                      model={\"arrow\"}\n                      style={{ color: \"black\", marginBottom: \"10px\" }}\n                      onClick={goToNextPage}\n                    ></CustomizedButtons>\n                  </Stack>\n                )}\n              </CardContent>\n            </CustomizedCard>\n          </TabPanel>\n          <TabPanel value={tab} index={1}>\n            <CustomizedCard s>\n              <CardContent>\n                <>\n                  {peerReviewPdf && (\n                    <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" p={1} height={825}\n                    >\n                      <CustomizedButtons\n                        model={\"arrowL\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToPreviousPage}\n                      ></CustomizedButtons>\n                      <Document\n                        file={{ data: peerReviewPdf }}\n                        onLoadSuccess={onDocumentLoadSuccess}\n                      >\n                        <Page pageNumber={pageNumber} scale={scale} />\n                      </Document>\n                      <CustomizedButtons\n                        model={\"arrow\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToNextPage}\n                      ></CustomizedButtons>\n                    </Stack>\n                  )}\n                </>\n              </CardContent>\n            </CustomizedCard>\n          </TabPanel>\n        </div></>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default AssignmentDisplay;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Radio,\n  Breadcrumbs,\n} from \"@mui/material\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport TextField from \"@mui/material/TextField\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n// Worker\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport {\n  editAssignmentByProfessor,\n  getSpecificAssignment,\n} from \"../../axios/APIRequests\";\nimport Loading from \"../../components/Loading\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction AssignmentEdit({ history, location }) {\n  const [loading, setLoading] = React.useState(true);\n  const [newAssignment, setNewAssignment] = useState();\n  const [assignment, setAssignment] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [solutionPdfDoc, setSolutionPdfDoc] = useState([]);\n  const [peerReviewPdfDoc, setPeerReviewPdfDoc] = useState([]);\n  const [solutionPdfFileName, setSolutionPdfFileName] = useState(\"\");\n  const [peerReviewPdfFileName, setPeerReviewPdfFileName] = useState(\"\");\n  const [solutionDueDate, setSolutionDueDate] = useState(new Date());\n  const [prDueDate, setPRDueDate] = useState(new Date());\n  useEffect(() => {\n    if (assignment !== undefined && assignment.length !== 0) {\n      setTitle(assignment.title);\n      setSolutionDueDate(new Date(assignment.solutionDueDateTime));\n      setPRDueDate(new Date(assignment.peerReviewDueDateTime));\n      setSolutionPdfFileName(assignment.solutionPdfFileName);\n      setPeerReviewPdfFileName(assignment.peerReviewPdfFileName);\n      setSolutionPdfDoc(assignment.solutionPdfDoc);\n      setPeerReviewPdfDoc(assignment.peerReviewPdfDoc);\n      setLoading(false);\n    }\n  }, [assignment]);\n  useEffect(() => {\n    var assignmentID = location.state.assignmentID\n    getSpecificAssignment(assignmentID)\n    .then((value) => {\n      console.log(value);\n      setAssignment(value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }, []);\n  console.log(newAssignment);\n  useEffect(() => {\n    const generateAssignment = () => {\n      setNewAssignment({\n        ...assignment,\n        courseID: location.state.courseID,\n        title: title,\n        solutionPdfDoc: solutionPdfDoc,\n        peerReviewPdfDoc: peerReviewPdfDoc,\n        solutionPdfFileName: solutionPdfFileName,\n        peerReviewPdfFileName: peerReviewPdfFileName,\n        solutionDueDateTime: solutionDueDate.toJSON().split(\".\")[0],\n        peerReviewDueDateTime: prDueDate.toJSON().split(\".\")[0],\n      });\n    };\n\n    generateAssignment();\n  }, [title, solutionPdfDoc, peerReviewPdfDoc, solutionDueDate, prDueDate]);\n\n  const handleApplyChange = () => {\n    if (\n      title === \"\" ||\n      solutionPdfDoc.length === 0 ||\n      peerReviewPdfDoc.length === 0\n    ) {\n      console.log(\"Error\");\n    } else {\n      const json = JSON.stringify(newAssignment);\n      console.log(json);\n      editAssignmentByProfessor(newAssignment)\n        .then(function (response) {\n          history.push(\"/assignmentdisplay\", {\n            assignmentID: assignment.assignmentID,\n            courseID: location.state.courseID,\n          });\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed></NavBar>\n      <>\n        <CustomizedContainer>\n          <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n            <Typography color=\"text.primary\">Home</Typography>\n            <Typography color=\"text.primary\">Courses</Typography>\n            <Typography color=\"text.primary\">Course Name</Typography>\n            <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n              New Assignment\n            </Typography>\n          </Breadcrumbs>\n          <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n          <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Typography\n              style={{ fontWeight: \"600\" }}\n              variant=\"body1\"\n              component=\"div\"\n            >\n              Build New Assignment\n            </Typography>\n\n            <CustomizedButtons onClick={handleApplyChange} type1>\n              Apply Changes\n            </CustomizedButtons>\n          </Stack>\n\n          {/* First Box */}\n          <CustomizedCard sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}>\n            <CardContent>\n              <Stack direction=\"column\" spacing={2}>\n                <Typography\n                  style={{\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"body1\"\n                  component=\"div\"\n                >\n                  Title Assignment:\n                </Typography>\n                <Stack direction=\"row\" spacing={2}>\n                  <CustomizedTextField\n                    value={title}\n                    handleTextFieldChange={setTitle}\n                  >\n                    Title\n                  </CustomizedTextField>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    ‘Solution’ and ‘Peer Review’ will be added to title in their\n                    respective phases.\n                  </Typography>\n                </Stack>\n              </Stack>\n            </CardContent>\n          </CustomizedCard>\n\n          {/* second box */}\n          <CustomizedCard sx={{ marginBottom: \"30px\" }}>\n            <CardContent>\n              <Stack direction=\"column\" spacing={2}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"body1\"\n                  component=\"div\"\n                >\n                  Solution Assignment Content:\n                </Typography>\n                <Typography variant=\"body2\" component=\"div\">\n                  Please set the due date and upload instruction PDFs to be\n                  displayed within solution assignment.\n                </Typography>\n                <Stack\n                  direction=\"row\"\n                  spacing={2}\n                  sx={{ display: \"flex\", alignItems: \"center\" }}\n                >\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DateTimePicker\n                      renderInput={(props) => <TextField {...props} />}\n                      label=\"Solution Due Date\"\n                      value={solutionDueDate}\n                      onChange={(newValue) => {\n                        setSolutionDueDate(newValue);\n                      }}\n                    />\n                  </LocalizationProvider>\n                  <CustomizedPdfUploader\n                    id=\"solution\"\n                    pdfFileName={solutionPdfFileName}\n                    setPdfFileName={setSolutionPdfFileName}\n                    setPdfFile={setSolutionPdfDoc}\n                  ></CustomizedPdfUploader>\n                </Stack>\n              </Stack>\n            </CardContent>\n          </CustomizedCard>\n\n          {/* third box */}\n          <CustomizedCard sx={{ marginBottom: \"30px\" }}>\n            <CardContent>\n              <Stack direction=\"column\" spacing={2}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"body1\"\n                  component=\"div\"\n                >\n                  Peer Review Assignment Content:\n                </Typography>\n                <Typography variant=\"body2\" component=\"div\">\n                  Please set the due date and upload instruction PDFs to be\n                  displayed within Peer Review Assignment. Please note that peer\n                  reviews must be manually sent for review by professors after\n                  quality checking.\n                </Typography>\n                <Stack\n                  direction=\"row\"\n                  spacing={2}\n                  sx={{ display: \"flex\", alignItems: \"center\" }}\n                >\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DateTimePicker\n                      renderInput={(props) => <TextField {...props} />}\n                      label=\"Peer Review Due Date\"\n                      value={prDueDate}\n                      onChange={(newValue) => {\n                        setPRDueDate(newValue);\n                      }}\n                    />\n                  </LocalizationProvider>\n                  <CustomizedPdfUploader\n                    id=\"peerReview\"\n                    pdfFileName={peerReviewPdfFileName}\n                    setPdfFileName={setPeerReviewPdfFileName}\n                    setPdfFile={setPeerReviewPdfDoc}\n                  ></CustomizedPdfUploader>\n                </Stack>\n              </Stack>\n            </CardContent>\n          </CustomizedCard>\n          </>\n          )}\n        </>\n        </CustomizedContainer>\n      </>\n    </CustomizedBody>\n  );\n}\n\nexport default AssignmentEdit;\n","\nimport './App.css';\n//routing\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport PrivateRoute from './routing/PrivateRoute'\nimport PublicRoute from './routing/PublicRoute'\n//Custom Pages\nimport LoginPage from './pages/Login/LoginPage';\nimport ProfessorHomeDashboard from './pages/Professor/ProfessorHomeDashboard';\n//professor\nimport TestingPage from './pages/TestingPage';\nimport ProfessorCoursePage from './pages/Professor/ProfessorCoursePage';\nimport AddCoursePage from './pages/Professor/AddCoursePage';\nimport AssignmentCreation from './pages/Professor/AssignmentCreation';\n\nimport StudentInfoViewPage from './pages/Professor/StudentInfoViewPage';\nimport CourseResultPage from './pages/Professor/CourseResultPage';\nimport ResultsViewerPage from './pages/Professor/ResultsViewerPage';\nimport StudentSolutionQualityCheckPage from './pages/Professor/StudentSolutionQualityCheckPage';\nimport StudentPeerReviewQualityCheckPage from './pages/Professor/StudentPeerReviewQualityCheckPage';\n//student\nimport StudentHomeDashboard from './pages/Student/StudentHomeDashboard';\nimport SeeAllAssignmentPage from './pages/Student/SeeAllAssignmentPage';\nimport StudentTeamsPage from './pages/Student/StudentTeamsPage';\nimport {isMobile} from 'react-device-detect';\nimport NewSolutionAssignmentView from './pages/Student/NewSolutionAssignmentView';\nimport PeerReviewAssignmentView from './pages/Student/PeerReviewAssignmentView';\nimport StudentPeerReviewResultsDisplay from './pages/Student/StudentPeerReviewResultsDisplay';\nimport StudentResultPage from './pages/Student/StudentResultPage';\nimport AssignmentViewer from './pages/Professor/AssignmentViewer';\nimport AssignmentDisplay from './pages/Professor/AssignmentDisplay';\nimport AssignmentEdit from './pages/Professor/AssignmentEdit';\n\nfunction App() {\n\n  return (\n  <>\n    { isMobile === true ? (\n      <div> This content is unavailable on mobile</div>\n    ) : (\n      <Router>\n      <Switch>\n        <PublicRoute exact path=\"/\" ></PublicRoute>\n        <Route exact path=\"/login\" component={LoginPage}></Route>\n        <PrivateRoute exact path=\"/professorhome\" component={ProfessorHomeDashboard} roleAccess={\"professor\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/testing\" component={TestingPage} roleAccess={\"professor\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/course\" component={ProfessorCoursePage} roleAccess={\"professor\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/coursecreation\" component={AddCoursePage} roleAccess={\"professor\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/assignmentcreation\" component={AssignmentCreation} roleAccess={\"professor\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/assignmentviewer\" component={AssignmentViewer} roleAccess={\"professor\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/assignmentdisplay\" component={AssignmentDisplay} roleAccess={\"professor\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/assignmentedit\" component={AssignmentEdit} roleAccess={\"professor\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/studentinfoview\" component={StudentInfoViewPage} roleAccess={\"professor\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/courseresult\" component={CourseResultPage} roleAccess={\"professor\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/resultviewer\" component={ResultsViewerPage} roleAccess={\"professor\"}></PrivateRoute>\n        \n        <PrivateRoute exact path=\"/studentsolutionqualitycheck\" component={StudentSolutionQualityCheckPage} roleAccess={\"professor\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/studentpeerreviewqualitycheck\" component={StudentPeerReviewQualityCheckPage} roleAccess={\"professor\"}></PrivateRoute>\n\n\n        <PrivateRoute exact path=\"/studenthome\" component={StudentHomeDashboard} roleAccess={\"student\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/seeallassignment\" component={SeeAllAssignmentPage} roleAccess={\"student\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/newsolutionassignmentview\" component={NewSolutionAssignmentView} roleAccess={\"student\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/peerreviewassignmentview\" component={PeerReviewAssignmentView} roleAccess={\"student\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/studentpeerreviewresultsdisplay\" component={StudentPeerReviewResultsDisplay} roleAccess={\"student\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/studentresults\" component={StudentResultPage} roleAccess={\"student\"}></PrivateRoute>\n        <PrivateRoute exact path=\"/studentteams\" component={StudentTeamsPage} roleAccess={\"student\"}></PrivateRoute>\n      </Switch>\n    </Router>)\n    }\n  </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport userReducer from '../features/userSlice'\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storageSession from 'redux-persist/lib/storage/session'\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nconst persistConfig = {\n  key: \"root\",\n  storage:storageSession,\n  whitelist: ['userReducer']\n};\nconst reducer = combineReducers({\n    userReducer,\n})\n\nconst persistReducer_ = persistReducer(persistConfig, reducer);\nconst store = configureStore({\n  reducer: persistReducer_,\n  middleware: (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport default store\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { StyledEngineProvider } from \"@mui/material/styles\";\nimport { Provider } from \"react-redux\";\nimport store, { persistor } from \"./app/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n//Whole website color\n//document.body.style = \"background: #E5E5E5\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <StyledEngineProvider injectFirst>\n        <App />\n      </StyledEngineProvider>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}