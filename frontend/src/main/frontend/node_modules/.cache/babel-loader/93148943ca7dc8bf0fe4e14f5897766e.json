{"ast":null,"code":"var _jsxFileName = \"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/NewSolutionAssignmentView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // @mui components\n\nimport Typography from \"@mui/material/Typography\"; //PDF\n\nimport { Document, Page, pdfjs } from \"react-pdf\"; // styled components\n\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport { CardContent, Grid, List, Stack } from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport { getTeamIdByStudentAndCourse, postNewSolutionByStudent } from \"../../axios/APIRequests\";\nimport { handleConvertByteArrayToPdf } from \"../../utils/byteArrayToPDF\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NewSolutionAssignmentView({\n  history,\n  location\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const {\n    user,\n    isAuthenticated,\n    authLoading\n  } = getUser;\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages; // ========= main variable =======\n\n  const [assignment, setAssignment] = useState();\n  const [submissionPdfFile, setSubmissionPdfFile] = useState();\n  const [linkDownload, setLinkDownload] = useState();\n  const [teamId, setTeamId] = useState();\n  var ErrorMessage = \"Please upload your pdf file before submitting !!!\";\n  useEffect(() => {\n    if (assignment !== undefined) {\n      // =========== Handle PDF Download From Byte Array ==================\n      setLinkDownload(handleConvertByteArrayToPdf(assignment.solutionPdfDoc));\n      getTeamIdByStudentAndCourse(assignment.courseID).then(value => {\n        setTeamId(value.teamID);\n        setLoading(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [assignment]);\n  useEffect(() => {\n    setAssignment(location.state.assignment);\n  }, []); //======= handle send request to backend =====\n\n  const handleSubmitFile = event => {\n    //TODO add function to send request to backend\n    if (submissionPdfFile.length === 0) {\n      alert(ErrorMessage);\n    } else {\n      var newSubmission = {\n        teamID: teamId,\n        pdfDoc: submissionPdfFile,\n        seen: false,\n        assignmentID: assignment.assignmentID\n      };\n      const json = JSON.stringify(newSubmission);\n      console.log(newSubmission);\n      postNewSolutionByStudent(newSubmission).then(function (response) {\n        console.log(response);\n        history.push(\"/seeallassignment\");\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }; // for submit event\n\n\n  function onDocumentLoadSuccess({\n    numPages\n  }) {\n    setNumPages(numPages);\n  }\n\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CustomizedBody, {\n    bg: bg,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      fixed: true,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), loading === true ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CustomizedContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          sx: {\n            marginBottom: \"20px\",\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          spacing: 9,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 9,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                display: \"flex\",\n                textAlign: \"center\",\n                fontWeight: \"600\"\n              },\n              variant: \"h6\",\n              component: \"div\",\n              children: `${assignment.title} Solution`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CustomizedCard, {\n            style: {\n              marginTop: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  marginBottom: \"20px\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    style: {\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\"\n                    },\n                    variant: \"body1\",\n                    component: \"div\",\n                    children: \"Due Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    style: {\n                      display: \"flex\",\n                      textAlign: \"center\"\n                    },\n                    variant: \"body1\",\n                    component: \"div\",\n                    children: new Date(assignment.solutionDueDateTime).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CustomizedButtons, {\n                  type3: true,\n                  model: \"download\",\n                  href: linkDownload,\n                  download: \"SolutionInstructor\",\n                  title: \"download\",\n                  children: \"Download Instructions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), assignment.solutionPdfDoc && /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                p: 1,\n                height: 825,\n                children: [/*#__PURE__*/_jsxDEV(CustomizedButtons, {\n                  model: \"arrowL\",\n                  style: {\n                    color: \"black\",\n                    marginBottom: \"10px\"\n                  },\n                  onClick: goToPreviousPage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Document, {\n                  file: {\n                    data: assignment.solutionPdfDoc\n                  },\n                  onLoadSuccess: onDocumentLoadSuccess,\n                  children: /*#__PURE__*/_jsxDEV(Page, {\n                    pageNumber: pageNumber,\n                    scale: scale\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CustomizedButtons, {\n                  model: \"arrow\",\n                  style: {\n                    color: \"black\",\n                    marginBottom: \"10px\"\n                  },\n                  onClick: goToNextPage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomizedCard, {\n            style: {\n              marginTop: \"20px\",\n              marginBottom: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                spacing: 1,\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    display: \"flex\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\"\n                  },\n                  variant: \"body1\",\n                  component: \"div\",\n                  children: \"Submit Solution as a PDF attachment:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CustomizedPdfUploader, {\n                  id: \"submission\",\n                  setPdfFile: setSubmissionPdfFile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(CustomizedButtons, {\n            type2: true,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomizedButtons, {\n            type1: true,\n            onClick: handleSubmitFile,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewSolutionAssignmentView, \"sRcCWh/ufp2Ee3UroJOq06wccKg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NewSolutionAssignmentView;\nexport default NewSolutionAssignmentView;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewSolutionAssignmentView\");","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/NewSolutionAssignmentView.js"],"names":["React","useState","useEffect","Typography","Document","Page","pdfjs","NavBar","CustomizedButtons","bg","CardContent","Grid","List","Stack","CustomizedCard","CustomizedContainer","Link","useSelector","useDispatch","selectUser","Loading","CustomizedPdfUploader","CustomizedBody","CustomizedTextField","getTeamIdByStudentAndCourse","postNewSolutionByStudent","handleConvertByteArrayToPdf","NewSolutionAssignmentView","history","location","dispatch","getUser","user","isAuthenticated","authLoading","scale","setScale","numPages","setNumPages","pageNumber","setPageNumber","loading","setLoading","isFirstPage","isLastPage","assignment","setAssignment","submissionPdfFile","setSubmissionPdfFile","linkDownload","setLinkDownload","teamId","setTeamId","ErrorMessage","undefined","solutionPdfDoc","courseID","then","value","teamID","catch","err","console","log","state","handleSubmitFile","event","length","alert","newSubmission","pdfDoc","seen","assignmentID","json","JSON","stringify","response","push","error","onDocumentLoadSuccess","goToPreviousPage","goToNextPage","marginBottom","display","alignItems","textAlign","fontWeight","title","marginTop","flexDirection","justifyContent","Date","solutionDueDateTime","toLocaleString","color","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// @mui components\nimport Typography from \"@mui/material/Typography\";\n//PDF\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport { CardContent, Grid, List, Stack } from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport { getTeamIdByStudentAndCourse, postNewSolutionByStudent } from \"../../axios/APIRequests\";\nimport { handleConvertByteArrayToPdf } from \"../../utils/byteArrayToPDF\";\n\nfunction NewSolutionAssignmentView({ history, location }) {\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  // ========= main variable =======\n\n  const [assignment, setAssignment] = useState();\n  const [submissionPdfFile, setSubmissionPdfFile] = useState();\n  const [linkDownload, setLinkDownload] = useState();\n  const [teamId, setTeamId] = useState();\n  var ErrorMessage = \"Please upload your pdf file before submitting !!!\"\n  useEffect(() => {\n    if (assignment !== undefined) {\n      // =========== Handle PDF Download From Byte Array ==================\n      setLinkDownload(handleConvertByteArrayToPdf(assignment.solutionPdfDoc))\n      getTeamIdByStudentAndCourse(assignment.courseID)\n        .then((value) => {\n          setTeamId(value.teamID);\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [assignment]);\n\n  useEffect(() => {\n    setAssignment(location.state.assignment);\n  }, []);\n\n\n  //======= handle send request to backend =====\n  const handleSubmitFile = (event) => {\n    //TODO add function to send request to backend\n\n    if (submissionPdfFile.length === 0) {\n      alert(ErrorMessage)\n    } else {\n      var newSubmission = {\n        teamID: teamId,\n        pdfDoc: submissionPdfFile,\n        seen: false,\n        assignmentID: assignment.assignmentID,\n      };\n\n      const json = JSON.stringify(newSubmission);\n      console.log(newSubmission);\n      postNewSolutionByStudent(newSubmission)\n        .then(function (response) {\n          console.log(response);\n          history.push(\"/seeallassignment\");\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    \n  };\n\n  // for submit event\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      {loading === true ? (\n        <Loading />\n      ) : (\n        <>\n          <CustomizedContainer>\n            <Grid\n              container\n              sx={{\n                marginBottom: \"20px\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n              spacing={9}\n            >\n              <Grid item xs={9}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"h6\"\n                  component=\"div\"\n                >\n                  {`${assignment.title} Solution`}\n                </Typography>\n              </Grid>\n            </Grid>\n            <div>\n              <CustomizedCard style={{ marginTop: \"20px\"}}>\n                <CardContent>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        marginBottom: \"20px\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                        <Typography\n                          style={{\n                            display: \"flex\",\n                            textAlign: \"center\",\n                            fontWeight: \"600\",\n                          }}\n                          variant=\"body1\"\n                          component=\"div\"\n                        >\n                          Due Date:\n                        </Typography>\n                        <Typography\n                          style={{\n                            display: \"flex\",\n                            textAlign: \"center\",\n                          }}\n                          variant=\"body1\"\n                          component=\"div\"\n                        >\n                          {new Date(\n                            assignment.solutionDueDateTime\n                          ).toLocaleString()}\n                        </Typography>\n                      </Stack>\n                      <CustomizedButtons\n                        type3\n                        model={\"download\"}\n                        href={linkDownload}\n                        download={\"SolutionInstructor\"}\n                        title=\"download\"\n                    \n                      >\n                        Download Instructions\n                      </CustomizedButtons>\n                    </div>\n                  {assignment.solutionPdfDoc && (\n                    <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" p={1} height={825}\n                    >\n                      <CustomizedButtons\n                        model={\"arrowL\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToPreviousPage}\n                      ></CustomizedButtons>\n                      <Document\n                        file={{ data: assignment.solutionPdfDoc }}\n                        onLoadSuccess={onDocumentLoadSuccess}\n                      >\n                        <Page pageNumber={pageNumber} scale={scale} />\n                      </Document>\n                      <CustomizedButtons\n                        model={\"arrow\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToNextPage}\n                      ></CustomizedButtons>\n                    </Stack>\n                  )}\n                </CardContent>\n              </CustomizedCard>\n              <CustomizedCard\n                style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n              >\n                <CardContent>\n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                    <Typography\n                      style={{\n                        display: \"flex\",\n                        textAlign: \"center\",\n                        fontWeight: \"600\",\n                      }}\n                      variant=\"body1\"\n                      component=\"div\"\n                    >\n                      Submit Solution as a PDF attachment:\n                    </Typography>\n                      <CustomizedPdfUploader\n                        id=\"submission\"\n                        setPdfFile={setSubmissionPdfFile}\n                      ></CustomizedPdfUploader>\n                  </Stack>\n                </CardContent>\n              </CustomizedCard>\n            </div>\n            <Stack\n              direction=\"row\"\n              justifyContent=\"flex-end\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <CustomizedButtons type2>Cancel</CustomizedButtons>\n              <CustomizedButtons type1 onClick={handleSubmitFile}>\n                Submit\n              </CustomizedButtons>\n            </Stack>\n          </CustomizedContainer>\n        </>\n      )}\n    </CustomizedBody>\n  );\n}\n\nexport default NewSolutionAssignmentView;\n"]},"metadata":{},"sourceType":"module"}