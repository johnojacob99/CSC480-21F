{"ast":null,"code":"import _slicedToArray from\"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";// @mui components\nimport{Grid,Card,CardHeader,CardContent,Container,Typography,Box,Stack,Divider,List,ListItem,IconButton,ListItemAvatar,Avatar,ListItemText,ListItemButton,ListItemIcon,Breadcrumbs}from\"@mui/material\";import{CircularProgress}from\"@mui/material\";import{BiCheckCircle}from\"react-icons/bi\";import FiberManualRecordIcon from\"@mui/icons-material/FiberManualRecord\";import bg from\"../../images/multi_background_dashboard.jpg\";// styled components\nimport NavBar from\"../../components/NavBar/NavBar\";import CustomizedButtons from\"../../components/CustomizedButtons\";import CustomizedContainer from\"../../components/CustomizedContainer\";import CustomizedCard from\"../../components/CustomizedCard\";import CustomizedDivider from\"../../components/CustomizedDivider\";import CustomizedBody from\"../../components/CustomizedBody\";import axios from\"axios\";import Loading from\"../../components/Loading\";import{getAssignmentsByProfessor,getTeamsByProfessor}from\"../../axios/APIRequests\";import{BsArrowRightCircle}from\"react-icons/bs\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CourseBar(_ref){var course=_ref.course,history=_ref.history;return/*#__PURE__*/_jsxs(Stack,{spacing:0,children:[/*#__PURE__*/_jsx(CustomizedButtons,{type3:true,fullwidth:true,model:\"arrow\",onClick:function onClick(){return history.push(\"/course\");},children:\"\".concat(course.title,\", Section \").concat(course.sectionNumber,\", \").concat(course.semester)}),/*#__PURE__*/_jsx(_Fragment,{children:course.assignments.length!==0?/*#__PURE__*/_jsx(List,{dense:true,sx:{flex:1},children:course.assignments.map(function(assignment){return/*#__PURE__*/_jsxs(_Fragment,{children:[!assignment.isSolutionCompleted&&/*#__PURE__*/_jsxs(ListItem,{button:true,justifyContent:\"space-between\",onClick:function onClick(){return history.push(\"/assignmentdisplay\",{assignmentID:assignment.assignmentID});},children:[/*#__PURE__*/_jsx(ListItemText,{style:{width:\"60%\"},primary:/*#__PURE__*/_jsx(Typography,{component:\"span\",fontWeight:\"600\",variant:\"body2\",children:\"\".concat(assignment.title,\" Solution\")})}),/*#__PURE__*/_jsx(ListItemText,{direction:\"row\",justifyContent:\"flex-end\",primary:\"Due \".concat(new Date(assignment.solutionDueDateTime).toLocaleDateString())})]}),!assignment.isPeerReviewCompleted&&/*#__PURE__*/_jsxs(ListItem,{button:true,onClick:function onClick(){return history.push(\"/assignmentdisplay\",{assignmentID:assignment.assignmentID});},children:[/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{component:\"span\",fontWeight:\"600\",variant:\"body2\",children:\"\".concat(assignment.title,\" Peer Review\")})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Due \".concat(new Date(assignment.peerReviewDueDateTime).toLocaleDateString())})]})]});})}):/*#__PURE__*/_jsx(Stack,{alignItems:\"center\",p:2,children:\"No Assignment\"})})]});}function ProfessorHomeDashBoard(_ref2){var history=_ref2.history;var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),loading=_React$useState2[0],setLoading=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),courses=_React$useState4[0],setCourses=_React$useState4[1];useEffect(function(){console.log(courses);if(courses!==undefined&&courses.length!==0){courses.map(function(course,key){if(course.assignments!==undefined){setLoading(false);}});}},[courses]);useEffect(function(){getAssignmentsByProfessor().then(function(value){setCourses(value);}).catch(function(err){console.log(err);});},[]);return/*#__PURE__*/_jsxs(CustomizedBody,{bg:bg,children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(CustomizedContainer,{children:[/*#__PURE__*/_jsx(Breadcrumbs,{\"aria-label\":\"breadcrumb\",mb:5,ml:2,children:/*#__PURE__*/_jsx(Typography,{color:\"text.primary\",style:{fontWeight:\"600\"},children:\"Home\"})}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,direction:\"row\",justifyContent:\"space-between\",alignItems:\"flex-start\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4.7,children:/*#__PURE__*/_jsxs(CustomizedCard,{children:[/*#__PURE__*/_jsx(CardHeader,{sx:{paddingBottom:\"8px\"},title:/*#__PURE__*/_jsx(List,{dense:true,sx:{padding:\"0\",margin:\"0\"},children:/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(FiberManualRecordIcon,{sx:{color:\"#347DEB\"},fontSize:\"medium\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{component:\"span\",fontWeight:\"600\",variant:\"h6\",children:\"Assignments by Course\"})})]})})}),/*#__PURE__*/_jsx(CustomizedDivider,{type1:true,sx:{marginBottom:\"15px\"}}),/*#__PURE__*/_jsx(CardContent,{sx:{paddingTop:\"0\",display:\"flex\",justifyContent:\"center\"},children:/*#__PURE__*/_jsx(_Fragment,{children:loading===true?/*#__PURE__*/_jsx(CircularProgress,{className:loading.loading}):/*#__PURE__*/_jsx(Stack,{sx:{flex:1},spacing:1,children:courses.map(function(course,key){return/*#__PURE__*/_jsx(CourseBar,{course:course,history:history},key);})})})})]})}),/*#__PURE__*/_jsxs(Grid,{item:true,container:true,spacing:3,xs:7.3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(CustomizedCard,{children:[/*#__PURE__*/_jsx(CardHeader,{sx:{paddingBottom:\"8px\"},title:/*#__PURE__*/_jsx(List,{dense:true,sx:{padding:\"0\",margin:\"0\"},children:/*#__PURE__*/_jsxs(ListItem,{secondaryAction:/*#__PURE__*/_jsx(CustomizedButtons,{type1:true,height1:true,onClick:function onClick(){history.push(\"./courseresult\");},children:\"See All\"}),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(FiberManualRecordIcon,{sx:{color:\"#0DC38D\"},fontSize:\"medium\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{component:\"span\",fontWeight:\"600\",variant:\"h6\",children:\"Quality Check\"})})]})})}),/*#__PURE__*/_jsx(CustomizedDivider,{type1:true,sx:{marginBottom:\"15px\"}}),/*#__PURE__*/_jsx(CardContent,{sx:{paddingTop:0,display:\"flex\",justifyContent:\"center\"},children:loading===true?/*#__PURE__*/_jsx(CircularProgress,{className:loading.loading}):/*#__PURE__*/_jsx(List,{sx:{width:\"100%\"},children:courses.map(function(course,key){return/*#__PURE__*/_jsx(_Fragment,{children:course.assignments.length!==0?/*#__PURE__*/_jsx(_Fragment,{children:course.assignments.map(function(assignment,key){return/*#__PURE__*/_jsxs(_Fragment,{children:[assignment.reviewStage===true?/*#__PURE__*/_jsxs(ListItem,{button:true,divider:true,onClick:function onClick(){return history.push(\"/studentpeerreviewqualitycheck\",{assignmentID:assignment.assignmentID});},secondaryAction:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",children:/*#__PURE__*/_jsx(BsArrowRightCircle,{})}),children:[/*#__PURE__*/_jsx(ListItemText,{sx:{width:\"30%\"},primary:\"\".concat(assignment.title,\" Peer Review\")}),/*#__PURE__*/_jsx(ListItemText,{sx:{display:\"flex\",justifyContent:\"center\"},primary:\"submissions closed \".concat(new Date(assignment.peerReviewDueDateTime).toLocaleString())})]}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsxs(ListItem,{button:true,divider:true,onClick:function onClick(){return history.push(\"/studentsolutionqualitycheck\",{assignmentID:assignment.assignmentID});},secondaryAction:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",children:/*#__PURE__*/_jsx(BsArrowRightCircle,{})}),children:[/*#__PURE__*/_jsx(ListItemText,{sx:{width:\"30%\"},primary:\"\".concat(assignment.title,\" Solution\")}),/*#__PURE__*/_jsx(ListItemText,{sx:{display:\"flex\",justifyContent:\"center\"},primary:\"Due \".concat(new Date(assignment.solutionDueDateTime).toLocaleString())})]})]});})}):/*#__PURE__*/_jsx(Stack,{sx:{flex:1},alignItems:\"center\",children:\"No Assignment\"})});})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(CustomizedCard,{children:[/*#__PURE__*/_jsx(CardHeader,{sx:{paddingBottom:\"8px\"},title:/*#__PURE__*/_jsx(List,{dense:true,sx:{padding:\"0\",margin:\"0\"},children:/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(FiberManualRecordIcon,{sx:{color:\"#6F40DC\"},fontSize:\"medium\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{component:\"span\",fontWeight:\"600\",variant:\"h6\",children:\"Manage Students & Teams by Course\"})})]})})}),/*#__PURE__*/_jsx(CustomizedDivider,{type1:true,sx:{marginBottom:\"15px\"}}),/*#__PURE__*/_jsx(CardContent,{sx:{paddingTop:0,display:\"flex\",justifyContent:\"center\"},children:/*#__PURE__*/_jsx(_Fragment,{children:loading===true?/*#__PURE__*/_jsx(CircularProgress,{className:loading.loading}):/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:courses.map(function(course,key){return/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(CustomizedButtons,{type2:true,fullwidth:true,onClick:function onClick(){history.push(\"./studentinfoview\");},model:\"arrow\",children:\"\".concat(course.code,\", Section \").concat(course.sectionNumber,\", \").concat(course.semester)},key)});})})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sx:{display:\"flex\",justifyContent:\"flex-end\"},children:/*#__PURE__*/_jsx(CustomizedButtons,{type1:true,model:\"add\",onClick:function onClick(){return history.push(\"/coursecreation\");},children:\"Create a New Course\"})})]})]})]})]});}export default ProfessorHomeDashBoard;","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/ProfessorHomeDashboard.js"],"names":["React","useState","useEffect","Grid","Card","CardHeader","CardContent","Container","Typography","Box","Stack","Divider","List","ListItem","IconButton","ListItemAvatar","Avatar","ListItemText","ListItemButton","ListItemIcon","Breadcrumbs","CircularProgress","BiCheckCircle","FiberManualRecordIcon","bg","NavBar","CustomizedButtons","CustomizedContainer","CustomizedCard","CustomizedDivider","CustomizedBody","axios","Loading","getAssignmentsByProfessor","getTeamsByProfessor","BsArrowRightCircle","CourseBar","course","history","push","title","sectionNumber","semester","assignments","length","flex","map","assignment","isSolutionCompleted","assignmentID","width","Date","solutionDueDateTime","toLocaleDateString","isPeerReviewCompleted","peerReviewDueDateTime","ProfessorHomeDashBoard","loading","setLoading","courses","setCourses","console","log","undefined","key","then","value","catch","err","fontWeight","paddingBottom","padding","margin","color","marginBottom","paddingTop","display","justifyContent","reviewStage","toLocaleString","code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Divider,\n  List,\n  ListItem,\n  IconButton,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemButton,\n  ListItemIcon,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport { BiCheckCircle } from \"react-icons/bi\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedDivider from \"../../components/CustomizedDivider\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport {\n  getAssignmentsByProfessor,\n  getTeamsByProfessor,\n} from \"../../axios/APIRequests\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\n\nfunction CourseBar({ course, history }) {\n  return (\n    <Stack spacing={0}>\n      <CustomizedButtons\n        type3\n        fullwidth\n        model={\"arrow\"}\n        onClick={() => history.push(\"/course\")}\n      >\n        {`${course.title}, Section ${course.sectionNumber}, ${course.semester}`}\n      </CustomizedButtons>\n      <>\n        {course.assignments.length !== 0 ? (\n          <List dense={true} sx={{ flex: 1 }}>\n            {course.assignments.map((assignment) => (\n              <>\n                {!assignment.isSolutionCompleted && (\n                  <ListItem\n                    button\n                    justifyContent=\"space-between\"\n                    onClick={() =>\n                      history.push(\"/assignmentdisplay\", {\n                        assignmentID: assignment.assignmentID,\n                      })\n                    }\n                  >\n                    <ListItemText\n                      style={{ width: \"60%\" }}\n                      primary={\n                        <Typography\n                          component=\"span\"\n                          fontWeight=\"600\"\n                          variant=\"body2\"\n                        >\n                          {`${assignment.title} Solution`}\n                        </Typography>\n                      }\n                    />\n                    <ListItemText\n                      direction=\"row\"\n                      justifyContent=\"flex-end\"\n                      primary={`Due ${new Date(\n                        assignment.solutionDueDateTime\n                      ).toLocaleDateString()}`}\n                    />\n                  </ListItem>\n                )}\n                {!assignment.isPeerReviewCompleted && (\n                  <ListItem\n                    button\n                    onClick={() =>\n                      history.push(\"/assignmentdisplay\", {\n                        assignmentID: assignment.assignmentID,\n                      })\n                    }\n                  >\n                    <ListItemText\n                      primary={\n                        <Typography\n                          component=\"span\"\n                          fontWeight=\"600\"\n                          variant=\"body2\"\n                        >\n                          {`${assignment.title} Peer Review`}\n                        </Typography>\n                      }\n                    />\n                    <ListItemText\n                      primary={`Due ${new Date(\n                        assignment.peerReviewDueDateTime\n                      ).toLocaleDateString()}`}\n                    />\n                  </ListItem>\n                )}\n              </>\n            ))}\n          </List>\n        ) : (\n          <Stack alignItems=\"center\" p={2}>\n            No Assignment\n          </Stack>\n        )}\n      </>\n    </Stack>\n  );\n}\n\nfunction ProfessorHomeDashBoard({ history }) {\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState([]);\n\n  useEffect(() => {\n    console.log(courses);\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course, key) => {\n        if (course.assignments !== undefined) {\n          setLoading(false);\n        }\n      });\n    }\n  }, [courses]);\n\n  useEffect(() => {\n    getAssignmentsByProfessor()\n      .then((value) => {\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Home\n          </Typography>\n        </Breadcrumbs>\n        <Grid\n          container\n          spacing={3}\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={4.7}>\n            <CustomizedCard>\n              <CardHeader\n                sx={{ paddingBottom: \"8px\" }}\n                title={\n                  <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                    <ListItem>\n                      <ListItemIcon>\n                        <FiberManualRecordIcon\n                          sx={{ color: \"#347DEB\" }}\n                          fontSize=\"medium\"\n                        />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={\n                          <Typography\n                            component=\"span\"\n                            fontWeight=\"600\"\n                            variant=\"h6\"\n                          >\n                            Assignments by Course\n                          </Typography>\n                        }\n                      />\n                    </ListItem>\n                  </List>\n                }\n              ></CardHeader>\n              <CustomizedDivider\n                type1\n                sx={{ marginBottom: \"15px\" }}\n              ></CustomizedDivider>\n              <CardContent\n                sx={{\n                  paddingTop: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <>\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <Stack sx={{ flex: 1 }} spacing={1}>\n                      {courses.map((course, key) => {\n                        return (\n                          <CourseBar\n                            course={course}\n                            key={key}\n                            history={history}\n                          ></CourseBar>\n                        );\n                      })}\n                    </Stack>\n                  )}\n                </>\n              </CardContent>\n            </CustomizedCard>\n          </Grid>\n          <Grid item container spacing={3} xs={7.3}>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem\n                        secondaryAction={\n                          <CustomizedButtons\n                            type1\n                            height1\n                            onClick={() => {\n                              history.push(\"./courseresult\");\n                            }}\n                          >\n                            See All\n                          </CustomizedButtons>\n                        }\n                      >\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#0DC38D\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Quality Check\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <List sx={{ width: \"100%\" }}>\n                      {courses.map((course, key) => {\n                        return (\n                          <>\n                            {course.assignments.length !== 0 ? (\n                              <>\n                                {course.assignments.map((assignment, key) => {\n                                  return (\n                                    <>\n                                      {assignment.reviewStage === true ? (\n                                        <ListItem\n                                          button\n                                          divider\n                                          onClick={() =>\n                                            history.push(\n                                              \"/studentpeerreviewqualitycheck\",\n                                              {\n                                                assignmentID:\n                                                  assignment.assignmentID,\n                                              }\n                                            )\n                                          }\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            sx={{ width: \"30%\" }}\n                                            primary={`${assignment.title} Peer Review`}\n                                          />\n                                          <ListItemText\n                                            sx={{\n                                              display: \"flex\",\n                                              justifyContent: \"center\",\n                                            }}\n                                            primary={`submissions closed ${new Date(\n                                              assignment.peerReviewDueDateTime\n                                            ).toLocaleString()}`}\n                                          />\n                                        </ListItem>\n                                      ) : (\n                                        <></>\n                                      )}\n                                      <ListItem\n                                        button\n                                        divider\n                                        onClick={() =>\n                                          history.push(\n                                            \"/studentsolutionqualitycheck\",\n                                            {\n                                              assignmentID:\n                                                assignment.assignmentID,\n                                            }\n                                          )\n                                        }\n                                        secondaryAction={\n                                          <IconButton edge=\"end\">\n                                            <BsArrowRightCircle />\n                                          </IconButton>\n                                        }\n                                      >\n                                        <ListItemText\n                                          sx={{ width: \"30%\" }}\n                                          primary={`${assignment.title} Solution`}\n                                        />\n                                        <ListItemText\n                                          sx={{\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                          }}\n                                          primary={`Due ${new Date(\n                                            assignment.solutionDueDateTime\n                                          ).toLocaleString()}`}\n                                        />\n                                      </ListItem>\n                                    </>\n                                  );\n                                })}\n                              </>\n                            ) : (\n                              <Stack sx={{ flex: 1 }} alignItems=\"center\">\n                                No Assignment\n                              </Stack>\n                            )}\n                          </>\n                        );\n                      })}\n                    </List>\n                  )}\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem>\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#6F40DC\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Manage Students & Teams by Course\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <>\n                    {loading === true ? (\n                      <CircularProgress\n                        className={loading.loading}\n                      ></CircularProgress>\n                    ) : (\n                      <Grid container spacing={2}>\n                        {courses.map((course, key) => {\n                          return (\n                            <Grid item xs={6}>\n                              <CustomizedButtons\n                                type2\n                                fullwidth\n                                onClick={() => {\n                                  history.push(\"./studentinfoview\");\n                                }}\n                                model={\"arrow\"}\n                                key={key}\n                              >\n                                {`${course.code}, Section ${course.sectionNumber}, ${course.semester}`}\n                              </CustomizedButtons>\n                            </Grid>\n                          );\n                        })}\n                      </Grid>\n                    )}\n                  </>\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              <CustomizedButtons\n                type1\n                model={\"add\"}\n                onClick={() => history.push(\"/coursecreation\")}\n              >\n                Create a New Course\n              </CustomizedButtons>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default ProfessorHomeDashBoard;\n"]},"metadata":{},"sourceType":"module"}