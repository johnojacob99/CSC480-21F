{"ast":null,"code":"var _jsxFileName = \"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/AssignmentEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"; // @mui components\n\nimport { Grid, Card, CardHeader, CardContent, Container, Typography, Box, Stack, Radio, Breadcrumbs } from \"@mui/material\"; // styled components\n\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport TextField from \"@mui/material/TextField\";\nimport CustomizedBody from \"../../components/CustomizedBody\"; // Worker\n\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport { editAssignmentByProfessor, getSpecificAssignment } from \"../../axios/APIRequests\";\nimport Loading from \"../../components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction AssignmentEdit({\n  history,\n  location\n}) {\n  _s();\n\n  const [loading, setLoading] = React.useState(true);\n  const [newAssignment, setNewAssignment] = useState();\n  const [assignment, setAssignment] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [solutionPdfDoc, setSolutionPdfDoc] = useState([]);\n  const [peerReviewPdfDoc, setPeerReviewPdfDoc] = useState([]);\n  const [solutionPdfFileName, setSolutionPdfFileName] = useState(\"\");\n  const [peerReviewPdfFileName, setPeerReviewPdfFileName] = useState(\"\");\n  const [solutionDueDate, setSolutionDueDate] = useState(new Date());\n  const [prDueDate, setPRDueDate] = useState(new Date());\n  useEffect(() => {\n    if (assignment !== undefined && assignment.length !== 0) {\n      setTitle(assignment.title);\n      setSolutionDueDate(new Date(assignment.solutionDueDateTime));\n      setPRDueDate(new Date(assignment.peerReviewDueDateTime));\n      setSolutionPdfFileName(assignment.solutionPdfFileName);\n      setPeerReviewPdfFileName(assignment.peerReviewPdfFileName);\n      setSolutionPdfDoc(assignment.solutionPdfDoc);\n      setPeerReviewPdfDoc(assignment.peerReviewPdfDoc);\n      setLoading(false);\n    }\n  }, [assignment]);\n  useEffect(() => {\n    var assignmentID = location.state.assignmentID;\n    getSpecificAssignment(assignmentID).then(value => {\n      console.log(value);\n      setAssignment(value);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(newAssignment);\n  useEffect(() => {\n    const generateAssignment = () => {\n      setNewAssignment({ ...assignment,\n        courseID: location.state.courseID,\n        title: title,\n        solutionPdfDoc: solutionPdfDoc,\n        peerReviewPdfDoc: peerReviewPdfDoc,\n        solutionPdfFileName: solutionPdfFileName,\n        peerReviewPdfFileName: peerReviewPdfFileName,\n        solutionDueDateTime: solutionDueDate.toJSON().split(\".\")[0],\n        peerReviewDueDateTime: prDueDate.toJSON().split(\".\")[0]\n      });\n    };\n\n    generateAssignment();\n  }, [title, solutionPdfDoc, peerReviewPdfDoc, solutionDueDate, prDueDate]);\n\n  const handleApplyChange = () => {\n    if (title === \"\" || solutionPdfDoc.length === 0 || peerReviewPdfDoc.length === 0) {\n      console.log(\"Error\");\n    } else {\n      const json = JSON.stringify(newAssignment);\n      console.log(json);\n      editAssignmentByProfessor(newAssignment).then(function (response) {\n        history.push(\"/assignmentdisplay\", {\n          assignmentID: assignment.assignmentID,\n          courseID: location.state.courseID\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CustomizedBody, {\n    bg: bg,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      fixed: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CustomizedContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          \"aria-label\": \"breadcrumb\",\n          mb: 5,\n          ml: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.primary\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.primary\",\n            children: \"Courses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.primary\",\n            children: \"Course Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.primary\",\n            style: {\n              fontWeight: \"600\"\n            },\n            children: \"New Assignment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: loading === true ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  fontWeight: \"600\"\n                },\n                variant: \"body1\",\n                component: \"div\",\n                children: \"Build New Assignment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(CustomizedButtons, {\n                onClick: handleApplyChange,\n                type1: true,\n                children: \"Apply Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(CustomizedCard, {\n              sx: {\n                marginBottom: \"30px\",\n                marginTop: \"30px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"column\",\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    style: {\n                      fontWeight: \"600\"\n                    },\n                    variant: \"body1\",\n                    component: \"div\",\n                    children: \"Title Assignment:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                    direction: \"row\",\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(CustomizedTextField, {\n                      value: title,\n                      handleTextFieldChange: setTitle,\n                      children: \"Title\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      style: {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        fontWeight: \"600\"\n                      },\n                      variant: \"body1\",\n                      component: \"div\",\n                      children: \"\\u2018Solution\\u2019 and \\u2018Peer Review\\u2019 will be added to title in their respective phases.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(CustomizedCard, {\n              sx: {\n                marginBottom: \"30px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"column\",\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    style: {\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      fontWeight: \"600\"\n                    },\n                    variant: \"body1\",\n                    component: \"div\",\n                    children: \"Solution Assignment Content:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    component: \"div\",\n                    children: \"Please set the due date and upload instruction PDFs to be displayed within solution assignment.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                    direction: \"row\",\n                    spacing: 2,\n                    sx: {\n                      display: \"flex\",\n                      alignItems: \"center\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                      dateAdapter: AdapterDateFns,\n                      children: /*#__PURE__*/_jsxDEV(DateTimePicker, {\n                        renderInput: props => /*#__PURE__*/_jsxDEV(TextField, { ...props\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 47\n                        }, this),\n                        label: \"Solution Due Date\",\n                        value: solutionDueDate,\n                        onChange: newValue => {\n                          setSolutionDueDate(newValue);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(CustomizedPdfUploader, {\n                      id: \"solution\",\n                      pdfFileName: solutionPdfFileName,\n                      setPdfFileName: setSolutionPdfFileName,\n                      setPdfFile: setSolutionPdfDoc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(CustomizedCard, {\n              sx: {\n                marginBottom: \"30px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"column\",\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    style: {\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      fontWeight: \"600\"\n                    },\n                    variant: \"body1\",\n                    component: \"div\",\n                    children: \"Peer Review Assignment Content:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    component: \"div\",\n                    children: \"Please set the due date and upload instruction PDFs to be displayed within Peer Review Assignment. Please note that peer reviews must be manually sent for review by professors after quality checking.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                    direction: \"row\",\n                    spacing: 2,\n                    sx: {\n                      display: \"flex\",\n                      alignItems: \"center\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                      dateAdapter: AdapterDateFns,\n                      children: /*#__PURE__*/_jsxDEV(DateTimePicker, {\n                        renderInput: props => /*#__PURE__*/_jsxDEV(TextField, { ...props\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 256,\n                          columnNumber: 47\n                        }, this),\n                        label: \"Peer Review Due Date\",\n                        value: prDueDate,\n                        onChange: newValue => {\n                          setPRDueDate(newValue);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(CustomizedPdfUploader, {\n                      id: \"peerReview\",\n                      pdfFileName: peerReviewPdfFileName,\n                      setPdfFileName: setPeerReviewPdfFileName,\n                      setPdfFile: setPeerReviewPdfDoc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AssignmentEdit, \"f5HLANZIUDl0yAiC0x9CwIDUQWQ=\");\n\n_c = AssignmentEdit;\nexport default AssignmentEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignmentEdit\");","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/AssignmentEdit.js"],"names":["React","useState","useEffect","Link","Grid","Card","CardHeader","CardContent","Container","Typography","Box","Stack","Radio","Breadcrumbs","NavBar","CustomizedButtons","bg","TextField","CustomizedBody","Document","Page","pdfjs","CustomizedContainer","CustomizedTextField","CustomizedCard","CustomizedPdfUploader","AdapterDateFns","LocalizationProvider","DateTimePicker","editAssignmentByProfessor","getSpecificAssignment","Loading","GlobalWorkerOptions","workerSrc","version","AssignmentEdit","history","location","loading","setLoading","newAssignment","setNewAssignment","assignment","setAssignment","title","setTitle","solutionPdfDoc","setSolutionPdfDoc","peerReviewPdfDoc","setPeerReviewPdfDoc","solutionPdfFileName","setSolutionPdfFileName","peerReviewPdfFileName","setPeerReviewPdfFileName","solutionDueDate","setSolutionDueDate","Date","prDueDate","setPRDueDate","undefined","length","solutionDueDateTime","peerReviewDueDateTime","assignmentID","state","then","value","console","log","catch","err","generateAssignment","courseID","toJSON","split","handleApplyChange","json","JSON","stringify","response","push","error","fontWeight","marginBottom","marginTop","display","alignItems","flexDirection","props","newValue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Radio,\n  Breadcrumbs,\n} from \"@mui/material\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport TextField from \"@mui/material/TextField\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n// Worker\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport {\n  editAssignmentByProfessor,\n  getSpecificAssignment,\n} from \"../../axios/APIRequests\";\nimport Loading from \"../../components/Loading\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction AssignmentEdit({ history, location }) {\n  const [loading, setLoading] = React.useState(true);\n  const [newAssignment, setNewAssignment] = useState();\n  const [assignment, setAssignment] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [solutionPdfDoc, setSolutionPdfDoc] = useState([]);\n  const [peerReviewPdfDoc, setPeerReviewPdfDoc] = useState([]);\n  const [solutionPdfFileName, setSolutionPdfFileName] = useState(\"\");\n  const [peerReviewPdfFileName, setPeerReviewPdfFileName] = useState(\"\");\n  const [solutionDueDate, setSolutionDueDate] = useState(new Date());\n  const [prDueDate, setPRDueDate] = useState(new Date());\n  useEffect(() => {\n    if (assignment !== undefined && assignment.length !== 0) {\n      setTitle(assignment.title);\n      setSolutionDueDate(new Date(assignment.solutionDueDateTime));\n      setPRDueDate(new Date(assignment.peerReviewDueDateTime));\n      setSolutionPdfFileName(assignment.solutionPdfFileName);\n      setPeerReviewPdfFileName(assignment.peerReviewPdfFileName);\n      setSolutionPdfDoc(assignment.solutionPdfDoc);\n      setPeerReviewPdfDoc(assignment.peerReviewPdfDoc);\n      setLoading(false);\n    }\n  }, [assignment]);\n  useEffect(() => {\n    var assignmentID = location.state.assignmentID\n    getSpecificAssignment(assignmentID)\n    .then((value) => {\n      console.log(value);\n      setAssignment(value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }, []);\n  console.log(newAssignment);\n  useEffect(() => {\n    const generateAssignment = () => {\n      setNewAssignment({\n        ...assignment,\n        courseID: location.state.courseID,\n        title: title,\n        solutionPdfDoc: solutionPdfDoc,\n        peerReviewPdfDoc: peerReviewPdfDoc,\n        solutionPdfFileName: solutionPdfFileName,\n        peerReviewPdfFileName: peerReviewPdfFileName,\n        solutionDueDateTime: solutionDueDate.toJSON().split(\".\")[0],\n        peerReviewDueDateTime: prDueDate.toJSON().split(\".\")[0],\n      });\n    };\n\n    generateAssignment();\n  }, [title, solutionPdfDoc, peerReviewPdfDoc, solutionDueDate, prDueDate]);\n\n  const handleApplyChange = () => {\n    if (\n      title === \"\" ||\n      solutionPdfDoc.length === 0 ||\n      peerReviewPdfDoc.length === 0\n    ) {\n      console.log(\"Error\");\n    } else {\n      const json = JSON.stringify(newAssignment);\n      console.log(json);\n      editAssignmentByProfessor(newAssignment)\n        .then(function (response) {\n          history.push(\"/assignmentdisplay\", {\n            assignmentID: assignment.assignmentID,\n            courseID: location.state.courseID,\n          });\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed></NavBar>\n      <>\n        <CustomizedContainer>\n          <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n            <Typography color=\"text.primary\">Home</Typography>\n            <Typography color=\"text.primary\">Courses</Typography>\n            <Typography color=\"text.primary\">Course Name</Typography>\n            <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n              New Assignment\n            </Typography>\n          </Breadcrumbs>\n          <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n          <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Typography\n              style={{ fontWeight: \"600\" }}\n              variant=\"body1\"\n              component=\"div\"\n            >\n              Build New Assignment\n            </Typography>\n\n            <CustomizedButtons onClick={handleApplyChange} type1>\n              Apply Changes\n            </CustomizedButtons>\n          </Stack>\n\n          {/* First Box */}\n          <CustomizedCard sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}>\n            <CardContent>\n              <Stack direction=\"column\" spacing={2}>\n                <Typography\n                  style={{\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"body1\"\n                  component=\"div\"\n                >\n                  Title Assignment:\n                </Typography>\n                <Stack direction=\"row\" spacing={2}>\n                  <CustomizedTextField\n                    value={title}\n                    handleTextFieldChange={setTitle}\n                  >\n                    Title\n                  </CustomizedTextField>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    ‘Solution’ and ‘Peer Review’ will be added to title in their\n                    respective phases.\n                  </Typography>\n                </Stack>\n              </Stack>\n            </CardContent>\n          </CustomizedCard>\n\n          {/* second box */}\n          <CustomizedCard sx={{ marginBottom: \"30px\" }}>\n            <CardContent>\n              <Stack direction=\"column\" spacing={2}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"body1\"\n                  component=\"div\"\n                >\n                  Solution Assignment Content:\n                </Typography>\n                <Typography variant=\"body2\" component=\"div\">\n                  Please set the due date and upload instruction PDFs to be\n                  displayed within solution assignment.\n                </Typography>\n                <Stack\n                  direction=\"row\"\n                  spacing={2}\n                  sx={{ display: \"flex\", alignItems: \"center\" }}\n                >\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DateTimePicker\n                      renderInput={(props) => <TextField {...props} />}\n                      label=\"Solution Due Date\"\n                      value={solutionDueDate}\n                      onChange={(newValue) => {\n                        setSolutionDueDate(newValue);\n                      }}\n                    />\n                  </LocalizationProvider>\n                  <CustomizedPdfUploader\n                    id=\"solution\"\n                    pdfFileName={solutionPdfFileName}\n                    setPdfFileName={setSolutionPdfFileName}\n                    setPdfFile={setSolutionPdfDoc}\n                  ></CustomizedPdfUploader>\n                </Stack>\n              </Stack>\n            </CardContent>\n          </CustomizedCard>\n\n          {/* third box */}\n          <CustomizedCard sx={{ marginBottom: \"30px\" }}>\n            <CardContent>\n              <Stack direction=\"column\" spacing={2}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"body1\"\n                  component=\"div\"\n                >\n                  Peer Review Assignment Content:\n                </Typography>\n                <Typography variant=\"body2\" component=\"div\">\n                  Please set the due date and upload instruction PDFs to be\n                  displayed within Peer Review Assignment. Please note that peer\n                  reviews must be manually sent for review by professors after\n                  quality checking.\n                </Typography>\n                <Stack\n                  direction=\"row\"\n                  spacing={2}\n                  sx={{ display: \"flex\", alignItems: \"center\" }}\n                >\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DateTimePicker\n                      renderInput={(props) => <TextField {...props} />}\n                      label=\"Peer Review Due Date\"\n                      value={prDueDate}\n                      onChange={(newValue) => {\n                        setPRDueDate(newValue);\n                      }}\n                    />\n                  </LocalizationProvider>\n                  <CustomizedPdfUploader\n                    id=\"peerReview\"\n                    pdfFileName={peerReviewPdfFileName}\n                    setPdfFileName={setPeerReviewPdfFileName}\n                    setPdfFile={setPeerReviewPdfDoc}\n                  ></CustomizedPdfUploader>\n                </Stack>\n              </Stack>\n            </CardContent>\n          </CustomizedCard>\n          </>\n          )}\n        </>\n        </CustomizedContainer>\n      </>\n    </CustomizedBody>\n  );\n}\n\nexport default AssignmentEdit;\n"]},"metadata":{},"sourceType":"module"}