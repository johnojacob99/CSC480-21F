{"ast":null,"code":"import{combineReducers,configureStore}from'@reduxjs/toolkit';import userReducer from'../features/userSlice';import{persistStore,persistReducer}from\"redux-persist\";import storageSession from'redux-persist/lib/storage/session';import{FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from'redux-persist';var persistConfig={key:\"root\",storage:storageSession,whitelist:['userReducer']};var reducer=combineReducers({userReducer:userReducer});var persistReducer_=persistReducer(persistConfig,reducer);var store=configureStore({reducer:persistReducer_,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}});}});export var persistor=persistStore(store);export default store;","map":{"version":3,"sources":["/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/app/store.js"],"names":["combineReducers","configureStore","userReducer","persistStore","persistReducer","storageSession","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","whitelist","reducer","persistReducer_","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,OAASA,eAAT,CAA0BC,cAA1B,KAAgD,kBAAhD,CACA,MAAOC,CAAAA,WAAP,KAAwB,uBAAxB,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,cAAP,KAA2B,mCAA3B,CACA,OACEC,KADF,CAEEC,SAFF,CAGEC,KAHF,CAIEC,OAJF,CAKEC,KALF,CAMEC,QANF,KAOO,eAPP,CAQA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBC,OAAO,CAACT,cAFY,CAGpBU,SAAS,CAAE,CAAC,aAAD,CAHS,CAAtB,CAKA,GAAMC,CAAAA,OAAO,CAAGhB,eAAe,CAAC,CAC5BE,WAAW,CAAXA,WAD4B,CAAD,CAA/B,CAIA,GAAMe,CAAAA,eAAe,CAAGb,cAAc,CAACQ,aAAD,CAAgBI,OAAhB,CAAtC,CACA,GAAME,CAAAA,KAAK,CAAGjB,cAAc,CAAC,CAC3Be,OAAO,CAAEC,eADkB,CAE3BE,UAAU,CAAE,oBAACC,oBAAD,QACZA,CAAAA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAAChB,KAAD,CAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CADC,CADA,CAAD,CADR,EAFe,CAAD,CAA5B,CAUA,MAAO,IAAMY,CAAAA,SAAS,CAAGpB,YAAY,CAACe,KAAD,CAA9B,CACP,cAAeA,CAAAA,KAAf","sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport userReducer from '../features/userSlice'\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storageSession from 'redux-persist/lib/storage/session'\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nconst persistConfig = {\n  key: \"root\",\n  storage:storageSession,\n  whitelist: ['userReducer']\n};\nconst reducer = combineReducers({\n    userReducer,\n})\n\nconst persistReducer_ = persistReducer(persistConfig, reducer);\nconst store = configureStore({\n  reducer: persistReducer_,\n  middleware: (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport default store\n"]},"metadata":{},"sourceType":"module"}