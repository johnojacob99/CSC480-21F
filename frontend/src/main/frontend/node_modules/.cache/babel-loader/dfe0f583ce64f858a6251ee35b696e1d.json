{"ast":null,"code":"var _jsxFileName = \"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/CourseResultPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // @mui components\n\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\"; // styled components\n\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport { CardContent, CardHeader, Grid, IconButton, ListItem, ListItemText, Stack, Breadcrumbs } from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport SuccessfulNotification from \"../../components/SuccessfulNotification\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport { getAssignmentsByProfessor } from \"../../axios/APIRequests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    sx: {\n      borderRadius: \"10px\"\n    },\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\n\nfunction CourseResultPage({\n  history\n}) {\n  _s();\n\n  const [tab, setTab] = useState(0);\n  const [filterType, setFilterType] = useState(\"All\");\n  const [courses, setCourses] = useState();\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const {\n    user,\n    isAuthenticated,\n    authLoading\n  } = getUser;\n  const [loading, setLoading] = React.useState(true);\n  const [courseNames, setCourseNames] = React.useState([]);\n  useEffect(() => {\n    var nameLists = [];\n\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map(course => {\n        nameLists.push(course.code);\n      });\n      setCourseNames(nameLists);\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getAssignmentsByProfessor().then(value => {\n      console.log(value);\n      setCourses(value);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // useEffect(() => {\n  //   console.log(filterType);\n  //   const filteredItems = courses.assignments.filter((assignment) => {\n  //     return item.type == filterType || filterType === \"All\";\n  //   });\n  //   setItems(filteredItems);\n  // }, [filterType]);\n\n  return /*#__PURE__*/_jsxDEV(CustomizedBody, {\n    bg: bg,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      fixed: true,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomizedContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        \"aria-label\": \"breadcrumb\",\n        mb: 5,\n        ml: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.primary\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.primary\",\n          style: {\n            fontWeight: \"600\"\n          },\n          children: \"Course Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: loading === true ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: courses.length === 0 ? /*#__PURE__*/_jsxDEV(CustomizedCard, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                style: {\n                  flex: 1\n                },\n                alignItems: \"center\",\n                children: \"Please create a new course\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  display: \"flex\",\n                  textAlign: \"center\",\n                  fontWeight: \"600\"\n                },\n                variant: \"h6\",\n                component: \"div\",\n                children: \"Quality Check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(CustomizedTabs, {\n                type3: true,\n                setTab: setTab,\n                value: tab,\n                fullWidth: \"fullWidth\",\n                labels: courseNames\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), courses.map((course, key) => /*#__PURE__*/_jsxDEV(TabPanel, {\n                value: tab,\n                index: key,\n                children: /*#__PURE__*/_jsxDEV(CustomizedCard, {\n                  children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                    sx: {\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\"\n                    },\n                    title: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        sx: {\n                          display: \"flex\",\n                          justifyContent: \"flex-end\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(CustomizedButtons, {\n                          type3: true,\n                          model: \"radio2\",\n                          fullwidth: true,\n                          filterType: filterType,\n                          setFilterType: setFilterType,\n                          children: \"Filter Results\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 162,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    sx: {\n                      paddingTop: \"0\"\n                    },\n                    children: course.assignments.map(assignment => {\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: !assignment.draft && /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [(filterType === \"All\" || filterType === \"Completed\" === false) &&\n                          /*#__PURE__*/\n                          //assignment.solution.isReviewed\n                          _jsxDEV(ListItem, {\n                            button: true,\n                            divider: true,\n                            onClick: () => history.push(\"/studentsolutionqualitycheck\", {\n                              assignmentID: assignment.assignmentID\n                            }),\n                            secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                              edge: \"end\",\n                              children: /*#__PURE__*/_jsxDEV(BsArrowRightCircle, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 202,\n                                columnNumber: 47\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 201,\n                              columnNumber: 45\n                            }, this),\n                            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                              sx: {\n                                width: \"30%\"\n                              },\n                              primary: `${assignment.title} Solutions`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 206,\n                              columnNumber: 43\n                            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: //assignment.solution.isReviewed\n                              assignment.reviewStage === false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                                  sx: {\n                                    display: \"flex\",\n                                    justifyContent: \"center\"\n                                  },\n                                  primary: `Due ${new Date(assignment.solutionDueDateTime).toLocaleString()}`\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 217,\n                                  columnNumber: 51\n                                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                  primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                                    style: {\n                                      display: \"flex\",\n                                      alignItems: \"center\",\n                                      justifyContent: \"flex-end\"\n                                    },\n                                    children: [/*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n                                      sx: {\n                                        color: \"#0DC38D\",\n                                        marginRight: \"10px\"\n                                      },\n                                      fontSize: \"medium\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 236,\n                                      columnNumber: 57\n                                    }, this), \" \", /*#__PURE__*/_jsxDEV(_Fragment, {\n                                      children: \"Needs Review\"\n                                    }, void 0, false)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 228,\n                                    columnNumber: 55\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 226,\n                                  columnNumber: 51\n                                }, this)]\n                              }, void 0, true) : /*#__PURE__*/_jsxDEV(ListItemText, {\n                                sx: {\n                                  display: \"flex\",\n                                  justifyContent: \"flex-end\"\n                                },\n                                primary: `Completed ${new Date(assignment.solutionDueDateTime).toLocaleString()}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 249,\n                                columnNumber: 49\n                              }, this)\n                            }, void 0, false)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 188,\n                            columnNumber: 41\n                          }, this), assignment.reviewStage && /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: (filterType === \"All\" || filterType === \"Completed\" === false) &&\n                            /*#__PURE__*/\n                            //assignment.peerreview.isReviewed\n                            _jsxDEV(ListItem, {\n                              button: true,\n                              divider: true,\n                              onClick: () => history.push(\"/studentpeerreviewqualitycheck\", {\n                                assignmentID: assignment.assignmentID\n                              }),\n                              secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                edge: \"end\",\n                                children: /*#__PURE__*/_jsxDEV(BsArrowRightCircle, {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 282,\n                                  columnNumber: 51\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 281,\n                                columnNumber: 49\n                              }, this),\n                              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                                sx: {\n                                  width: \"30%\"\n                                },\n                                primary: `${assignment.title} Peer Reviews`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 286,\n                                columnNumber: 47\n                              }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                                children: //assignment.peerreview.isReviewed\n                                assignment.reviewStage === false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                                  children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                                    sx: {\n                                      display: \"flex\",\n                                      justifyContent: \"center\"\n                                    },\n                                    primary: `submissions closed ${new Date(assignment.peerReviewDueDateTime).toLocaleString()}`\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 297,\n                                    columnNumber: 55\n                                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                    primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                                      style: {\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                        justifyContent: \"flex-end\"\n                                      },\n                                      children: [/*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n                                        sx: {\n                                          color: \"#0DC38D\",\n                                          marginRight: \"10px\"\n                                        },\n                                        fontSize: \"medium\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 319,\n                                        columnNumber: 61\n                                      }, this), \" \", /*#__PURE__*/_jsxDEV(_Fragment, {\n                                        children: \"Needs Review\"\n                                      }, void 0, false)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 310,\n                                      columnNumber: 59\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 308,\n                                    columnNumber: 55\n                                  }, this)]\n                                }, void 0, true) : /*#__PURE__*/_jsxDEV(ListItemText, {\n                                  sx: {\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\"\n                                  },\n                                  primary: `Completed ${new Date(assignment.peerReviewDueDateTime).toLocaleString()}`\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 334,\n                                  columnNumber: 53\n                                }, this)\n                              }, void 0, false)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 268,\n                              columnNumber: 45\n                            }, this)\n                          }, void 0, false)]\n                        }, void 0, true)\n                      }, void 0, false);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CourseResultPage, \"b/HkIlANBW7PYMzI+ZnPpIvpCR8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = CourseResultPage;\nexport default CourseResultPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"CourseResultPage\");","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/CourseResultPage.js"],"names":["React","useState","useEffect","styled","Box","Typography","BsArrowRightCircle","FiberManualRecordIcon","NavBar","CustomizedButtons","CustomizedTabs","bg","CardContent","CardHeader","Grid","IconButton","ListItem","ListItemText","Stack","Breadcrumbs","CustomizedCard","CustomizedContainer","SuccessfulNotification","Link","useSelector","useDispatch","selectUser","Loading","CustomizedBody","axios","getAssignmentsByProfessor","TabPanel","props","children","value","index","other","borderRadius","CourseResultPage","history","tab","setTab","filterType","setFilterType","courses","setCourses","dispatch","getUser","user","isAuthenticated","authLoading","loading","setLoading","courseNames","setCourseNames","nameLists","undefined","length","map","course","push","code","then","console","log","catch","err","fontWeight","flex","display","textAlign","key","flexDirection","justifyContent","paddingTop","assignments","assignment","draft","assignmentID","width","title","reviewStage","Date","solutionDueDateTime","toLocaleString","alignItems","color","marginRight","peerReviewDueDateTime"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport SuccessfulNotification from \"../../components/SuccessfulNotification\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\n\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport { getAssignmentsByProfessor } from \"../../axios/APIRequests\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction CourseResultPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [filterType, setFilterType] = useState(\"All\");\n  const [courses, setCourses] = useState();\n\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n  const [loading, setLoading] = React.useState(true);\n  const [courseNames, setCourseNames] = React.useState([]);\n\n  useEffect(() => {\n    var nameLists = [];\n\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course) => {\n        nameLists.push(course.code);\n      });\n      setCourseNames(nameLists);\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getAssignmentsByProfessor()\n      .then((value) => {\n        console.log(value);\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  // useEffect(() => {\n  //   console.log(filterType);\n  //   const filteredItems = courses.assignments.filter((assignment) => {\n  //     return item.type == filterType || filterType === \"All\";\n  //   });\n  //   setItems(filteredItems);\n  // }, [filterType]);\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Course Results\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              {courses.length === 0 ? (\n                <CustomizedCard>\n                  <CardContent>\n                    <Stack style={{ flex: 1 }} alignItems=\"center\">\n                      Please create a new course\n                    </Stack>\n                  </CardContent>\n                </CustomizedCard>\n              ) : (\n                <>\n                  <Stack\n                    direction=\"row\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                    mb={3}\n                  >\n                    <Typography\n                      style={{\n                        display: \"flex\",\n                        textAlign: \"center\",\n                        fontWeight: \"600\",\n                      }}\n                      variant=\"h6\"\n                      component=\"div\"\n                    >\n                      Quality Check\n                    </Typography>\n                  </Stack>\n                  <div>\n                    <CustomizedTabs\n                      type3\n                      setTab={setTab}\n                      value={tab}\n                      fullWidth={\"fullWidth\"}\n                      labels={courseNames}\n                    ></CustomizedTabs>\n                    {courses.map((course, key) => (\n                      <TabPanel value={tab} index={key}>\n                        <CustomizedCard>\n                          <CardHeader\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                            }}\n                            title={\n                              <Grid container>\n                                <Grid\n                                  item\n                                  xs={12}\n                                  sx={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\",\n                                  }}\n                                >\n                                  <CustomizedButtons\n                                    type3\n                                    model={\"radio2\"}\n                                    fullwidth\n                                    filterType={filterType}\n                                    setFilterType={setFilterType}\n                                  >\n                                    Filter Results\n                                  </CustomizedButtons>\n                                </Grid>\n                              </Grid>\n                            }\n                          ></CardHeader>\n                          <CardContent\n                            sx={{\n                              paddingTop: \"0\",\n                            }}\n                          >\n                            {course.assignments.map((assignment) => {\n                              return (\n                                <>\n                                  {!assignment.draft && (\n                                    <>\n                                      {(filterType === \"All\" ||\n                                        (filterType === \"Completed\") ===\n                                          false) && ( //assignment.solution.isReviewed\n                                        <ListItem\n                                          button\n                                          divider\n                                          onClick={() =>\n                                            history.push(\n                                              \"/studentsolutionqualitycheck\",\n                                              {\n                                                assignmentID:\n                                                  assignment.assignmentID,\n                                              }\n                                            )\n                                          }\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            sx={{ width: \"30%\" }}\n                                            primary={`${assignment.title} Solutions`}\n                                          />\n\n                                          <>\n                                            {\n                                              //assignment.solution.isReviewed\n                                              assignment.reviewStage ===\n                                              false ? (\n                                                <>\n                                                  <ListItemText\n                                                    sx={{\n                                                      display: \"flex\",\n                                                      justifyContent: \"center\",\n                                                    }}\n                                                    primary={`Due ${new Date(\n                                                      assignment.solutionDueDateTime\n                                                    ).toLocaleString()}`}\n                                                  />\n                                                  <ListItemText\n                                                    primary={\n                                                      <div\n                                                        style={{\n                                                          display: \"flex\",\n                                                          alignItems: \"center\",\n                                                          justifyContent:\n                                                            \"flex-end\",\n                                                        }}\n                                                      >\n                                                        <FiberManualRecordIcon\n                                                          sx={{\n                                                            color: \"#0DC38D\",\n                                                            marginRight: \"10px\",\n                                                          }}\n                                                          fontSize=\"medium\"\n                                                        />{\" \"}\n                                                        <>Needs Review</>\n                                                      </div>\n                                                    }\n                                                  />\n                                                </>\n                                              ) : (\n                                                <ListItemText\n                                                  sx={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-end\",\n                                                  }}\n                                                  primary={`Completed ${new Date(\n                                                    assignment.solutionDueDateTime\n                                                  ).toLocaleString()}`}\n                                                />\n                                              )\n                                            }\n                                          </>\n                                        </ListItem>\n                                      )}\n                                      {assignment.reviewStage && (\n                                        <>\n                                          {(filterType === \"All\" ||\n                                            (filterType === \"Completed\") ===\n                                              false) && ( //assignment.peerreview.isReviewed\n                                            <ListItem\n                                              button\n                                              divider\n                                              onClick={() =>\n                                                history.push(\n                                                  \"/studentpeerreviewqualitycheck\",\n                                                  {\n                                                    assignmentID:\n                                                      assignment.assignmentID,\n                                                  }\n                                                )\n                                              }\n                                              secondaryAction={\n                                                <IconButton edge=\"end\">\n                                                  <BsArrowRightCircle />\n                                                </IconButton>\n                                              }\n                                            >\n                                              <ListItemText\n                                                sx={{ width: \"30%\" }}\n                                                primary={`${assignment.title} Peer Reviews`}\n                                              />\n\n                                              <>\n                                                {\n                                                  //assignment.peerreview.isReviewed\n                                                  assignment.reviewStage ===\n                                                  false ? (\n                                                    <>\n                                                      <ListItemText\n                                                        sx={{\n                                                          display: \"flex\",\n                                                          justifyContent:\n                                                            \"center\",\n                                                        }}\n                                                        primary={`submissions closed ${new Date(\n                                                          assignment.peerReviewDueDateTime\n                                                        ).toLocaleString()}`}\n                                                      />\n\n                                                      <ListItemText\n                                                        primary={\n                                                          <div\n                                                            style={{\n                                                              display: \"flex\",\n                                                              alignItems:\n                                                                \"center\",\n                                                              justifyContent:\n                                                                \"flex-end\",\n                                                            }}\n                                                          >\n                                                            <FiberManualRecordIcon\n                                                              sx={{\n                                                                color:\n                                                                  \"#0DC38D\",\n                                                                marginRight:\n                                                                  \"10px\",\n                                                              }}\n                                                              fontSize=\"medium\"\n                                                            />{\" \"}\n                                                            <>Needs Review</>\n                                                          </div>\n                                                        }\n                                                      />\n                                                    </>\n                                                  ) : (\n                                                    <ListItemText\n                                                      sx={{\n                                                        display: \"flex\",\n                                                        justifyContent:\n                                                          \"flex-end\",\n                                                      }}\n                                                      primary={`Completed ${new Date(\n                                                        assignment.peerReviewDueDateTime\n                                                      ).toLocaleString()}`}\n                                                    />\n                                                  )\n                                                }\n                                              </>\n                                            </ListItem>\n                                          )}\n                                        </>\n                                      )}\n                                    </>\n                                  )}\n                                </>\n                              );\n                            })}\n                          </CardContent>\n                        </CustomizedCard>\n                      </TabPanel>\n                    ))}\n                  </div>\n                </>\n              )}\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default CourseResultPage;\n"]},"metadata":{},"sourceType":"module"}