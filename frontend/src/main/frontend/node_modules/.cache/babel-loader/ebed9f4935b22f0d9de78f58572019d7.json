{"ast":null,"code":"var _jsxFileName = \"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/StudentHomeDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // @mui components\n\nimport { Grid, Card, CardHeader, CardContent, Container, Typography, Box, Stack, Divider, List, ListItem, IconButton, ListItemAvatar, Avatar, ListItemText, ListItemButton, ListItemIcon, Breadcrumbs } from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport { BiCheckCircle } from \"react-icons/bi\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport bg from \"../../images/multi_background_dashboard.jpg\"; // styled components\n\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedDivider from \"../../components/CustomizedDivider\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport { getAssignmenstByStudent, getResultsByStudent } from \"../../axios/APIRequests\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CourseBar({\n  course,\n  history\n}) {\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 0,\n    children: [/*#__PURE__*/_jsxDEV(CustomizedButtons, {\n      type3: true,\n      fullwidth: true,\n      onClick: () => history.push(\"/studentresults\"),\n      children: `${course.title}, Section ${course.sectionNumber}, ${course.semester}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      sx: {\n        flex: 1\n      },\n      children: course.assignments.map(assignment => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: !assignment.draft && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: assignment.averageScore !== -1 ? /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            divider: true,\n            onClick: () => history.push(\"/studentpeerreviewresultsdisplay\", {\n              assignmentID: assignment.assignmentID\n            }),\n            secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"delete\",\n              children: /*#__PURE__*/_jsxDEV(BsArrowRightCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 23\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `${assignment.title}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              sx: {\n                display: \"flex\",\n                justifyContent: \"flex-end\"\n              },\n              primary: \"Score: \" + `${Math.round(assignment.averageScore)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            divider: true,\n            disabled: true,\n            secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"delete\",\n              children: /*#__PURE__*/_jsxDEV(BsArrowRightCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `${assignment.title}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"In process\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)\n        }, void 0, false)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CourseBar;\n\nfunction StudentHomeDashBoard({\n  history\n}) {\n  _s();\n\n  const [loading, setLoading] = React.useState(true);\n  const [assignmentCourses, setAssignmentCourses] = React.useState([]);\n  const [resultCourses, setResultCourses] = React.useState([]);\n  useEffect(() => {\n    if (assignmentCourses === undefined || assignmentCourses.length === 0) return;\n    if (resultCourses === undefined || resultCourses.length === 0) return;\n    setLoading(false);\n  }, [assignmentCourses, resultCourses]);\n  useEffect(() => {\n    getAssignmenstByStudent().then(value => {\n      setAssignmentCourses(value);\n      getResultsByStudent().then(value => {\n        setResultCourses(value);\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CustomizedBody, {\n    bg: bg,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomizedContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        \"aria-label\": \"breadcrumb\",\n        mb: 5,\n        ml: 2,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.primary\",\n          style: {\n            fontWeight: \"600\"\n          },\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        direction: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4.7,\n          children: /*#__PURE__*/_jsxDEV(CustomizedCard, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              sx: {\n                paddingBottom: \"8px\"\n              },\n              title: /*#__PURE__*/_jsxDEV(List, {\n                dense: true,\n                sx: {\n                  padding: \"0\",\n                  margin: \"0\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n                      sx: {\n                        color: \"#0DC38D\"\n                      },\n                      fontSize: \"medium\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      fontWeight: \"600\",\n                      variant: \"h6\",\n                      children: \"Recent Results\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CustomizedDivider, {\n              type1: true,\n              sx: {\n                marginBottom: \"15px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                paddingTop: \"0\",\n                display: \"flex\",\n                justifyContent: \"center\"\n              },\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: loading === true ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  className: loading.loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n                  sx: {\n                    flex: 1\n                  },\n                  spacing: 2,\n                  children: resultCourses.map((course, key) => {\n                    return /*#__PURE__*/_jsxDEV(CourseBar, {\n                      course: course,\n                      history: history\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          spacing: 3,\n          xs: 7.3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(CustomizedCard, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                sx: {\n                  paddingBottom: \"8px\"\n                },\n                title: /*#__PURE__*/_jsxDEV(List, {\n                  dense: true,\n                  sx: {\n                    padding: \"0\",\n                    margin: \"0\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItem, {\n                    secondaryAction: /*#__PURE__*/_jsxDEV(CustomizedButtons, {\n                      type1: true,\n                      height1: true,\n                      onClick: () => {\n                        history.push(\"./seeallassignment\");\n                      },\n                      children: \"See All\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 27\n                    }, this),\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n                        sx: {\n                          color: \"#347DEB\"\n                        },\n                        fontSize: \"medium\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"span\",\n                        fontWeight: \"600\",\n                        variant: \"h6\",\n                        children: \"Upcoming Assignments\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CustomizedDivider, {\n                type1: true,\n                sx: {\n                  marginBottom: \"15px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                sx: {\n                  paddingTop: 0,\n                  display: \"flex\",\n                  justifyContent: \"center\"\n                },\n                children: loading === true ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  className: loading.loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(List, {\n                  sx: {\n                    width: \"100%\"\n                  },\n                  children: assignmentCourses.map((course, key) => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: course.assignments.map((assignment, key) => {\n                        return /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: !assignment.draft && /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [!assignment.isSolutionCompleted && /*#__PURE__*/_jsxDEV(ListItem, {\n                              button: true,\n                              divider: true,\n                              onClick: () => {\n                                history.push(\"./newsolutionassignmentview\", {\n                                  assignment: assignment\n                                });\n                              },\n                              secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                edge: \"end\",\n                                children: /*#__PURE__*/_jsxDEV(BsArrowRightCircle, {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 289,\n                                  columnNumber: 47\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 288,\n                                columnNumber: 45\n                              }, this),\n                              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                                primary: `${assignment.title} Solution`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 293,\n                                columnNumber: 43\n                              }, this), assignment.isSolutionCompleted ? /*#__PURE__*/_jsxDEV(ListItemText, {\n                                sx: {\n                                  display: \"flex\",\n                                  justifyContent: \"flex-end\"\n                                },\n                                primary: `Completed ${new Date(assignment.solutionDueDateTime).toLocaleString()}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 297,\n                                columnNumber: 45\n                              }, this) : /*#__PURE__*/_jsxDEV(ListItemText, {\n                                sx: {\n                                  display: \"flex\",\n                                  justifyContent: \"flex-end\"\n                                },\n                                primary: `Due ${new Date(assignment.solutionDueDateTime).toLocaleString()}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 307,\n                                columnNumber: 45\n                              }, this)]\n                            }, key, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 277,\n                              columnNumber: 41\n                            }, this), !assignment.isPeerReviewCompleted && /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: assignment.reviewStage === true && /*#__PURE__*/_jsxDEV(ListItem, {\n                                button: true,\n                                divider: true,\n                                onClick: () => {\n                                  history.push(\"./peerreviewassignmentview\", {\n                                    assignmentID: assignment.assignmentID\n                                  });\n                                },\n                                secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                  edge: \"end\",\n                                  children: /*#__PURE__*/_jsxDEV(BsArrowRightCircle, {}, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 337,\n                                    columnNumber: 51\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 336,\n                                  columnNumber: 49\n                                }, this),\n                                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                                  primary: `${assignment.title} Peer Review`\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 341,\n                                  columnNumber: 47\n                                }, this), assignment.isPeerReviewCompleted ?\n                                /*#__PURE__*/\n                                //assignment.peerreview.isCompleted === true\n                                _jsxDEV(ListItemText, {\n                                  sx: {\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\"\n                                  },\n                                  primary: `Completed ${new Date(assignment.peerReviewDueDateTime).toLocaleString()}`\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 345,\n                                  columnNumber: 49\n                                }, this) : /*#__PURE__*/_jsxDEV(ListItemText, {\n                                  sx: {\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\"\n                                  },\n                                  primary: `Due ${new Date(assignment.peerReviewDueDateTime).toLocaleString()}`\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 355,\n                                  columnNumber: 49\n                                }, this)]\n                              }, key, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 322,\n                                columnNumber: 45\n                              }, this)\n                            }, void 0, false)]\n                          }, void 0, true)\n                        }, void 0, false);\n                      })\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(CustomizedCard, {\n              children: /*#__PURE__*/_jsxDEV(CardHeader, {\n                sx: {\n                  paddingBottom: \"8px\"\n                },\n                title: /*#__PURE__*/_jsxDEV(List, {\n                  dense: true,\n                  sx: {\n                    padding: \"0\",\n                    margin: \"0\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItem, {\n                    button: true,\n                    onClick: () => history.push(\"/studentteams\"),\n                    secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                      edge: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(BsArrowRightCircle, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 393,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 392,\n                      columnNumber: 27\n                    }, this),\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n                        sx: {\n                          color: \"#6F40DC\"\n                        },\n                        fontSize: \"medium\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 398,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"span\",\n                        fontWeight: \"600\",\n                        variant: \"h6\",\n                        children: \"Manage Teams\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 405,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              display: \"flex\",\n              justifyContent: \"flex-end\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StudentHomeDashBoard, \"P5q8QrneGrtkZRmPNEuRpi/25BY=\");\n\n_c2 = StudentHomeDashBoard;\nexport default StudentHomeDashBoard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CourseBar\");\n$RefreshReg$(_c2, \"StudentHomeDashBoard\");","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/StudentHomeDashboard.js"],"names":["React","useState","useEffect","Grid","Card","CardHeader","CardContent","Container","Typography","Box","Stack","Divider","List","ListItem","IconButton","ListItemAvatar","Avatar","ListItemText","ListItemButton","ListItemIcon","Breadcrumbs","CircularProgress","BiCheckCircle","FiberManualRecordIcon","bg","NavBar","CustomizedButtons","CustomizedContainer","CustomizedCard","CustomizedDivider","CustomizedBody","axios","Loading","getAssignmenstByStudent","getResultsByStudent","BsArrowRightCircle","CourseBar","course","history","push","title","sectionNumber","semester","flex","assignments","map","assignment","draft","averageScore","assignmentID","display","justifyContent","Math","round","StudentHomeDashBoard","loading","setLoading","assignmentCourses","setAssignmentCourses","resultCourses","setResultCourses","undefined","length","then","value","catch","err","console","log","fontWeight","paddingBottom","padding","margin","color","marginBottom","paddingTop","key","width","isSolutionCompleted","Date","solutionDueDateTime","toLocaleString","isPeerReviewCompleted","reviewStage","peerReviewDueDateTime"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Divider,\n  List,\n  ListItem,\n  IconButton,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemButton,\n  ListItemIcon,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport { BiCheckCircle } from \"react-icons/bi\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedDivider from \"../../components/CustomizedDivider\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport {\n  getAssignmenstByStudent,\n  getResultsByStudent,\n} from \"../../axios/APIRequests\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nfunction CourseBar({ course, history }) {\n  return (\n    <Stack spacing={0}>\n      <CustomizedButtons\n        type3\n        fullwidth\n        \n        onClick={() => history.push(\"/studentresults\")}\n      >\n        {`${course.title}, Section ${course.sectionNumber}, ${course.semester}`}\n      </CustomizedButtons>\n      <List dense={true} sx={{flex:1}}>\n        {course.assignments.map((assignment) => (\n          <>\n            {!assignment.draft && (\n              <>\n                {assignment.averageScore !== -1 ? (\n                  <ListItem\n                    button\n                    divider\n                    onClick={() =>\n                      history.push(\"/studentpeerreviewresultsdisplay\", {\n                        assignmentID: assignment.assignmentID,\n                      })\n                    }\n                    secondaryAction={\n                      <IconButton edge=\"end\" aria-label=\"delete\">\n                        <BsArrowRightCircle />\n                      </IconButton>\n                    }\n                  >\n                    <ListItemText primary={`${assignment.title}`} />\n                    <ListItemText primary={\"Completed\"} />\n                    <ListItemText\n                      sx={{\n                        display: \"flex\",\n                        justifyContent: \"flex-end\",\n                      }}\n                      primary={\"Score: \" + `${Math.round(assignment.averageScore)}`}\n                    />\n                  </ListItem>\n                ) : (\n                  <ListItem\n                    button\n                    divider\n                    disabled\n                    secondaryAction={\n                      <IconButton edge=\"end\" aria-label=\"delete\">\n                        <BsArrowRightCircle />\n                      </IconButton>\n                    }\n                  >\n                    <ListItemText primary={`${assignment.title}`} />\n                    <ListItemText primary={\"In process\"} />\n                  </ListItem>\n                )}\n              </>\n            )}\n          </>\n        ))}\n      </List>\n    </Stack>\n  );\n}\n\nfunction StudentHomeDashBoard({ history }) {\n  const [loading, setLoading] = React.useState(true);\n  const [assignmentCourses, setAssignmentCourses] = React.useState([]);\n  const [resultCourses, setResultCourses] = React.useState([]);\n  useEffect(() => {\n    if (assignmentCourses === undefined || assignmentCourses.length === 0) return\n    if (resultCourses === undefined || resultCourses.length === 0) return\n    setLoading(false);\n  }, [assignmentCourses,resultCourses ]);\n  useEffect(() => {\n    getAssignmenstByStudent()\n      .then((value) => {\n        setAssignmentCourses(value);\n        getResultsByStudent()\n          .then((value) => {\n            setResultCourses(value);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Home\n          </Typography>\n        </Breadcrumbs>\n        <Grid\n          container\n          spacing={3}\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={4.7}>\n            <CustomizedCard>\n              <CardHeader\n                sx={{ paddingBottom: \"8px\" }}\n                title={\n                  <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                    <ListItem>\n                      <ListItemIcon>\n                        <FiberManualRecordIcon\n                          sx={{ color: \"#0DC38D\" }}\n                          fontSize=\"medium\"\n                        />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={\n                          <Typography\n                            component=\"span\"\n                            fontWeight=\"600\"\n                            variant=\"h6\"\n                          >\n                            Recent Results\n                          </Typography>\n                        }\n                      />\n                    </ListItem>\n                  </List>\n                }\n              ></CardHeader>\n              <CustomizedDivider\n                type1\n                sx={{ marginBottom: \"15px\" }}\n              ></CustomizedDivider>\n              <CardContent\n                sx={{\n                  paddingTop: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <>\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <Stack sx={{flex:1}} spacing={2}>\n                      {resultCourses.map((course, key) => {\n                        return (\n                          <CourseBar\n                            course={course}\n                            key={key}\n                            history={history}\n                          ></CourseBar>\n                        );\n                      })}\n                    </Stack>\n                  )}\n                </>\n              </CardContent>\n            </CustomizedCard>\n          </Grid>\n          <Grid item container spacing={3} xs={7.3}>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem\n                        secondaryAction={\n                          <CustomizedButtons\n                            type1\n                            height1\n                            onClick={() => {\n                              history.push(\"./seeallassignment\");\n                            }}\n                          >\n                            See All\n                          </CustomizedButtons>\n                        }\n                      >\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#347DEB\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Upcoming Assignments\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <List sx={{ width: \"100%\" }}>\n                      {assignmentCourses.map((course, key) => {\n                        return (\n                          <>\n                            {course.assignments.map((assignment, key) => {\n                              return (\n                                <>\n                                  {!assignment.draft && (\n                                    <>\n                                      {!assignment.isSolutionCompleted && (\n                                        <ListItem\n                                          key={key}\n                                          button\n                                          divider\n                                          onClick={() => {\n                                            history.push(\n                                              \"./newsolutionassignmentview\",\n                                              { assignment: assignment }\n                                            );\n                                          }}\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            primary={`${assignment.title} Solution`}\n                                          />\n                                          {assignment.isSolutionCompleted ? (\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Completed ${new Date(\n                                                assignment.solutionDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          ) : (\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Due ${new Date(\n                                                assignment.solutionDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          )}\n                                        </ListItem>\n                                      )}\n                                      {!assignment.isPeerReviewCompleted && (\n                                        <>\n                                          {assignment.reviewStage === true && (\n                                            <ListItem\n                                              key={key}\n                                              button\n                                              divider\n                                              onClick={() => {\n                                                history.push(\n                                                  \"./peerreviewassignmentview\",\n                                                  {\n                                                    assignmentID:\n                                                      assignment.assignmentID,\n                                                  }\n                                                );\n                                              }}\n                                              secondaryAction={\n                                                <IconButton edge=\"end\">\n                                                  <BsArrowRightCircle />\n                                                </IconButton>\n                                              }\n                                            >\n                                              <ListItemText\n                                                primary={`${assignment.title} Peer Review`}\n                                              />\n                                              {assignment.isPeerReviewCompleted ? ( //assignment.peerreview.isCompleted === true\n                                                <ListItemText\n                                                  sx={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-end\",\n                                                  }}\n                                                  primary={`Completed ${new Date(\n                                                    assignment.peerReviewDueDateTime\n                                                  ).toLocaleString()}`}\n                                                />\n                                              ) : (\n                                                <ListItemText\n                                                  sx={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-end\",\n                                                  }}\n                                                  primary={`Due ${new Date(\n                                                    assignment.peerReviewDueDateTime\n                                                  ).toLocaleString()}`}\n                                                />\n                                              )}\n                                            </ListItem>\n                                          )}\n                                        </>\n                                      )}\n                                    </>\n                                  )}\n                                </>\n                              );\n                            })}\n                          </>\n                        );\n                      })}\n                    </List>\n                  )}\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem\n                        button\n                        onClick={() => history.push(\"/studentteams\")}\n                        secondaryAction={\n                          <IconButton edge=\"end\">\n                            <BsArrowRightCircle />\n                          </IconButton>\n                        }\n                      >\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#6F40DC\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Manage Teams\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n              </CustomizedCard>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            ></Grid>\n          </Grid>\n        </Grid>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default StudentHomeDashBoard;\n"]},"metadata":{},"sourceType":"module"}