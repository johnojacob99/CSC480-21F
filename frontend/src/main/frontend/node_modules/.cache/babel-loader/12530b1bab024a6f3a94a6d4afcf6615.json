{"ast":null,"code":"var _jsxFileName = \"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/SeeAllAssignmentPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // @mui components\n\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\"; // styled components\n\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport { CardContent, CardHeader, Grid, IconButton, ListItem, ListItemText, Stack, Breadcrumbs } from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport { getAssignmenstByStudent } from \"../../axios/APIRequests\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    sx: {\n      borderRadius: \"10px\"\n    },\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\n\nfunction SeeAllAssignmentPage({\n  history\n}) {\n  _s();\n\n  const [tab, setTab] = useState(0);\n  const [filterType, setFilterType] = useState(\"All\");\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState();\n  const [courseNames, setCourseNames] = React.useState([]);\n  useEffect(() => {\n    var courseNameLists = [];\n\n    if (courses !== undefined && courses.length !== 0) {\n      console.log(courses);\n      courses.map(course => {\n        courseNameLists.push(course.code);\n      });\n      setCourseNames(courseNameLists);\n      console.log(\"`loading`\");\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getAssignmenstByStudent().then(value => {\n      console.log(value);\n      setCourses(value);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CustomizedBody, {\n    bg: bg,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      fixed: true,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomizedContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        \"aria-label\": \"breadcrumb\",\n        mb: 5,\n        ml: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.primary\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.primary\",\n          style: {\n            fontWeight: \"600\"\n          },\n          children: \"Assignments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: loading === true ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            sx: {\n              marginBottom: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  display: \"flex\",\n                  textAlign: \"center\",\n                  fontWeight: \"600\"\n                },\n                variant: \"h6\",\n                component: \"div\",\n                children: \"Assignments by Course\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              sx: {\n                display: \"flex\",\n                justifyContent: \"flex-end\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CustomizedButtons, {\n                type1: true,\n                onClick: () => history.push(\"/studentteams\"),\n                children: \"View Teams\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CustomizedTabs, {\n              type1: true,\n              setTab: setTab,\n              value: tab,\n              fullWidth: \"fullWidth\",\n              labels: courseNames\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), courses.map((course, id) => /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: tab,\n              index: id,\n              children: /*#__PURE__*/_jsxDEV(CustomizedCard, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  sx: {\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\"\n                  },\n                  title: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      sx: {\n                        display: \"flex\",\n                        justifyContent: \"flex-end\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(CustomizedButtons, {\n                        type3: true,\n                        model: \"radio3\",\n                        fullwidth: true,\n                        filterType: filterType,\n                        setFilterType: setFilterType,\n                        children: \"Filter Results\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    paddingTop: \"0\"\n                  },\n                  children: course.assignments.map((assignment, key) => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: !assignment.draft && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [(filterType === \"All\" || filterType === \"Completed\" === assignment.isSolutionCompleted) && /*#__PURE__*/_jsxDEV(ListItem, {\n                          button: true,\n                          divider: true,\n                          onClick: () => {\n                            history.push(\"./newsolutionassignmentview\", {\n                              assignment: assignment\n                            });\n                          },\n                          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                            edge: \"end\",\n                            children: /*#__PURE__*/_jsxDEV(BsArrowRightCircle, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 187,\n                              columnNumber: 43\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 186,\n                            columnNumber: 41\n                          }, this),\n                          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                            primary: `${assignment.title} Solution`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 191,\n                            columnNumber: 39\n                          }, this), assignment.isSolutionCompleted ? /*#__PURE__*/_jsxDEV(ListItemText, {\n                            sx: {\n                              display: \"flex\",\n                              justifyContent: \"flex-end\"\n                            },\n                            primary: `Completed ${new Date(assignment.solutionDueDateTime).toLocaleString()}`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 195,\n                            columnNumber: 41\n                          }, this) : /*#__PURE__*/_jsxDEV(ListItemText, {\n                            sx: {\n                              display: \"flex\",\n                              justifyContent: \"flex-end\"\n                            },\n                            primary: `Due ${new Date(assignment.solutionDueDateTime).toLocaleString()}`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 205,\n                            columnNumber: 41\n                          }, this)]\n                        }, key, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 175,\n                          columnNumber: 37\n                        }, this), (filterType === \"All\" || filterType === \"Completed\" === assignment.isPeerReviewCompleted) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: assignment.reviewStage === true && /*#__PURE__*/_jsxDEV(ListItem, {\n                            button: true,\n                            divider: true,\n                            onClick: () => {\n                              history.push(\"./peerreviewassignmentview\", {\n                                assignmentID: assignment.assignmentID\n                              });\n                            },\n                            secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                              edge: \"end\",\n                              children: /*#__PURE__*/_jsxDEV(BsArrowRightCircle, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 236,\n                                columnNumber: 47\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 235,\n                              columnNumber: 45\n                            }, this),\n                            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                              primary: `${assignment.title} Peer Review`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 240,\n                              columnNumber: 43\n                            }, this), assignment.isPeerReviewCompleted ?\n                            /*#__PURE__*/\n                            //assignment.peerreview.isCompleted === true\n                            _jsxDEV(ListItemText, {\n                              sx: {\n                                display: \"flex\",\n                                justifyContent: \"flex-end\"\n                              },\n                              primary: `Completed ${new Date(assignment.peerReviewDueDateTime).toLocaleString()}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 244,\n                              columnNumber: 45\n                            }, this) : /*#__PURE__*/_jsxDEV(ListItemText, {\n                              sx: {\n                                display: \"flex\",\n                                justifyContent: \"flex-end\"\n                              },\n                              primary: `Due ${new Date(assignment.peerReviewDueDateTime).toLocaleString()}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 254,\n                              columnNumber: 45\n                            }, this)]\n                          }, key, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 221,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false)]\n                      }, void 0, true)\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SeeAllAssignmentPage, \"9NeE/CfKFVsFp7bA9sNT3SCqYP0=\");\n\n_c2 = SeeAllAssignmentPage;\nexport default SeeAllAssignmentPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"SeeAllAssignmentPage\");","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/SeeAllAssignmentPage.js"],"names":["React","useState","useEffect","styled","Box","Typography","BsArrowRightCircle","FiberManualRecordIcon","NavBar","CustomizedButtons","CustomizedTabs","bg","CardContent","CardHeader","Grid","IconButton","ListItem","ListItemText","Stack","Breadcrumbs","CustomizedCard","CustomizedContainer","Link","axios","Loading","getAssignmenstByStudent","CustomizedBody","TabPanel","props","children","value","index","other","borderRadius","SeeAllAssignmentPage","history","tab","setTab","filterType","setFilterType","loading","setLoading","courses","setCourses","courseNames","setCourseNames","courseNameLists","undefined","length","console","log","map","course","push","code","then","catch","err","fontWeight","marginBottom","display","textAlign","justifyContent","id","flexDirection","paddingTop","assignments","assignment","key","draft","isSolutionCompleted","title","Date","solutionDueDateTime","toLocaleString","isPeerReviewCompleted","reviewStage","assignmentID","peerReviewDueDateTime"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport { getAssignmenstByStudent } from \"../../axios/APIRequests\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction SeeAllAssignmentPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [filterType, setFilterType] = useState(\"All\");\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState();\n  const [courseNames, setCourseNames] = React.useState([]);\n\n  useEffect(() => {\n    var courseNameLists = [];\n    if (courses !== undefined && courses.length !== 0) {\n      console.log(courses);\n      courses.map((course) => {\n        courseNameLists.push(course.code);\n      });\n      setCourseNames(courseNameLists);\n      console.log(\"`loading`\");\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getAssignmenstByStudent()\n      .then((value) => {\n        console.log(value);\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CustomizedBody bg={bg}\n    >\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Assignments\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Grid container sx={{ marginBottom: \"20px\" }}>\n                <Grid item xs={8}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"h6\"\n                    component=\"div\"\n                  >\n                    Assignments by Course\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  xs={4}\n                  sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                >\n                  <CustomizedButtons\n                    type1\n                    onClick={() => history.push(\"/studentteams\")}\n                  >\n                    View Teams\n                  </CustomizedButtons>\n                </Grid>\n              </Grid>\n              <div>\n                <CustomizedTabs\n                  type1\n                  setTab={setTab}\n                  value={tab}\n                  fullWidth={\"fullWidth\"}\n                  labels={courseNames}\n                ></CustomizedTabs>\n                {courses.map((course, id) => (\n                  <TabPanel value={tab} index={id}>\n                    <CustomizedCard>\n                      <CardHeader\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                        title={\n                          <Grid container>\n                            <Grid\n                              item\n                              xs={12}\n                              sx={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                              }}\n                            >\n                              <CustomizedButtons\n                                type3\n                                model={\"radio3\"}\n                                fullwidth\n                                filterType={filterType}\n                                setFilterType={setFilterType}\n                              >\n                                Filter Results\n                              </CustomizedButtons>\n                            </Grid>\n                          </Grid>\n                        }\n                      ></CardHeader>\n                      <CardContent\n                        sx={{\n                          paddingTop: \"0\",\n                        }}\n                      >\n                        {course.assignments.map((assignment, key) => {\n                          return (\n                            <>\n                              {!assignment.draft && (\n                                <>\n                                  {(filterType === \"All\" ||\n                                    (filterType === \"Completed\") ===\n                                      assignment.isSolutionCompleted) && (\n                                    <ListItem\n                                      key={key}\n                                      button\n                                      divider\n                                      onClick={() => {\n                                        history.push(\n                                          \"./newsolutionassignmentview\",\n                                          { assignment: assignment }\n                                        );\n                                      }}\n                                      secondaryAction={\n                                        <IconButton edge=\"end\">\n                                          <BsArrowRightCircle />\n                                        </IconButton>\n                                      }\n                                    >\n                                      <ListItemText\n                                        primary={`${assignment.title} Solution`}\n                                      />\n                                      {assignment.isSolutionCompleted ? (\n                                        <ListItemText\n                                          sx={{\n                                            display: \"flex\",\n                                            justifyContent: \"flex-end\",\n                                          }}\n                                          primary={`Completed ${new Date(\n                                            assignment.solutionDueDateTime\n                                          ).toLocaleString()}`}\n                                        />\n                                      ) : (\n                                        <ListItemText\n                                          sx={{\n                                            display: \"flex\",\n                                            justifyContent: \"flex-end\",\n                                          }}\n                                          primary={`Due ${new Date(\n                                            assignment.solutionDueDateTime\n                                          ).toLocaleString()}`}\n                                        />\n                                      )}\n                                    </ListItem>\n                                  )}\n                                  {(filterType === \"All\" ||\n                                    (filterType === \"Completed\") === assignment.isPeerReviewCompleted) && (\n                                    <>\n                                      {assignment.reviewStage === true && (\n                                        <ListItem\n                                          key={key}\n                                          button\n                                          divider\n                                          onClick={() => {\n                                            history.push(\n                                              \"./peerreviewassignmentview\",\n                                              {\n                                                assignmentID:\n                                                  assignment.assignmentID,\n                                              }\n                                            );\n                                          }}\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            primary={`${assignment.title} Peer Review`}\n                                          />\n                                          {assignment.isPeerReviewCompleted ? ( //assignment.peerreview.isCompleted === true\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Completed ${new Date(\n                                                assignment.peerReviewDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          ) : (\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Due ${new Date(\n                                                assignment.peerReviewDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          )}\n                                        </ListItem>\n                                      )}\n                                    </>\n                                  )}\n                                </>\n                              )}\n                            </>\n                          );\n                        })}\n                      </CardContent>\n                    </CustomizedCard>\n                  </TabPanel>\n                ))}\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default SeeAllAssignmentPage;\n"]},"metadata":{},"sourceType":"module"}