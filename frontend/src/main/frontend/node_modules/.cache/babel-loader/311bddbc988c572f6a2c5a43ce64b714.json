{"ast":null,"code":"var _jsxFileName = \"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedTextField.js\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { Box, TextField } from \"@mui/material\"; // core components\n\nimport ButtonStyle from \"../styles/ButtonStyle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomizedTextField = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  const {\n    text,\n    value,\n    handleTextFieldChange,\n    comments,\n    isDisabled,\n    number,\n    children,\n    ...rest\n  } = props;\n  var defaultValue = \"\";\n\n  if (value) {\n    defaultValue = value;\n  } // ===== Handle Comments ============\n\n\n  const handleTextField = event => {\n    event.preventDefault();\n    handleTextFieldChange(event.target.value);\n  }; // Styles\n\n\n  const classes = ButtonStyle(); //const classes = makeComponentStyles();\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", number ? /*#__PURE__*/_jsxDEV(TextField, {\n        disabled: isDisabled,\n        sx: {\n          bgcolor: \"#fff\",\n          width: \"100px\"\n        },\n        label: children,\n        id: \"outlined-size-small\",\n        size: \"small\",\n        type: \"number\",\n        InputProps: {\n          inputProps: {\n            min: 0,\n            max: 10\n          }\n        },\n        onChange: handleTextField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: comments ? /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            bgcolor: \"#fff\"\n          },\n          label: children,\n          id: \"outlined-size-small\",\n          size: \"small\",\n          multiline: true,\n          maxRows: 4,\n          onChange: handleTextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            bgcolor: \"#fff\"\n          },\n          label: children,\n          id: \"outlined-size-small\",\n          size: \"small\",\n          value: defaultValue,\n          onChange: handleTextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n});\n_c2 = CustomizedTextField;\nCustomizedTextField.propTypes = {};\nexport default CustomizedTextField;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomizedTextField$React.forwardRef\");\n$RefreshReg$(_c2, \"CustomizedTextField\");","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedTextField.js"],"names":["React","PropTypes","classNames","Box","TextField","ButtonStyle","CustomizedTextField","forwardRef","props","ref","text","value","handleTextFieldChange","comments","isDisabled","number","children","rest","defaultValue","handleTextField","event","preventDefault","target","classes","bgcolor","width","inputProps","min","max","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,eAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;;AAEA,MAAMC,mBAAmB,gBAAGN,KAAK,CAACO,UAAN,MAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC3D,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,qBAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,QAPI;AAQJ,OAAGC;AARC,MASFT,KATJ;AAUA,MAAIU,YAAY,GAAG,EAAnB;;AACA,MAAIP,KAAJ,EAAW;AACTO,IAAAA,YAAY,GAAGP,KAAf;AACD,GAd0D,CAgB3D;;;AACA,QAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACAT,IAAAA,qBAAqB,CAACQ,KAAK,CAACE,MAAN,CAAaX,KAAd,CAArB;AACD,GAHD,CAjB2D,CAsB3D;;;AACA,QAAMY,OAAO,GAAGlB,WAAW,EAA3B,CAvB2D,CAwB3D;;AAEA,sBACE,QAAC,GAAD;AAAA,2BACE;AAAA,iBACG,GADH,EAEGU,MAAM,gBACL,QAAC,SAAD;AACE,QAAA,QAAQ,EAAED,UADZ;AAEE,QAAA,EAAE,EAAE;AAAEU,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAFN;AAGE,QAAA,KAAK,EAAET,QAHT;AAIE,QAAA,EAAE,EAAC,qBAJL;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,IAAI,EAAC,QANP;AAOE,QAAA,UAAU,EAAE;AAAEU,UAAAA,UAAU,EAAE;AAAEC,YAAAA,GAAG,EAAE,CAAP;AAAUC,YAAAA,GAAG,EAAE;AAAf;AAAd,SAPd;AAQE,QAAA,QAAQ,EAAET;AARZ;AAAA;AAAA;AAAA;AAAA,cADK,gBAcL;AAAA,kBACGN,QAAQ,gBACP,QAAC,SAAD;AACE,UAAA,EAAE,EAAE;AAAEW,YAAAA,OAAO,EAAE;AAAX,WADN;AAEE,UAAA,KAAK,EAAER,QAFT;AAGE,UAAA,EAAE,EAAC,qBAHL;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,SAAS,MALX;AAME,UAAA,OAAO,EAAE,CANX;AAOE,UAAA,QAAQ,EAAEG;AAPZ;AAAA;AAAA;AAAA;AAAA,gBADO,gBAWP,QAAC,SAAD;AACE,UAAA,EAAE,EAAE;AAAEK,YAAAA,OAAO,EAAE;AAAX,WADN;AAEE,UAAA,KAAK,EAAER,QAFT;AAGE,UAAA,EAAE,EAAC,qBAHL;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,KAAK,EAAEE,YALT;AAME,UAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA;AAZJ,uBAhBJ;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CAtE2B,CAA5B;MAAMb,mB;AAuENA,mBAAmB,CAACuB,SAApB,GAAgC,EAAhC;AACA,eAAevB,mBAAf","sourcesContent":["import React from \"react\";\n\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n// @material-ui/core components\nimport { Box, TextField } from \"@mui/material\";\n// core components\nimport ButtonStyle from \"../styles/ButtonStyle\";\n\nconst CustomizedTextField = React.forwardRef((props, ref) => {\n  const {\n    text,\n    value,\n    handleTextFieldChange,\n    comments,\n    isDisabled,\n    number,\n    children,\n    ...rest\n  } = props;\n  var defaultValue = \"\";\n  if (value) {\n    defaultValue = value;\n  }\n\n  // ===== Handle Comments ============\n  const handleTextField = (event) => {\n    event.preventDefault();\n    handleTextFieldChange(event.target.value);\n  };\n\n  // Styles\n  const classes = ButtonStyle();\n  //const classes = makeComponentStyles();\n\n  return (\n    <Box>\n      <>\n        {\" \"}\n        {number ? (\n          <TextField\n            disabled={isDisabled}\n            sx={{ bgcolor: \"#fff\", width: \"100px\" }}\n            label={children}\n            id=\"outlined-size-small\"\n            size=\"small\"\n            type=\"number\"\n            InputProps={{ inputProps: { min: 0, max: 10 } }}\n            onChange={handleTextField}\n          />\n\n\n        ) : (\n          <>\n            {comments ? (\n              <TextField\n                sx={{ bgcolor: \"#fff\" }}\n                label={children}\n                id=\"outlined-size-small\"\n                size=\"small\"\n                multiline\n                maxRows={4}\n                onChange={handleTextField}\n              />\n            ) : (\n              <TextField\n                sx={{ bgcolor: \"#fff\" }}\n                label={children}\n                id=\"outlined-size-small\"\n                size=\"small\"\n                value={defaultValue}\n                onChange={handleTextField}\n              />\n            )}\n          </>\n        )}\n      </>\n    </Box>\n  );\n});\nCustomizedTextField.propTypes = {};\nexport default CustomizedTextField;\n"]},"metadata":{},"sourceType":"module"}