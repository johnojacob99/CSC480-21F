{"ast":null,"code":"var _jsxFileName = \"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedDivider.js\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\"; // core components\n\nimport DividerStyle from \"../styles/DividerStyle\";\nimport { Divider } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomizedDivider = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  const {\n    type1,\n    type2,\n    children,\n    ...rest\n  } = props; // Styles\n\n  const classes = DividerStyle(); //const classes = makeComponentStyles();\n\n  const dividerClasses = classNames({\n    [classes.type1]: type1,\n    [classes.type2]: type2\n  });\n  return /*#__PURE__*/_jsxDEV(Divider, {\n    variant: \"middle\",\n    ...rest,\n    ref: ref,\n    className: dividerClasses,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n});\n_c2 = CustomizedDivider;\nCustomizedDivider.propTypes = {\n  type1: PropTypes.bool,\n  type2: PropTypes.bool\n};\nexport default CustomizedDivider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomizedDivider$React.forwardRef\");\n$RefreshReg$(_c2, \"CustomizedDivider\");","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedDivider.js"],"names":["React","PropTypes","classNames","DividerStyle","Divider","CustomizedDivider","forwardRef","props","ref","type1","type2","children","rest","classes","dividerClasses","propTypes","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,MAAMC,iBAAiB,gBAAGL,KAAK,CAACM,UAAN,MAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzD,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,QAHI;AAIJ,OAAGC;AAJC,MAKFL,KALJ,CADyD,CAQzD;;AACA,QAAMM,OAAO,GAAGV,YAAY,EAA5B,CATyD,CAUzD;;AACA,QAAMW,cAAc,GAAGZ,UAAU,CAAC;AAChC,KAACW,OAAO,CAACJ,KAAT,GAAiBA,KADe;AAEhC,KAACI,OAAO,CAACH,KAAT,GAAiBA;AAFe,GAAD,CAAjC;AAKA,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA,OAA8BE,IAA9B;AAAoC,IAAA,GAAG,EAAEJ,GAAzC;AAA8C,IAAA,SAAS,EAAEM,cAAzD;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArByB,CAA1B;MAAMN,iB;AAsBNA,iBAAiB,CAACU,SAAlB,GAA8B;AAC1BN,EAAAA,KAAK,EAAER,SAAS,CAACe,IADS;AAE1BN,EAAAA,KAAK,EAAET,SAAS,CAACe;AAFS,CAA9B;AAIA,eAAeX,iBAAf","sourcesContent":["import React from \"react\";\n\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n// core components\nimport DividerStyle from \"../styles/DividerStyle\";\nimport { Divider } from \"@mui/material\";\n\nconst CustomizedDivider = React.forwardRef((props, ref) => {\n  const {\n    type1,\n    type2,\n    children,\n    ...rest\n  } = props;\n\n  // Styles\n  const classes = DividerStyle();\n  //const classes = makeComponentStyles();\n  const dividerClasses = classNames({\n    [classes.type1]: type1,\n    [classes.type2]: type2,\n  });\n\n  return (\n    <Divider variant=\"middle\" {...rest} ref={ref} className={dividerClasses}>\n      {children}\n    </Divider>\n  )\n});\nCustomizedDivider.propTypes = {\n    type1: PropTypes.bool,\n    type2: PropTypes.bool,\n};\nexport default CustomizedDivider;\n"]},"metadata":{},"sourceType":"module"}