{"ast":null,"code":"import axios from \"axios\";\nimport https from \"https\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nconst url = \"http://pi.cs.oswego.edu\";\nconst PROFESSOR_PORT = \"5682\";\nconst STUDENT_PORT = \"5683\";\nconst LOGIN_PORT = \"5681\";\nconst ULTILITY_PORT = \"5680\";\n\nconst convertToJson_AddToken = data => {\n  const token = localStorage.getItem('token');\n  let json;\n\n  if (data !== undefined) {\n    json = {\n      data: data,\n      token: token\n    };\n  } else {\n    json = {\n      data: 'abv',\n      token: token\n    };\n  }\n\n  return JSON.stringify(json);\n};\n\nexport const getAssignmentsByProfessor = async () => {\n  try {\n    const json = convertToJson_AddToken();\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/${userID}/course/assignment`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}; //Professor\n\nexport const getSpecificAssignment = async assignmentID => {\n  try {\n    const json = convertToJson_AddToken();\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment/${assignmentID}`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const deleteCourseByProfessor = async courseID => {\n  try {\n    const json = convertToJson_AddToken();\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/course/delete/${courseID}`, json);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getTeamsByProfessor = async () => {\n  try {\n    const json = convertToJson_AddToken();\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/${userID}/course/team`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getQualityCheckSolutionByProfessor = async assignmentID => {\n  try {\n    const json = convertToJson_AddToken();\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assignmentID}/solution/qualityCheck`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getQualityCheckPeerReviewByProfesssor = async assignmentID => {\n  try {\n    const json = convertToJson_AddToken();\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assignmentID}/peerreview/qualityCheck`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const sendReviewByProfessor = async assignmentID => {\n  try {\n    const json = convertToJson_AddToken();\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assignmentID}/assignReview`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const sendFeedBackByProfessor = async assignmentID => {\n  try {\n    const json = convertToJson_AddToken();\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment/setResultStage/${assignmentID}`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const postNewStudentByProfessor = async data => {\n  try {\n    const json = convertToJson_AddToken(data);\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const postNewAssignmentByProfessor = async data => {\n  try {\n    const json = convertToJson_AddToken(data);\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const editAssignmentByProfessor = async data => {\n  try {\n    const json = convertToJson_AddToken(data);\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment/update`, json);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const deleteAssignmentByProfessor = async assID => {\n  try {\n    const json = convertToJson_AddToken();\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment/delete/${assID}`, json);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const postNewCourseByProfessor = async data => {\n  try {\n    const json = convertToJson_AddToken(data);\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/parse`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const deleteStudentByProfessor = async stuID => {\n  try {\n    const json = convertToJson_AddToken();\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/delete/${stuID}`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const rejectSolutionByProfessor = async (assID, teamID) => {\n  try {\n    console.log(assID);\n    console.log(teamID);\n    const json = convertToJson_AddToken();\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assID}/team/${teamID}/reject/solution`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const rejectPeerReviewByProfessor = async (assID, teamId, solutionId, solutionSubmissionName) => {\n  try {\n    const json = convertToJson_AddToken();\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assID}/team/${teamId}/reject/review/${solutionId}/solutionSubmissionName/${solutionSubmissionName}`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}; //Student\n\nexport const getResultsByStudent = async () => {\n  try {\n    const json = convertToJson_AddToken();\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/course/assignment/result/student`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getPeerReviewResulttByStudent = async assignmentID => {\n  try {\n    const json = convertToJson_AddToken();\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/assignment/${assignmentID}/result/student`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getAssignmenstByStudent = async () => {\n  try {\n    const json = convertToJson_AddToken();\n    const userID = localStorage.getItem('userID');\n    console.log(userID);\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/course/assignment/student`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getSubmissionsToReviewByStudent = async assignmentID => {\n  try {\n    const json = convertToJson_AddToken();\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/assignment/${assignmentID}/reviews`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getTeamIdByStudentAndCourse = async courseID => {\n  try {\n    const json = convertToJson_AddToken();\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/course/${courseID}/teamId`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const postNewSolutionByStudent = async data => {\n  try {\n    const json = convertToJson_AddToken(data);\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/solution`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const postNewPeerReviewByStudent = async data => {\n  try {\n    const json = convertToJson_AddToken(data);\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/review`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getTeamsByStudent = async () => {\n  try {\n    const json = convertToJson_AddToken();\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/course/team/student`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const loginAuth = async tokenId => {\n  console.log(tokenId);\n\n  try {\n    const response = await axios.post(`${url}:${LOGIN_PORT}/api/login`, tokenId);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/axios/APIRequests.js"],"names":["axios","https","React","useSelector","useDispatch","selectUser","url","PROFESSOR_PORT","STUDENT_PORT","LOGIN_PORT","ULTILITY_PORT","convertToJson_AddToken","data","token","localStorage","getItem","json","undefined","JSON","stringify","getAssignmentsByProfessor","userID","response","post","error","console","getSpecificAssignment","assignmentID","deleteCourseByProfessor","courseID","log","getTeamsByProfessor","getQualityCheckSolutionByProfessor","getQualityCheckPeerReviewByProfesssor","sendReviewByProfessor","sendFeedBackByProfessor","postNewStudentByProfessor","postNewAssignmentByProfessor","editAssignmentByProfessor","deleteAssignmentByProfessor","assID","postNewCourseByProfessor","deleteStudentByProfessor","stuID","rejectSolutionByProfessor","teamID","rejectPeerReviewByProfessor","teamId","solutionId","solutionSubmissionName","getResultsByStudent","getPeerReviewResulttByStudent","getAssignmenstByStudent","getSubmissionsToReviewByStudent","getTeamIdByStudentAndCourse","postNewSolutionByStudent","postNewPeerReviewByStudent","getTeamsByStudent","loginAuth","tokenId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport https from \"https\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\n\nconst url = \"http://pi.cs.oswego.edu\"\n\nconst PROFESSOR_PORT = \"5682\"\n\nconst STUDENT_PORT = \"5683\"\n\nconst LOGIN_PORT = \"5681\"\n\nconst ULTILITY_PORT = \"5680\"\n\n\nconst convertToJson_AddToken = (data) => {\n\n  const token = localStorage.getItem('token');\n\n  let json\n  \n  if (data !== undefined) {\n    json = {\n      data: data,\n      token: token,\n    };\n  }\n  else {\n\n    json = {\n      data : 'abv',\n      token: token\n    };\n  }\n\n  return JSON.stringify(json);\n}\n\nexport const getAssignmentsByProfessor = async () => {\n  try {\n    const json = convertToJson_AddToken()\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/${userID}/course/assignment`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n//Professor\nexport const getSpecificAssignment = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment/${assignmentID}`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const deleteCourseByProfessor = async (courseID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/course/delete/${courseID}`, json);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getTeamsByProfessor = async () => {\n    try {\n      const json = convertToJson_AddToken()\n      const userID = localStorage.getItem('userID');\n      const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/${userID}/course/team`,json);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n}\nexport const getQualityCheckSolutionByProfessor = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assignmentID}/solution/qualityCheck`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getQualityCheckPeerReviewByProfesssor = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assignmentID}/peerreview/qualityCheck`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const sendReviewByProfessor = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assignmentID}/assignReview`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const sendFeedBackByProfessor = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment/setResultStage/${assignmentID}`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport const postNewStudentByProfessor = async (data) => {\n    try {\n      const json = convertToJson_AddToken(data)\n      const response = await axios.post(`${url}:${STUDENT_PORT}/api/student`, json);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n}\nexport const postNewAssignmentByProfessor = async (data) => {\n  try {\n    const json = convertToJson_AddToken(data)\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n} \nexport const editAssignmentByProfessor = async (data) => {\n  try {\n    const json = convertToJson_AddToken(data)\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment/update`,json);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const deleteAssignmentByProfessor = async (assID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/assignment/delete/${assID}`, json);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const postNewCourseByProfessor = async (data) => {\n  try {\n    const json = convertToJson_AddToken(data)\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/parse`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const deleteStudentByProfessor = async (stuID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/delete/${stuID}`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport const rejectSolutionByProfessor = async (assID,teamID) => {\n  try {\n    console.log(assID);\n    console.log(teamID);\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assID}/team/${teamID}/reject/solution`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const rejectPeerReviewByProfessor = async (assID,teamId, solutionId, solutionSubmissionName) => {\n  try {\n    const json = convertToJson_AddToken()\n    const response = await axios.post(`${url}:${PROFESSOR_PORT}/api/professor/assignment/${assID}/team/${teamId}/reject/review/${solutionId}/solutionSubmissionName/${solutionSubmissionName}`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n//Student\nexport const getResultsByStudent = async () => {\n  try {\n    const json = convertToJson_AddToken()\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/course/assignment/result/student`,json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getPeerReviewResulttByStudent = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/assignment/${assignmentID}/result/student`,json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getAssignmenstByStudent = async () => {\n    try {\n      \n      const json = convertToJson_AddToken()\n      const userID = localStorage.getItem('userID');\n      console.log(userID)\n      const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/course/assignment/student`,json);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n}\nexport const getSubmissionsToReviewByStudent = async (assignmentID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/assignment/${assignmentID}/reviews`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getTeamIdByStudentAndCourse = async (courseID) => {\n  try {\n    const json = convertToJson_AddToken()\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/course/${courseID}/teamId`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const postNewSolutionByStudent = async (data) => {\n  try {\n    const json = convertToJson_AddToken(data)\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/solution`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const postNewPeerReviewByStudent = async (data) => {\n  try {\n    const json = convertToJson_AddToken(data)\n    const response = await axios.post(`${url}:${ULTILITY_PORT}/api/review`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const getTeamsByStudent = async () => {\n  try {\n    const json = convertToJson_AddToken()\n    const userID = localStorage.getItem('userID');\n    const response = await axios.post(`${url}:${STUDENT_PORT}/api/student/${userID}/course/team/student`, json);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport const loginAuth = async (tokenId) => {\n  console.log(tokenId)\n  try {\n    const response = await axios.post(`${url}:${LOGIN_PORT}/api/login`, tokenId);\n    console.log(response)\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}