{"ast":null,"code":"import _toConsumableArray from\"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectWithoutProperties from\"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"setCSVFile\",\"multipleCSV\"];import React,{useState}from\"react\";import{Stack,Typography}from\"@mui/material\";// nodejs library to set properties for components\nimport classNames from\"classnames\";// style\nimport ButtonStyle from\"../styles/ButtonStyle\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CustomizedCSVUploader(props){var _classNames,_classNames2;var setCSVFile=props.setCSVFile,multipleCSV=props.multipleCSV,rest=_objectWithoutProperties(props,_excluded);// Styles\nvar classes=ButtonStyle();var inputStyleClasses=classNames((_classNames={},_defineProperty(_classNames,classes.root,true),_defineProperty(_classNames,classes.displayNone,true),_classNames));var uploadBtnClasses=classNames((_classNames2={},_defineProperty(_classNames2,classes.type1,true),_defineProperty(_classNames2,classes.height3,true),_defineProperty(_classNames2,classes.root,true),_classNames2));//=========== Handle Submission\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),pdfFileError=_useState2[0],setPdfFileError=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),fileName=_useState4[0],setFileName=_useState4[1];var fileType=[\"text/csv\"];var handlePdfFileChange=function handlePdfFileChange(e){var arrayPdfFiles=[];console.log(e.target.files);for(var i=0;i<e.target.files.length;i++){console.log(e.target.files[i]);var selectedFile=e.target.files[i];if(selectedFile){if(selectedFile&&fileType.includes(selectedFile.type)){setFileName(selectedFile.name);var reader=new FileReader();//reader.readAsDataURL(selectedFile);\nreader.readAsText(selectedFile);reader.onloadend=function(e){//let unit8Array = new Uint8Array(e.target.result);\nvar text=e.target.result;//unit8Array//.split(',')\nvar lines=text.toString().split(\"\\n\");var result=[];var headers=lines[0].split(\",\");for(var i=1;i<lines.length-1;i++){var obj={};var currentline=lines[i].split(\",\");for(var j=0;j<headers.length;j++){obj[headers[j]]=currentline[j];}result.push(obj);}if(multipleCSV){arrayPdfFiles=[].concat(_toConsumableArray(arrayPdfFiles),[result]);setCSVFile(arrayPdfFiles);setPdfFileError(\"\");}else{setCSVFile(result);setPdfFileError(\"\");}};}else{setCSVFile(null);setPdfFileError(\"Please select valid csv file\");}}else{console.log(\"select your file\");}}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:3,children:[multipleCSV===true?/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"file\",accept:\".csv\",class:\"inputfile\",multiple:true,className:inputStyleClasses,onChange:handlePdfFileChange}):/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"file\",accept:\".csv\",class:\"inputfile\",className:inputStyleClasses,onChange:handlePdfFileChange}),/*#__PURE__*/_jsxs(\"label\",{for:\"file\",children:[/*#__PURE__*/_jsx(\"span\",{id:\"file-name\",class:\"file-box\"}),/*#__PURE__*/_jsx(\"span\",{class:uploadBtnClasses,children:\"Upload CSV file\"})]}),/*#__PURE__*/_jsx(Typography,{style:{display:\"flex\",textAlign:\"center\",fontWeight:\"500\"},variant:\"h6\",component:\"div\",children:fileName})]})});}export default CustomizedCSVUploader;","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedCSVUploader.js"],"names":["React","useState","Stack","Typography","classNames","ButtonStyle","CustomizedCSVUploader","props","setCSVFile","multipleCSV","rest","classes","inputStyleClasses","root","displayNone","uploadBtnClasses","type1","height3","pdfFileError","setPdfFileError","fileName","setFileName","fileType","handlePdfFileChange","e","arrayPdfFiles","console","log","target","files","i","length","selectedFile","includes","type","name","reader","FileReader","readAsText","onloadend","text","result","lines","toString","split","headers","obj","currentline","j","push","display","textAlign","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Stack, Typography } from \"@mui/material\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n// style\nimport ButtonStyle from \"../styles/ButtonStyle\";\n\nfunction CustomizedCSVUploader(props) {\n  const { setCSVFile, multipleCSV, ...rest } = props;\n\n  // Styles\n  const classes = ButtonStyle();\n\n  const inputStyleClasses = classNames({\n    [classes.root]: true,\n    [classes.displayNone]: true,\n  });\n\n  const uploadBtnClasses = classNames({\n    [classes.type1]: true,\n    [classes.height3]: true,\n    [classes.root]: true,\n  });\n\n  //=========== Handle Submission\n  const [pdfFileError, setPdfFileError] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n\n  const fileType = [\"text/csv\"];\n  const handlePdfFileChange = (e) => {\n    let arrayPdfFiles = []\n    console.log(e.target.files)\n    for (let i = 0; i < e.target.files.length; i++) {\n      console.log(e.target.files[i]);\n      let selectedFile = e.target.files[i];\n      if (selectedFile) {\n        if (selectedFile && fileType.includes(selectedFile.type)) {\n          setFileName(selectedFile.name);\n          let reader = new FileReader();\n          //reader.readAsDataURL(selectedFile);\n          reader.readAsText(selectedFile);\n          reader.onloadend = (e) => {\n            //let unit8Array = new Uint8Array(e.target.result);\n            let text = e.target.result//unit8Array//.split(',')\n            var lines = text.toString().split(\"\\n\")\n            var result = [];\n            var headers=lines[0].split(\",\");\n            for(var i=1;i<lines.length-1;i++){\n\n              var obj = {};\n              var currentline=lines[i].split(\",\");\n              for(var j=0;j<headers.length;j++){\n                obj[headers[j]] = currentline[j];\n            }\n              result.push(obj);\n            }\n            \n            if(multipleCSV){\n              arrayPdfFiles = [...arrayPdfFiles,result]\n              setCSVFile(arrayPdfFiles);\n              setPdfFileError(\"\");\n            }\n            else{\n                setCSVFile(result);\n              setPdfFileError(\"\");\n            }\n            \n          };\n        } else {\n            setCSVFile(null);\n          setPdfFileError(\"Please select valid csv file\");\n        }\n      } else {\n        console.log(\"select your file\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Stack direction=\"row\" spacing={3}>\n        {multipleCSV === true ? (\n          <input\n            type=\"file\"\n            id=\"file\"\n            accept=\".csv\"\n            class=\"inputfile\"\n            multiple\n            className={inputStyleClasses}\n            onChange={handlePdfFileChange}\n          />\n        ) : (\n          <input\n            type=\"file\"\n            id=\"file\"\n            accept=\".csv\"\n            class=\"inputfile\"\n            className={inputStyleClasses}\n            onChange={handlePdfFileChange}\n          />\n        )}\n\n        <label for=\"file\">\n          <span id=\"file-name\" class=\"file-box\"></span>\n          <span class={uploadBtnClasses}>Upload CSV file</span>\n        </label>\n        <Typography\n          style={{\n            display: \"flex\",\n            textAlign: \"center\",\n            fontWeight: \"500\",\n          }}\n          variant=\"h6\"\n          component=\"div\"\n        >\n          {fileName}\n        </Typography>\n      </Stack>\n    </div>\n  );\n\n\n}\n  CustomizedCSVUploader.propTypes = {\n    multipleCSV: PropTypes.bool,\n  };\nexport default CustomizedCSVUploader;\n"]},"metadata":{},"sourceType":"module"}