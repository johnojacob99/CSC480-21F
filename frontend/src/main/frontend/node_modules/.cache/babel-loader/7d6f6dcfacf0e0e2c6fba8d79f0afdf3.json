{"ast":null,"code":"var _jsxFileName = \"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/ProfessorHomeDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // @mui components\n\nimport { Grid, Card, CardHeader, CardContent, Container, Typography, Box, Stack, Divider, List, ListItem, IconButton, ListItemAvatar, Avatar, ListItemText, ListItemButton, ListItemIcon, Breadcrumbs } from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport { BiCheckCircle } from \"react-icons/bi\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport bg from \"../../images/multi_background_dashboard.jpg\"; // styled components\n\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedDivider from \"../../components/CustomizedDivider\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport { getAssignmentsByProfessor, getTeamsByProfessor } from \"../../axios/APIRequests\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CourseBar({\n  course,\n  history\n}) {\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 0,\n    children: [/*#__PURE__*/_jsxDEV(CustomizedButtons, {\n      type3: true,\n      fullwidth: true,\n      model: \"arrow\",\n      onClick: () => history.push(\"/course\"),\n      children: `${course.title}, Section ${course.sectionNumber}, ${course.semester}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: course.assignments.length !== 0 ? /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        sx: {\n          flex: 1\n        },\n        children: course.assignments.map(assignment => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!assignment.isSolutionCompleted && /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            justifyContent: \"space-between\",\n            onClick: () => history.push(\"/assignmentdisplay\", {\n              assignmentID: assignment.assignmentID\n            }),\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              style: {\n                width: \"60%\"\n              },\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                fontWeight: \"600\",\n                variant: \"body2\",\n                children: `${assignment.title} Solution`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              direction: \"row\",\n              justifyContent: \"flex-end\",\n              primary: `Due ${new Date(assignment.solutionDueDateTime).toLocaleDateString()}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this), !assignment.isPeerReviewCompleted && /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => history.push(\"/assignmentdisplay\", {\n              assignmentID: assignment.assignmentID\n            }),\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                fontWeight: \"600\",\n                variant: \"body2\",\n                children: `${assignment.title} Peer Review`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `Due ${new Date(assignment.peerReviewDueDateTime).toLocaleDateString()}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n        alignItems: \"center\",\n        p: 2,\n        children: \"No Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CourseBar;\n\nfunction ProfessorHomeDashBoard({\n  history\n}) {\n  _s();\n\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState([]);\n  useEffect(() => {\n    console.log(courses);\n\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course, key) => {\n        if (course.assignments !== undefined) {\n          setLoading(false);\n        }\n      });\n    }\n  }, [courses]);\n  useEffect(() => {\n    getAssignmentsByProfessor().then(value => {\n      setCourses(value);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CustomizedBody, {\n    bg: bg,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomizedContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        \"aria-label\": \"breadcrumb\",\n        mb: 5,\n        ml: 2,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.primary\",\n          style: {\n            fontWeight: \"600\"\n          },\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        direction: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4.7,\n          children: /*#__PURE__*/_jsxDEV(CustomizedCard, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              sx: {\n                paddingBottom: \"8px\"\n              },\n              title: /*#__PURE__*/_jsxDEV(List, {\n                dense: true,\n                sx: {\n                  padding: \"0\",\n                  margin: \"0\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n                      sx: {\n                        color: \"#347DEB\"\n                      },\n                      fontSize: \"medium\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      fontWeight: \"600\",\n                      variant: \"h6\",\n                      children: \"Assignments by Course\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CustomizedDivider, {\n              type1: true,\n              sx: {\n                marginBottom: \"15px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                paddingTop: \"0\",\n                display: \"flex\",\n                justifyContent: \"center\"\n              },\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: loading === true ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  className: loading.loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n                  sx: {\n                    flex: 1\n                  },\n                  spacing: 1,\n                  children: courses.map((course, key) => {\n                    return /*#__PURE__*/_jsxDEV(CourseBar, {\n                      course: course,\n                      history: history\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          spacing: 3,\n          xs: 7.3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(CustomizedCard, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                sx: {\n                  paddingBottom: \"8px\"\n                },\n                title: /*#__PURE__*/_jsxDEV(List, {\n                  dense: true,\n                  sx: {\n                    padding: \"0\",\n                    margin: \"0\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItem, {\n                    secondaryAction: /*#__PURE__*/_jsxDEV(CustomizedButtons, {\n                      type1: true,\n                      height1: true,\n                      onClick: () => {\n                        history.push(\"./courseresult\");\n                      },\n                      children: \"See All\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 27\n                    }, this),\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n                        sx: {\n                          color: \"#0DC38D\"\n                        },\n                        fontSize: \"medium\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"span\",\n                        fontWeight: \"600\",\n                        variant: \"h6\",\n                        children: \"Quality Check\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CustomizedDivider, {\n                type1: true,\n                sx: {\n                  marginBottom: \"15px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                sx: {\n                  paddingTop: 0,\n                  display: \"flex\",\n                  justifyContent: \"center\"\n                },\n                children: loading === true ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  className: loading.loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(List, {\n                  sx: {\n                    width: \"100%\"\n                  },\n                  children: courses.map((course, key) => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: course.assignments.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: course.assignments.map((assignment, key) => {\n                          return /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [assignment.reviewStage === true ? /*#__PURE__*/_jsxDEV(ListItem, {\n                              button: true,\n                              divider: true,\n                              onClick: () => history.push(\"/studentpeerreviewqualitycheck\", {\n                                assignmentID: assignment.assignmentID\n                              }),\n                              secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                edge: \"end\",\n                                children: /*#__PURE__*/_jsxDEV(BsArrowRightCircle, {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 313,\n                                  columnNumber: 47\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 312,\n                                columnNumber: 45\n                              }, this),\n                              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                                sx: {\n                                  width: \"30%\"\n                                },\n                                primary: `${assignment.title} Peer Review`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 317,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                sx: {\n                                  display: \"flex\",\n                                  justifyContent: \"center\"\n                                },\n                                primary: `submissions closed ${new Date(assignment.peerReviewDueDateTime).toLocaleString()}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 321,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 299,\n                              columnNumber: 41\n                            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(ListItem, {\n                              button: true,\n                              divider: true,\n                              onClick: () => history.push(\"/studentsolutionqualitycheck\", {\n                                assignmentID: assignment.assignmentID\n                              }),\n                              secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                edge: \"end\",\n                                children: /*#__PURE__*/_jsxDEV(BsArrowRightCircle, {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 348,\n                                  columnNumber: 45\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 347,\n                                columnNumber: 43\n                              }, this),\n                              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                                sx: {\n                                  width: \"30%\"\n                                },\n                                primary: `${assignment.title} Solution`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 352,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                sx: {\n                                  display: \"flex\",\n                                  justifyContent: \"center\"\n                                },\n                                primary: `Due ${new Date(assignment.solutionDueDateTime).toLocaleString()}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 356,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 334,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true);\n                        })\n                      }, void 0, false) : /*#__PURE__*/_jsxDEV(Stack, {\n                        sx: {\n                          flex: 1\n                        },\n                        alignItems: \"center\",\n                        children: \"No Assignment\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 371,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(CustomizedCard, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                sx: {\n                  paddingBottom: \"8px\"\n                },\n                title: /*#__PURE__*/_jsxDEV(List, {\n                  dense: true,\n                  sx: {\n                    padding: \"0\",\n                    margin: \"0\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ListItem, {\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n                        sx: {\n                          color: \"#6F40DC\"\n                        },\n                        fontSize: \"medium\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 391,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"span\",\n                        fontWeight: \"600\",\n                        variant: \"h6\",\n                        children: \"Manage Students & Teams by Course\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 398,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CustomizedDivider, {\n                type1: true,\n                sx: {\n                  marginBottom: \"15px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                sx: {\n                  paddingTop: 0,\n                  display: \"flex\",\n                  justifyContent: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: loading === true ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    className: loading.loading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 2,\n                    children: courses.map((course, key) => {\n                      return /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsxDEV(CustomizedButtons, {\n                          type2: true,\n                          fullwidth: true,\n                          onClick: () => {\n                            history.push(\"./studentinfoview\");\n                          },\n                          model: \"arrow\",\n                          children: `${course.code}, Section ${course.sectionNumber}, ${course.semester}`\n                        }, key, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 432,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 431,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              display: \"flex\",\n              justifyContent: \"flex-end\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CustomizedButtons, {\n              type1: true,\n              model: \"add\",\n              onClick: () => history.push(\"/coursecreation\"),\n              children: \"Create a New Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfessorHomeDashBoard, \"HMalmi9eZL2tA2MyYG1spO7pWCU=\");\n\n_c2 = ProfessorHomeDashBoard;\nexport default ProfessorHomeDashBoard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CourseBar\");\n$RefreshReg$(_c2, \"ProfessorHomeDashBoard\");","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/ProfessorHomeDashboard.js"],"names":["React","useState","useEffect","Grid","Card","CardHeader","CardContent","Container","Typography","Box","Stack","Divider","List","ListItem","IconButton","ListItemAvatar","Avatar","ListItemText","ListItemButton","ListItemIcon","Breadcrumbs","CircularProgress","BiCheckCircle","FiberManualRecordIcon","bg","NavBar","CustomizedButtons","CustomizedContainer","CustomizedCard","CustomizedDivider","CustomizedBody","axios","Loading","getAssignmentsByProfessor","getTeamsByProfessor","BsArrowRightCircle","CourseBar","course","history","push","title","sectionNumber","semester","assignments","length","flex","map","assignment","isSolutionCompleted","assignmentID","width","Date","solutionDueDateTime","toLocaleDateString","isPeerReviewCompleted","peerReviewDueDateTime","ProfessorHomeDashBoard","loading","setLoading","courses","setCourses","console","log","undefined","key","then","value","catch","err","fontWeight","paddingBottom","padding","margin","color","marginBottom","paddingTop","display","justifyContent","reviewStage","toLocaleString","code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Divider,\n  List,\n  ListItem,\n  IconButton,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemButton,\n  ListItemIcon,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport { BiCheckCircle } from \"react-icons/bi\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedDivider from \"../../components/CustomizedDivider\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport {\n  getAssignmentsByProfessor,\n  getTeamsByProfessor,\n} from \"../../axios/APIRequests\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\n\nfunction CourseBar({ course, history }) {\n  return (\n    <Stack spacing={0}>\n      <CustomizedButtons\n        type3\n        fullwidth\n        model={\"arrow\"}\n        onClick={() => history.push(\"/course\")}\n      >\n        {`${course.title}, Section ${course.sectionNumber}, ${course.semester}`}\n      </CustomizedButtons>\n      <>\n        {course.assignments.length !== 0 ? (\n          <List dense={true} sx={{ flex: 1 }}>\n            {course.assignments.map((assignment) => (\n              <>\n                {!assignment.isSolutionCompleted && (\n                  <ListItem\n                    button\n                    justifyContent=\"space-between\"\n                    onClick={() =>\n                      history.push(\"/assignmentdisplay\", {\n                        assignmentID: assignment.assignmentID,\n                      })\n                    }\n                  >\n                    <ListItemText\n                      style={{ width: \"60%\" }}\n                      primary={\n                        <Typography\n                          component=\"span\"\n                          fontWeight=\"600\"\n                          variant=\"body2\"\n                        >\n                          {`${assignment.title} Solution`}\n                        </Typography>\n                      }\n                    />\n                    <ListItemText\n                      direction=\"row\"\n                      justifyContent=\"flex-end\"\n                      primary={`Due ${new Date(\n                        assignment.solutionDueDateTime\n                      ).toLocaleDateString()}`}\n                    />\n                  </ListItem>\n                )}\n                {!assignment.isPeerReviewCompleted && (\n                  <ListItem\n                    button\n                    onClick={() =>\n                      history.push(\"/assignmentdisplay\", {\n                        assignmentID: assignment.assignmentID,\n                      })\n                    }\n                  >\n                    <ListItemText\n                      primary={\n                        <Typography\n                          component=\"span\"\n                          fontWeight=\"600\"\n                          variant=\"body2\"\n                        >\n                          {`${assignment.title} Peer Review`}\n                        </Typography>\n                      }\n                    />\n                    <ListItemText\n                      primary={`Due ${new Date(\n                        assignment.peerReviewDueDateTime\n                      ).toLocaleDateString()}`}\n                    />\n                  </ListItem>\n                )}\n              </>\n            ))}\n          </List>\n        ) : (\n          <Stack alignItems=\"center\" p={2}>\n            No Assignment\n          </Stack>\n        )}\n      </>\n    </Stack>\n  );\n}\n\nfunction ProfessorHomeDashBoard({ history }) {\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState([]);\n\n  useEffect(() => {\n    console.log(courses);\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course, key) => {\n        if (course.assignments !== undefined) {\n          setLoading(false);\n        }\n      });\n    }\n  }, [courses]);\n\n  useEffect(() => {\n    getAssignmentsByProfessor()\n      .then((value) => {\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Home\n          </Typography>\n        </Breadcrumbs>\n        <Grid\n          container\n          spacing={3}\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={4.7}>\n            <CustomizedCard>\n              <CardHeader\n                sx={{ paddingBottom: \"8px\" }}\n                title={\n                  <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                    <ListItem>\n                      <ListItemIcon>\n                        <FiberManualRecordIcon\n                          sx={{ color: \"#347DEB\" }}\n                          fontSize=\"medium\"\n                        />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={\n                          <Typography\n                            component=\"span\"\n                            fontWeight=\"600\"\n                            variant=\"h6\"\n                          >\n                            Assignments by Course\n                          </Typography>\n                        }\n                      />\n                    </ListItem>\n                  </List>\n                }\n              ></CardHeader>\n              <CustomizedDivider\n                type1\n                sx={{ marginBottom: \"15px\" }}\n              ></CustomizedDivider>\n              <CardContent\n                sx={{\n                  paddingTop: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <>\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <Stack sx={{ flex: 1 }} spacing={1}>\n                      {courses.map((course, key) => {\n                        return (\n                          <CourseBar\n                            course={course}\n                            key={key}\n                            history={history}\n                          ></CourseBar>\n                        );\n                      })}\n                    </Stack>\n                  )}\n                </>\n              </CardContent>\n            </CustomizedCard>\n          </Grid>\n          <Grid item container spacing={3} xs={7.3}>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem\n                        secondaryAction={\n                          <CustomizedButtons\n                            type1\n                            height1\n                            onClick={() => {\n                              history.push(\"./courseresult\");\n                            }}\n                          >\n                            See All\n                          </CustomizedButtons>\n                        }\n                      >\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#0DC38D\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Quality Check\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <List sx={{ width: \"100%\" }}>\n                      {courses.map((course, key) => {\n                        return (\n                          <>\n                            {course.assignments.length !== 0 ? (\n                              <>\n                                {course.assignments.map((assignment, key) => {\n                                  return (\n                                    <>\n                                      {assignment.reviewStage === true ? (\n                                        <ListItem\n                                          button\n                                          divider\n                                          onClick={() =>\n                                            history.push(\n                                              \"/studentpeerreviewqualitycheck\",\n                                              {\n                                                assignmentID:\n                                                  assignment.assignmentID,\n                                              }\n                                            )\n                                          }\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            sx={{ width: \"30%\" }}\n                                            primary={`${assignment.title} Peer Review`}\n                                          />\n                                          <ListItemText\n                                            sx={{\n                                              display: \"flex\",\n                                              justifyContent: \"center\",\n                                            }}\n                                            primary={`submissions closed ${new Date(\n                                              assignment.peerReviewDueDateTime\n                                            ).toLocaleString()}`}\n                                          />\n                                        </ListItem>\n                                      ) : (\n                                        <></>\n                                      )}\n                                      <ListItem\n                                        button\n                                        divider\n                                        onClick={() =>\n                                          history.push(\n                                            \"/studentsolutionqualitycheck\",\n                                            {\n                                              assignmentID:\n                                                assignment.assignmentID,\n                                            }\n                                          )\n                                        }\n                                        secondaryAction={\n                                          <IconButton edge=\"end\">\n                                            <BsArrowRightCircle />\n                                          </IconButton>\n                                        }\n                                      >\n                                        <ListItemText\n                                          sx={{ width: \"30%\" }}\n                                          primary={`${assignment.title} Solution`}\n                                        />\n                                        <ListItemText\n                                          sx={{\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                          }}\n                                          primary={`Due ${new Date(\n                                            assignment.solutionDueDateTime\n                                          ).toLocaleString()}`}\n                                        />\n                                      </ListItem>\n                                    </>\n                                  );\n                                })}\n                              </>\n                            ) : (\n                              <Stack sx={{ flex: 1 }} alignItems=\"center\">\n                                No Assignment\n                              </Stack>\n                            )}\n                          </>\n                        );\n                      })}\n                    </List>\n                  )}\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem>\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#6F40DC\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Manage Students & Teams by Course\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <>\n                    {loading === true ? (\n                      <CircularProgress\n                        className={loading.loading}\n                      ></CircularProgress>\n                    ) : (\n                      <Grid container spacing={2}>\n                        {courses.map((course, key) => {\n                          return (\n                            <Grid item xs={6}>\n                              <CustomizedButtons\n                                type2\n                                fullwidth\n                                onClick={() => {\n                                  history.push(\"./studentinfoview\");\n                                }}\n                                model={\"arrow\"}\n                                key={key}\n                              >\n                                {`${course.code}, Section ${course.sectionNumber}, ${course.semester}`}\n                              </CustomizedButtons>\n                            </Grid>\n                          );\n                        })}\n                      </Grid>\n                    )}\n                  </>\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              <CustomizedButtons\n                type1\n                model={\"add\"}\n                onClick={() => history.push(\"/coursecreation\")}\n              >\n                Create a New Course\n              </CustomizedButtons>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default ProfessorHomeDashBoard;\n"]},"metadata":{},"sourceType":"module"}