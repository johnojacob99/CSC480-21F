{"ast":null,"code":"import _slicedToArray from\"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Paper from\"@mui/material/Paper\";import Table from\"@mui/material/Table\";import TableBody from\"@mui/material/TableBody\";import TableCell from\"@mui/material/TableCell\";import TableContainer from\"@mui/material/TableContainer\";import TableHead from\"@mui/material/TableHead\";import TableRow from\"@mui/material/TableRow\";import{primaryColor,darkColor,grayColor,greenColor,whiteColor,blueColor}from\"../styles/Style\";import{borderRadius,Box}from\"@mui/system\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function StickyHeadTable(_ref){var jsonData=_ref.jsonData;console.log(jsonData);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),arrayData=_useState2[0],setarrayData=_useState2[1];useEffect(function(){var result=[];for(var i in jsonData){var row=[];for(var j in jsonData[i]){row.push(jsonData[i][j]);}result.push(row);}setarrayData(result);},[jsonData]);console.log(arrayData);var label_1=[{id:\"name\",label:\"Team Name\",align:\"center\",width:20}];var label_2=[{id:\"avggradereceived\",label:\"Avg Grade RECEIVED\",align:\"center\",width:20}];var headers=arrayData.map(function(index,i){return{key:i,id:index[0],label:index[0],width:20,align:\"center\",format:function format(value){return value.toLocaleString(\"en-US\");}};});var columns=label_1.concat(headers);return/*#__PURE__*/_jsx(Box,{sx:{width:\"100%\"},children:/*#__PURE__*/_jsx(TableContainer,{sx:{maxHeight:440},children:/*#__PURE__*/_jsxs(Table,{stickyHeader:true,\"aria-label\":\"sticky table\",size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsx(TableRow,{children:columns.map(function(column,indexCol){var bgColor;var color;if(indexCol==columns.length-1){bgColor=greenColor;color=whiteColor;}else{bgColor=grayColor;color=darkColor;}return/*#__PURE__*/_jsx(TableCell,{align:column.align,style:{width:\"10px\",height:\"10px\",border:\"0.01px solid #000\",backgroundColor:bgColor,color:color},children:column.label},column.id);})})}),/*#__PURE__*/_jsx(TableBody,{children:arrayData.map(function(row,indexRow){return/*#__PURE__*/_jsx(TableRow,{hover:true,role:\"checkbox\",tabIndex:-1,style:{width:\"10px\",height:\"10px\"},children:columns.map(function(column,indexCol){var value=row[indexCol];var bgColor;var color;{if(indexCol==indexRow+1||indexCol==0&&indexRow!=arrayData.length-1){bgColor=primaryColor;}else{if(indexCol==columns.length-1&&indexRow!=arrayData.length-1){bgColor=greenColor;color=whiteColor;}else{if(indexRow==arrayData.length-1&&indexCol!=columns.length-1){bgColor=blueColor;color=whiteColor;}else{bgColor=whiteColor;}}}}return/*#__PURE__*/_jsx(TableCell,{align:column.align,style:{width:\"10px\",height:\"10px\",color:color,backgroundColor:bgColor,border:\"0.01px solid #000\"},children:value!=0?value:\"\"},column.id);})},row.code);})})]})})});}","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedTables.js"],"names":["React","useState","useEffect","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","primaryColor","darkColor","grayColor","greenColor","whiteColor","blueColor","borderRadius","Box","StickyHeadTable","jsonData","console","log","arrayData","setarrayData","result","i","row","j","push","label_1","id","label","align","width","label_2","headers","map","index","key","format","value","toLocaleString","columns","concat","maxHeight","column","indexCol","bgColor","color","length","height","border","backgroundColor","indexRow","code"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { primaryColor, darkColor, grayColor, greenColor, whiteColor, blueColor } from \"../styles/Style\";\nimport { borderRadius, Box } from \"@mui/system\";\n\nexport default function StickyHeadTable({jsonData}) {\n  console.log(jsonData)\n  const [arrayData, setarrayData] = useState([]);\n  useEffect(() => {\n      var result = [];\n      for(var i in jsonData){\n        var row = [];\n        for(var j in jsonData[i]){\n          row.push(jsonData[i][j]);\n        }\n        result.push(row)\n      }\n      setarrayData(result)\n  }, [jsonData])\n  console.log(arrayData)\n\n  const label_1 = [\n    { id: \"name\", label: \"Team Name\", align: \"center\", width: 20 },\n  ];\n  const label_2 = [\n    {\n      id: \"avggradereceived\",\n      label: \"Avg Grade RECEIVED\",\n      align: \"center\",\n      width: 20,\n    },\n  ];\n  const headers = arrayData.map((index, i) => {\n    return {\n      key: i,\n      id: index[0],\n      label: index[0],\n      width: 20,\n      align: \"center\",\n      format: (value) => value.toLocaleString(\"en-US\"),\n    };\n  });\n\n  const columns = label_1.concat(headers);\n  return (\n    <Box sx={{ width: \"100%\"}}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\n          <TableHead>\n            <TableRow >\n              {columns.map((column, indexCol) => {\n                let bgColor;\n                let color;\n                if (indexCol == columns.length - 1) {\n                  bgColor = greenColor\n                  color = whiteColor\n                }\n                else{\n                  bgColor = grayColor\n                  color = darkColor\n                }\n                return <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{\n                    width: \"10px\",\n                    height: \"10px\",\n                    border: \"0.01px solid #000\",\n                    backgroundColor: bgColor,\n                    color: color,\n                  }}\n                >\n                  {column.label}\n                </TableCell>\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {arrayData\n              .map((row, indexRow) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} style={{\n                    width: \"10px\",\n                    height: \"10px\"}}>\n                    {columns.map((column, indexCol) => {\n                      let value = row[indexCol];\n                      let bgColor;\n                      let color;\n                      {\n                        if(indexCol == indexRow + 1 || indexCol == 0 && indexRow != arrayData.length - 1){\n                          bgColor = primaryColor\n                        }\n                        else {\n                          if (indexCol == columns.length - 1 && indexRow != arrayData.length - 1) {\n                            bgColor = greenColor\n                            color = whiteColor\n                          }\n                          else {\n                            if (indexRow == arrayData.length - 1 && indexCol != columns.length - 1) {\n                              bgColor = blueColor\n                              color = whiteColor\n                            }\n                            else {\n                              bgColor = whiteColor\n                            }\n                          }\n                        }\n                      }\n                      return (\n                        <TableCell\n                          key={column.id}\n                          align={column.align}\n                          style={{\n                            width: \"10px\",\n                            height: \"10px\",\n                            color: color,\n                            backgroundColor: bgColor,\n                            border: \"0.01px solid #000\",\n                          }}\n                        >\n                          {value != 0 ? value : \"\"}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}