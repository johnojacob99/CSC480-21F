{"ast":null,"code":"import _slicedToArray from\"/media/ductran/New Volume/Files/builds/quiz-maker-master/Frontend/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/media/ductran/New Volume/Files/builds/quiz-maker-master/Frontend/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/media/ductran/New Volume/Files/builds/quiz-maker-master/Frontend/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"children\",\"value\",\"index\"];import React,{useState,useEffect}from\"react\";// @mui components\nimport{styled}from\"@mui/material/styles\";import Box from\"@mui/material/Box\";import Typography from\"@mui/material/Typography\";import{BsArrowRightCircle}from\"react-icons/bs\";import FiberManualRecordIcon from\"@mui/icons-material/FiberManualRecord\";// styled components\nimport NavBar from\"../../components/NavBar/NavBar\";import CustomizedButtons from\"../../components/CustomizedButtons\";import CustomizedTabs from\"../../components/CustomizedTabs\";import bg from\"../../images/multi_background_dashboard.jpg\";import{CardContent,CardHeader,Grid,IconButton,ListItem,ListItemText,Stack,Breadcrumbs}from\"@mui/material\";import CustomizedCard from\"../../components/CustomizedCard\";import CustomizedContainer from\"../../components/CustomizedContainer\";import{Link}from\"react-router-dom\";import axios from\"axios\";import Loading from\"../../components/Loading\";import{getAssignmenstByStudent}from\"../../axios/APIRequests\";import CustomizedBody from\"../../components/CustomizedBody\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function TabPanel(props){var children=props.children,value=props.value,index=props.index,other=_objectWithoutProperties(props,_excluded);return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({sx:{borderRadius:\"10px\"},role:\"tabpanel\",hidden:value!==index,id:\"simple-tabpanel-\".concat(index),\"aria-labelledby\":\"simple-tab-\".concat(index)},other),{},{children:value===index&&/*#__PURE__*/_jsx(Box,{children:children})}));}function SeeAllAssignmentPage(_ref){var history=_ref.history;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),tab=_useState2[0],setTab=_useState2[1];var _useState3=useState(\"All\"),_useState4=_slicedToArray(_useState3,2),filterType=_useState4[0],setFilterType=_useState4[1];var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),loading=_React$useState2[0],setLoading=_React$useState2[1];var _React$useState3=React.useState(),_React$useState4=_slicedToArray(_React$useState3,2),courses=_React$useState4[0],setCourses=_React$useState4[1];var _React$useState5=React.useState([]),_React$useState6=_slicedToArray(_React$useState5,2),courseNames=_React$useState6[0],setCourseNames=_React$useState6[1];useEffect(function(){var courseNameLists=[];if(courses!==undefined&&courses.length!==0){console.log(courses);courses.map(function(course){courseNameLists.push(course.code);});setCourseNames(courseNameLists);console.log(\"`loading`\");setLoading(false);}},[courses]);useEffect(function(){getAssignmenstByStudent().then(function(value){console.log(value);setCourses(value);}).catch(function(err){console.log(err);});},[]);return/*#__PURE__*/_jsxs(CustomizedBody,{bg:bg,children:[/*#__PURE__*/_jsx(NavBar,{fixed:true,history:history}),/*#__PURE__*/_jsxs(CustomizedContainer,{children:[/*#__PURE__*/_jsxs(Breadcrumbs,{\"aria-label\":\"breadcrumb\",mb:5,ml:2,children:[/*#__PURE__*/_jsx(Typography,{color:\"text.primary\",children:\"Home\"}),/*#__PURE__*/_jsx(Typography,{color:\"text.primary\",style:{fontWeight:\"600\"},children:\"Assignments\"})]}),/*#__PURE__*/_jsx(_Fragment,{children:loading===true?/*#__PURE__*/_jsx(Loading,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{container:true,sx:{marginBottom:\"20px\"},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:8,children:/*#__PURE__*/_jsx(Typography,{style:{display:\"flex\",textAlign:\"center\",fontWeight:\"600\"},variant:\"h6\",component:\"div\",children:\"Assignments by Course\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,sx:{display:\"flex\",justifyContent:\"flex-end\"},children:/*#__PURE__*/_jsx(CustomizedButtons,{type1:true,onClick:function onClick(){return history.push(\"/studentteams\");},children:\"View Teams\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CustomizedTabs,{type1:true,setTab:setTab,value:tab,fullWidth:\"fullWidth\",labels:courseNames}),courses.map(function(course,id){return/*#__PURE__*/_jsx(TabPanel,{value:tab,index:id,children:/*#__PURE__*/_jsxs(CustomizedCard,{children:[/*#__PURE__*/_jsx(CardHeader,{sx:{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"},title:/*#__PURE__*/_jsx(Grid,{container:true,children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sx:{display:\"flex\",justifyContent:\"flex-end\"},children:/*#__PURE__*/_jsx(CustomizedButtons,{type3:true,model:\"radio3\",fullwidth:true,filterType:filterType,setFilterType:setFilterType,children:\"Filter Results\"})})})}),/*#__PURE__*/_jsx(CardContent,{sx:{paddingTop:\"0\"},children:course.assignments.map(function(assignment,key){return/*#__PURE__*/_jsx(_Fragment,{children:!assignment.draft&&/*#__PURE__*/_jsxs(_Fragment,{children:[(filterType===\"All\"||filterType===\"Completed\"===assignment.isSolutionCompleted)&&/*#__PURE__*/_jsxs(ListItem,{button:true,divider:true,onClick:function onClick(){history.push(\"./newsolutionassignmentview\",{assignment:assignment});},secondaryAction:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",children:/*#__PURE__*/_jsx(BsArrowRightCircle,{})}),children:[/*#__PURE__*/_jsx(ListItemText,{primary:\"\".concat(assignment.title,\" Solution\")}),assignment.isSolutionCompleted?/*#__PURE__*/_jsx(ListItemText,{sx:{display:\"flex\",justifyContent:\"flex-end\"},primary:\"Completed \".concat(new Date(assignment.solutionDueDateTime).toLocaleString())}):/*#__PURE__*/_jsx(ListItemText,{sx:{display:\"flex\",justifyContent:\"flex-end\"},primary:\"Due \".concat(new Date(assignment.solutionDueDateTime).toLocaleString())})]},key),(filterType===\"All\"||filterType===\"Completed\"===assignment.isPeerReviewCompleted)&&/*#__PURE__*/_jsx(_Fragment,{children:assignment.reviewStage===true&&/*#__PURE__*/_jsxs(ListItem,{button:true,divider:true,onClick:function onClick(){history.push(\"./peerreviewassignmentview\",{assignmentID:assignment.assignmentID});},secondaryAction:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",children:/*#__PURE__*/_jsx(BsArrowRightCircle,{})}),children:[/*#__PURE__*/_jsx(ListItemText,{primary:\"\".concat(assignment.title,\" Peer Review\")}),assignment.isPeerReviewCompleted?/*#__PURE__*/ //assignment.peerreview.isCompleted === true\n_jsx(ListItemText,{sx:{display:\"flex\",justifyContent:\"flex-end\"},primary:\"Completed \".concat(new Date(assignment.peerReviewDueDateTime).toLocaleString())}):/*#__PURE__*/_jsx(ListItemText,{sx:{display:\"flex\",justifyContent:\"flex-end\"},primary:\"Due \".concat(new Date(assignment.peerReviewDueDateTime).toLocaleString())})]},key)})]})});})})]})});})]})]})})]})]});}export default SeeAllAssignmentPage;","map":{"version":3,"sources":["/media/ductran/New Volume/Files/builds/quiz-maker-master/Frontend/src/main/frontend/src/pages/Student/SeeAllAssignmentPage.js"],"names":["React","useState","useEffect","styled","Box","Typography","BsArrowRightCircle","FiberManualRecordIcon","NavBar","CustomizedButtons","CustomizedTabs","bg","CardContent","CardHeader","Grid","IconButton","ListItem","ListItemText","Stack","Breadcrumbs","CustomizedCard","CustomizedContainer","Link","axios","Loading","getAssignmenstByStudent","CustomizedBody","TabPanel","props","children","value","index","other","borderRadius","SeeAllAssignmentPage","history","tab","setTab","filterType","setFilterType","loading","setLoading","courses","setCourses","courseNames","setCourseNames","courseNameLists","undefined","length","console","log","map","course","push","code","then","catch","err","fontWeight","marginBottom","display","textAlign","justifyContent","id","flexDirection","paddingTop","assignments","assignment","key","draft","isSolutionCompleted","title","Date","solutionDueDateTime","toLocaleString","isPeerReviewCompleted","reviewStage","assignmentID","peerReviewDueDateTime"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport { getAssignmenstByStudent } from \"../../axios/APIRequests\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction SeeAllAssignmentPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [filterType, setFilterType] = useState(\"All\");\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState();\n  const [courseNames, setCourseNames] = React.useState([]);\n\n  useEffect(() => {\n    var courseNameLists = [];\n    if (courses !== undefined && courses.length !== 0) {\n      console.log(courses);\n      courses.map((course) => {\n        courseNameLists.push(course.code);\n      });\n      setCourseNames(courseNameLists);\n      console.log(\"`loading`\");\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getAssignmenstByStudent()\n      .then((value) => {\n        console.log(value);\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CustomizedBody bg={bg}\n    >\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Assignments\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Grid container sx={{ marginBottom: \"20px\" }}>\n                <Grid item xs={8}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"h6\"\n                    component=\"div\"\n                  >\n                    Assignments by Course\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  xs={4}\n                  sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                >\n                  <CustomizedButtons\n                    type1\n                    onClick={() => history.push(\"/studentteams\")}\n                  >\n                    View Teams\n                  </CustomizedButtons>\n                </Grid>\n              </Grid>\n              <div>\n                <CustomizedTabs\n                  type1\n                  setTab={setTab}\n                  value={tab}\n                  fullWidth={\"fullWidth\"}\n                  labels={courseNames}\n                ></CustomizedTabs>\n                {courses.map((course, id) => (\n                  <TabPanel value={tab} index={id}>\n                    <CustomizedCard>\n                      <CardHeader\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                        title={\n                          <Grid container>\n                            <Grid\n                              item\n                              xs={12}\n                              sx={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                              }}\n                            >\n                              <CustomizedButtons\n                                type3\n                                model={\"radio3\"}\n                                fullwidth\n                                filterType={filterType}\n                                setFilterType={setFilterType}\n                              >\n                                Filter Results\n                              </CustomizedButtons>\n                            </Grid>\n                          </Grid>\n                        }\n                      ></CardHeader>\n                      <CardContent\n                        sx={{\n                          paddingTop: \"0\",\n                        }}\n                      >\n                        {course.assignments.map((assignment, key) => {\n                          return (\n                            <>\n                              {!assignment.draft && (\n                                <>\n                                  {(filterType === \"All\" ||\n                                    (filterType === \"Completed\") ===\n                                      assignment.isSolutionCompleted) && (\n                                    <ListItem\n                                      key={key}\n                                      button\n                                      divider\n                                      onClick={() => {\n                                        history.push(\n                                          \"./newsolutionassignmentview\",\n                                          { assignment: assignment }\n                                        );\n                                      }}\n                                      secondaryAction={\n                                        <IconButton edge=\"end\">\n                                          <BsArrowRightCircle />\n                                        </IconButton>\n                                      }\n                                    >\n                                      <ListItemText\n                                        primary={`${assignment.title} Solution`}\n                                      />\n                                      {assignment.isSolutionCompleted ? (\n                                        <ListItemText\n                                          sx={{\n                                            display: \"flex\",\n                                            justifyContent: \"flex-end\",\n                                          }}\n                                          primary={`Completed ${new Date(\n                                            assignment.solutionDueDateTime\n                                          ).toLocaleString()}`}\n                                        />\n                                      ) : (\n                                        <ListItemText\n                                          sx={{\n                                            display: \"flex\",\n                                            justifyContent: \"flex-end\",\n                                          }}\n                                          primary={`Due ${new Date(\n                                            assignment.solutionDueDateTime\n                                          ).toLocaleString()}`}\n                                        />\n                                      )}\n                                    </ListItem>\n                                  )}\n                                  {(filterType === \"All\" ||\n                                    (filterType === \"Completed\") === assignment.isPeerReviewCompleted) && (\n                                    <>\n                                      {assignment.reviewStage === true && (\n                                        <ListItem\n                                          key={key}\n                                          button\n                                          divider\n                                          onClick={() => {\n                                            history.push(\n                                              \"./peerreviewassignmentview\",\n                                              {\n                                                assignmentID:\n                                                  assignment.assignmentID,\n                                              }\n                                            );\n                                          }}\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            primary={`${assignment.title} Peer Review`}\n                                          />\n                                          {assignment.isPeerReviewCompleted ? ( //assignment.peerreview.isCompleted === true\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Completed ${new Date(\n                                                assignment.peerReviewDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          ) : (\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Due ${new Date(\n                                                assignment.peerReviewDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          )}\n                                        </ListItem>\n                                      )}\n                                    </>\n                                  )}\n                                </>\n                              )}\n                            </>\n                          );\n                        })}\n                      </CardContent>\n                    </CustomizedCard>\n                  </TabPanel>\n                ))}\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default SeeAllAssignmentPage;\n"]},"metadata":{},"sourceType":"module"}