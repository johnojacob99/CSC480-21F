{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storageSession from 'redux-persist/lib/storage/session';\nimport { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nconst persistConfig = {\n  key: \"root\",\n  storage: storageSession,\n  whitelist: ['userReducer']\n};\nconst reducer = combineReducers({\n  userReducer\n});\nconst persistReducer_ = persistReducer(persistConfig, reducer);\nconst store = configureStore({\n  reducer: persistReducer_,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/app/store.js"],"names":["combineReducers","configureStore","userReducer","persistStore","persistReducer","storageSession","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","whitelist","reducer","persistReducer_","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,OAJF,EAKEC,KALF,EAMEC,QANF,QAOO,eAPP;AAQA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAACT,cAFY;AAGpBU,EAAAA,SAAS,EAAE,CAAC,aAAD;AAHS,CAAtB;AAKA,MAAMC,OAAO,GAAGhB,eAAe,CAAC;AAC5BE,EAAAA;AAD4B,CAAD,CAA/B;AAIA,MAAMe,eAAe,GAAGb,cAAc,CAACQ,aAAD,EAAgBI,OAAhB,CAAtC;AACA,MAAME,KAAK,GAAGjB,cAAc,CAAC;AAC3Be,EAAAA,OAAO,EAAEC,eADkB;AAE3BE,EAAAA,UAAU,EAAGC,oBAAD,IACZA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAAChB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AAHO,CAAD,CAA5B;AAUA,OAAO,MAAMY,SAAS,GAAGpB,YAAY,CAACe,KAAD,CAA9B;AACP,eAAeA,KAAf","sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport userReducer from '../features/userSlice'\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storageSession from 'redux-persist/lib/storage/session'\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nconst persistConfig = {\n  key: \"root\",\n  storage:storageSession,\n  whitelist: ['userReducer']\n};\nconst reducer = combineReducers({\n    userReducer,\n})\n\nconst persistReducer_ = persistReducer(persistConfig, reducer);\nconst store = configureStore({\n  reducer: persistReducer_,\n  middleware: (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport default store\n"]},"metadata":{},"sourceType":"module"}