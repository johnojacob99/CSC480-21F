{"ast":null,"code":"var _jsxFileName = \"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/PDFhandling/PDFReader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport PDFControlBar from './PDFControlBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst PDFReader = () => {\n  _s();\n\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true); // for onchange event\n\n  const [pdfFile, setPdfFile] = useState(null);\n  const [pdfFileError, setPdfFileError] = useState(''); // for submit event\n\n  const [viewPdf, setViewPdf] = useState(null);\n\n  function onDocumentLoadSuccess({\n    numPages\n  }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n\n  const fileType = ['application/pdf'];\n\n  const handlePdfFileChange = e => {\n    let selectedFile = e.target.files[0];\n\n    if (selectedFile) {\n      if (selectedFile && fileType.includes(selectedFile.type)) {\n        let reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n\n        reader.onloadend = e => {\n          setPdfFile(e.target.result);\n          setPdfFileError('');\n        };\n      } else {\n        setPdfFile(null);\n        setPdfFileError('Please select valid pdf file');\n      }\n    } else {\n      console.log('select your file');\n    }\n  };\n\n  const handlePdfFileSubmit = e => {\n    e.preventDefault();\n\n    if (pdfFile !== null) {\n      setViewPdf(pdfFile);\n    } else {\n      setViewPdf(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePdfFileSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        required: true,\n        onChange: handlePdfFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), pdfFileError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-msg\",\n        children: pdfFileError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), viewPdf && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PDFControlBar, {\n        scale: scale,\n        setScale: setScale,\n        numPages: numPages,\n        pageNumber: pageNumber,\n        setPageNumber: setPageNumber,\n        file: viewPdf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Document, {\n        file: viewPdf,\n        onLoadSuccess: onDocumentLoadSuccess,\n        children: /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: pageNumber,\n          scale: scale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PDFReader, \"GL4YPNJk09OoCEP7CLJBOAdWor8=\");\n\n_c = PDFReader;\nexport default PDFReader;\n\nvar _c;\n\n$RefreshReg$(_c, \"PDFReader\");","map":{"version":3,"sources":["/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/PDFhandling/PDFReader.js"],"names":["React","useState","Document","Page","pdfjs","PDFControlBar","GlobalWorkerOptions","workerSrc","version","PDFReader","scale","setScale","numPages","setNumPages","pageNumber","setPageNumber","isLoading","setIsLoading","pdfFile","setPdfFile","pdfFileError","setPdfFileError","viewPdf","setViewPdf","onDocumentLoadSuccess","fileType","handlePdfFileChange","e","selectedFile","target","files","includes","type","reader","FileReader","readAsDataURL","onloadend","result","console","log","handlePdfFileSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport PDFControlBar from './PDFControlBar';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst PDFReader = () => {\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  // for onchange event\n  const [pdfFile, setPdfFile]=useState(null);\n  const [pdfFileError, setPdfFileError]=useState('');\n\n  // for submit event\n  const [viewPdf, setViewPdf]=useState(null);\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n  const fileType=['application/pdf'];\n  const handlePdfFileChange=(e)=>{\n    let selectedFile=e.target.files[0];\n    if(selectedFile){\n      if(selectedFile&&fileType.includes(selectedFile.type)){\n        let reader = new FileReader();\n            reader.readAsDataURL(selectedFile);\n            reader.onloadend = (e) =>{\n              setPdfFile(e.target.result);\n              setPdfFileError('');\n            }\n      }\n      else{\n        setPdfFile(null);\n        setPdfFileError('Please select valid pdf file');\n      }\n    }\n    else{\n      console.log('select your file');\n    }\n  }\n  const handlePdfFileSubmit=(e)=>{\n    e.preventDefault();\n    if(pdfFile!==null){\n      setViewPdf(pdfFile);\n    }\n    else{\n      setViewPdf(null);\n    }\n  }\n  return (\n    <div>\n      <form onSubmit={handlePdfFileSubmit}>\n        <input type=\"file\" className='form-control'\n          required onChange={handlePdfFileChange}\n        />\n        {pdfFileError&&<div className='error-msg'>{pdfFileError}</div>}\n        <br></br>\n        <button type=\"submit\" >\n          Preview\n        </button>\n      </form>\n      {viewPdf&&<>\n        <PDFControlBar\n          scale={scale}\n          setScale={setScale}\n          numPages={numPages}\n          pageNumber={pageNumber}\n          setPageNumber={setPageNumber}\n          file={viewPdf}\n        />\n        <Document\n          file={viewPdf}\n          onLoadSuccess={onDocumentLoadSuccess}\n        >\n          <Page pageNumber={pageNumber} scale={scale} />\n        </Document>\n      </>}\n      \n    </div>\n  );\n};\n\nexport default PDFReader;\n"]},"metadata":{},"sourceType":"module"}