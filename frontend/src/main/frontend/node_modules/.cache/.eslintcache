[{"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/index.js":"1","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/App.js":"2","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/reportWebVitals.js":"3","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/app/store.js":"4","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/routing/PrivateRoute.js":"5","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/routing/PublicRoute.js":"6","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/TestingPage.js":"7","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Login/LoginPage.js":"8","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/ProfessorHomeDashboard.js":"9","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/AddCoursePage.js":"10","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/ProfessorCoursePage.js":"11","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/AssignmentCreation.js":"12","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/CourseResultPage.js":"13","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/ResultsViewerPage.js":"14","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/StudentInfoViewPage.js":"15","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/StudentPeerReviewQualityCheckPage.js":"16","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/AssignmentViewer.js":"17","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/AssignmentDisplay.js":"18","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/StudentSolutionQualityCheckPage.js":"19","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/AssignmentEdit.js":"20","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/StudentHomeDashboard.js":"21","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/SeeAllAssignmentPage.js":"22","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/StudentTeamsPage.js":"23","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/NewSolutionAssignmentView.js":"24","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/PeerReviewAssignmentView.js":"25","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/StudentPeerReviewResultsDisplay.js":"26","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/StudentResultPage.js":"27","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/features/userSlice.js":"28","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedBody.js":"29","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedContainer.js":"30","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedButtons.js":"31","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedCard.js":"32","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/Loading.js":"33","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedDivider.js":"34","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/PDFhandling/PDFReader.js":"35","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/NavBar/NavBarLogin.js":"36","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/NavBar/NavBar.js":"37","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/axios/APIRequests.js":"38","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedTabs.js":"39","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedPdfUploader.js":"40","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/utils/byteArrayToPDF.js":"41","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedTextField.js":"42","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/TabStyle.js":"43","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/Style.js":"44","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/NavBarStyle.js":"45","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/PDFhandling/PDFControlBar.js":"46","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/DividerStyle.js":"47","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/LoadingStyle.js":"48","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/CardStyle.js":"49","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/ButtonStyle.js":"50","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedRadios.js":"51","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedSwitch.js":"52","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/ContainerStyle.js":"53","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedModal.js":"54","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedTables.js":"55","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CSVUploader.js":"56","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/SuccessfulNotification.js":"57","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedCSVUploader.js":"58","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/index.js":"59","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/reportWebVitals.js":"60","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/App.js":"61","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/app/store.js":"62","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/routing/PrivateRoute.js":"63","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/routing/PublicRoute.js":"64","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/TestingPage.js":"65","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/AddCoursePage.js":"66","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/ProfessorCoursePage.js":"67","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/ProfessorHomeDashboard.js":"68","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/AssignmentCreation.js":"69","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/StudentInfoViewPage.js":"70","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Login/LoginPage.js":"71","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/ResultsViewerPage.js":"72","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/CourseResultPage.js":"73","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/StudentSolutionQualityCheckPage.js":"74","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/StudentPeerReviewQualityCheckPage.js":"75","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/StudentHomeDashboard.js":"76","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/AssignmentEdit.js":"77","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/SeeAllAssignmentPage.js":"78","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/AssignmentDisplay.js":"79","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/AssignmentViewer.js":"80","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/NewSolutionAssignmentView.js":"81","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/StudentTeamsPage.js":"82","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/StudentResultPage.js":"83","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/PeerReviewAssignmentView.js":"84","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/StudentPeerReviewResultsDisplay.js":"85","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/features/userSlice.js":"86","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedCard.js":"87","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedContainer.js":"88","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedButtons.js":"89","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedCSVUploader.js":"90","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedTextField.js":"91","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedBody.js":"92","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedModal.js":"93","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/Loading.js":"94","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedTabs.js":"95","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedDivider.js":"96","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/PDFhandling/PDFReader.js":"97","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedPdfUploader.js":"98","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/NavBar/NavBar.js":"99","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/axios/APIRequests.js":"100","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/utils/byteArrayToPDF.js":"101","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/PDFhandling/PDFControlBar.js":"102","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/DividerStyle.js":"103","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/TabStyle.js":"104","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/Style.js":"105","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/NavBarStyle.js":"106","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/ButtonStyle.js":"107","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/LoadingStyle.js":"108","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedRadios.js":"109","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedSwitch.js":"110","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/ContainerStyle.js":"111","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/CardStyle.js":"112","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedTables.js":"113","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/SuccessfulNotification.js":"114","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CSVUploader.js":"115","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/NavBar/NavBarLogin.js":"116"},{"size":976,"mtime":1638076205206,"results":"117","hashOfConfig":"118"},{"size":4706,"mtime":1638076205190,"results":"119","hashOfConfig":"118"},{"size":362,"mtime":1636170579836,"results":"120","hashOfConfig":"118"},{"size":860,"mtime":1638076205190,"results":"121","hashOfConfig":"118"},{"size":822,"mtime":1638076205214,"results":"122","hashOfConfig":"118"},{"size":683,"mtime":1638076205214,"results":"123","hashOfConfig":"118"},{"size":552,"mtime":1638076205214,"results":"124","hashOfConfig":"118"},{"size":4598,"mtime":1638321535577,"results":"125","hashOfConfig":"118"},{"size":16712,"mtime":1638076205210,"results":"126","hashOfConfig":"118"},{"size":7055,"mtime":1638076205206,"results":"127","hashOfConfig":"118"},{"size":16064,"mtime":1638076205210,"results":"128","hashOfConfig":"118"},{"size":12435,"mtime":1638076205206,"results":"129","hashOfConfig":"118"},{"size":15636,"mtime":1638076205210,"results":"130","hashOfConfig":"118"},{"size":2665,"mtime":1638076205210,"results":"131","hashOfConfig":"118"},{"size":19161,"mtime":1638076205210,"results":"132","hashOfConfig":"118"},{"size":35631,"mtime":1638076205210,"results":"133","hashOfConfig":"118"},{"size":8670,"mtime":1638076205206,"results":"134","hashOfConfig":"118"},{"size":10204,"mtime":1638076205206,"results":"135","hashOfConfig":"118"},{"size":22200,"mtime":1638076205210,"results":"136","hashOfConfig":"118"},{"size":10194,"mtime":1638076205206,"results":"137","hashOfConfig":"118"},{"size":17149,"mtime":1638076205214,"results":"138","hashOfConfig":"118"},{"size":11726,"mtime":1638076205210,"results":"139","hashOfConfig":"118"},{"size":8224,"mtime":1638076205214,"results":"140","hashOfConfig":"118"},{"size":8709,"mtime":1638076205210,"results":"141","hashOfConfig":"118"},{"size":15116,"mtime":1638076205210,"results":"142","hashOfConfig":"118"},{"size":7607,"mtime":1638076205214,"results":"143","hashOfConfig":"118"},{"size":7806,"mtime":1638076205214,"results":"144","hashOfConfig":"118"},{"size":712,"mtime":1638076205198,"results":"145","hashOfConfig":"118"},{"size":427,"mtime":1638076205190,"results":"146","hashOfConfig":"118"},{"size":901,"mtime":1638076205194,"results":"147","hashOfConfig":"118"},{"size":3089,"mtime":1638076205194,"results":"148","hashOfConfig":"118"},{"size":786,"mtime":1638076205194,"results":"149","hashOfConfig":"118"},{"size":820,"mtime":1638076205198,"results":"150","hashOfConfig":"118"},{"size":840,"mtime":1636170579832,"results":"151","hashOfConfig":"118"},{"size":2349,"mtime":1638076205198,"results":"152","hashOfConfig":"118"},{"size":1491,"mtime":1638076205198,"results":"153","hashOfConfig":"118"},{"size":6620,"mtime":1638159366351,"results":"154","hashOfConfig":"118"},{"size":8962,"mtime":1638321547601,"results":"155","hashOfConfig":"118"},{"size":2416,"mtime":1638076205194,"results":"156","hashOfConfig":"118"},{"size":3407,"mtime":1638076205194,"results":"157","hashOfConfig":"118"},{"size":2823,"mtime":1638076205218,"results":"158","hashOfConfig":"118"},{"size":1990,"mtime":1638076205198,"results":"159","hashOfConfig":"118"},{"size":759,"mtime":1638076205218,"results":"160","hashOfConfig":"118"},{"size":960,"mtime":1636170579836,"results":"161","hashOfConfig":"118"},{"size":994,"mtime":1638076205214,"results":"162","hashOfConfig":"118"},{"size":3326,"mtime":1638076205198,"results":"163","hashOfConfig":"118"},{"size":284,"mtime":1636170579836,"results":"164","hashOfConfig":"118"},{"size":425,"mtime":1638076205214,"results":"165","hashOfConfig":"118"},{"size":291,"mtime":1636170579836,"results":"166","hashOfConfig":"118"},{"size":1120,"mtime":1638076205214,"results":"167","hashOfConfig":"118"},{"size":2174,"mtime":1638076205194,"results":"168","hashOfConfig":"118"},{"size":2002,"mtime":1636170579832,"results":"169","hashOfConfig":"118"},{"size":629,"mtime":1638076205214,"results":"170","hashOfConfig":"118"},{"size":8406,"mtime":1638076205194,"results":"171","hashOfConfig":"118"},{"size":4663,"mtime":1636446853846,"results":"172","hashOfConfig":"118"},{"size":2008,"mtime":1636170579832,"results":"173","hashOfConfig":"118"},{"size":929,"mtime":1638076205198,"results":"174","hashOfConfig":"118"},{"size":3551,"mtime":1638076205194,"results":"175","hashOfConfig":"118"},{"size":976,"mtime":1638076205206,"results":"176","hashOfConfig":"177"},{"size":362,"mtime":1636170579836,"results":"178","hashOfConfig":"177"},{"size":4706,"mtime":1638076205190,"results":"179","hashOfConfig":"177"},{"size":860,"mtime":1638076205190,"results":"180","hashOfConfig":"177"},{"size":822,"mtime":1638076205214,"results":"181","hashOfConfig":"177"},{"size":683,"mtime":1638076205214,"results":"182","hashOfConfig":"177"},{"size":552,"mtime":1638076205214,"results":"183","hashOfConfig":"177"},{"size":7055,"mtime":1638076205206,"results":"184","hashOfConfig":"177"},{"size":16822,"mtime":1638331788214,"results":"185","hashOfConfig":"177"},{"size":17428,"mtime":1638331794274,"results":"186","hashOfConfig":"177"},{"size":12435,"mtime":1638076205206,"results":"187","hashOfConfig":"177"},{"size":21635,"mtime":1638331800366,"results":"188","hashOfConfig":"177"},{"size":4598,"mtime":1638321535577,"results":"189","hashOfConfig":"177"},{"size":2689,"mtime":1638331791038,"results":"190","hashOfConfig":"177"},{"size":17424,"mtime":1638331781646,"results":"191","hashOfConfig":"177"},{"size":22200,"mtime":1638076205210,"results":"192","hashOfConfig":"177"},{"size":35631,"mtime":1638076205210,"results":"193","hashOfConfig":"177"},{"size":17149,"mtime":1638076205214,"results":"194","hashOfConfig":"177"},{"size":10194,"mtime":1638076205206,"results":"195","hashOfConfig":"177"},{"size":11726,"mtime":1638076205210,"results":"196","hashOfConfig":"177"},{"size":10204,"mtime":1638076205206,"results":"197","hashOfConfig":"177"},{"size":8670,"mtime":1638076205206,"results":"198","hashOfConfig":"177"},{"size":8709,"mtime":1638076205210,"results":"199","hashOfConfig":"177"},{"size":8224,"mtime":1638076205214,"results":"200","hashOfConfig":"177"},{"size":7806,"mtime":1638076205214,"results":"201","hashOfConfig":"177"},{"size":15116,"mtime":1638076205210,"results":"202","hashOfConfig":"177"},{"size":7607,"mtime":1638076205214,"results":"203","hashOfConfig":"177"},{"size":712,"mtime":1638076205198,"results":"204","hashOfConfig":"177"},{"size":786,"mtime":1638076205194,"results":"205","hashOfConfig":"177"},{"size":901,"mtime":1638076205194,"results":"206","hashOfConfig":"177"},{"size":3089,"mtime":1638076205194,"results":"207","hashOfConfig":"177"},{"size":3551,"mtime":1638076205194,"results":"208","hashOfConfig":"177"},{"size":1990,"mtime":1638076205198,"results":"209","hashOfConfig":"177"},{"size":427,"mtime":1638076205190,"results":"210","hashOfConfig":"177"},{"size":8406,"mtime":1638076205194,"results":"211","hashOfConfig":"177"},{"size":820,"mtime":1638076205198,"results":"212","hashOfConfig":"177"},{"size":2416,"mtime":1638076205194,"results":"213","hashOfConfig":"177"},{"size":840,"mtime":1636170579832,"results":"214","hashOfConfig":"177"},{"size":2349,"mtime":1638076205198,"results":"215","hashOfConfig":"177"},{"size":3407,"mtime":1638076205194,"results":"216","hashOfConfig":"177"},{"size":6620,"mtime":1638159366351,"results":"217","hashOfConfig":"177"},{"size":8965,"mtime":1638332955181,"results":"218","hashOfConfig":"177"},{"size":2823,"mtime":1638076205218,"results":"219","hashOfConfig":"177"},{"size":3326,"mtime":1638076205198,"results":"220","hashOfConfig":"177"},{"size":284,"mtime":1636170579836,"results":"221","hashOfConfig":"177"},{"size":759,"mtime":1638076205218,"results":"222","hashOfConfig":"177"},{"size":960,"mtime":1636170579836,"results":"223","hashOfConfig":"177"},{"size":994,"mtime":1638076205214,"results":"224","hashOfConfig":"177"},{"size":1120,"mtime":1638076205214,"results":"225","hashOfConfig":"177"},{"size":425,"mtime":1638076205214,"results":"226","hashOfConfig":"177"},{"size":2174,"mtime":1638076205194,"results":"227","hashOfConfig":"177"},{"size":2002,"mtime":1636170579832,"results":"228","hashOfConfig":"177"},{"size":629,"mtime":1638076205214,"results":"229","hashOfConfig":"177"},{"size":291,"mtime":1636170579836,"results":"230","hashOfConfig":"177"},{"size":4663,"mtime":1636446853846,"results":"231","hashOfConfig":"177"},{"size":929,"mtime":1638076205198,"results":"232","hashOfConfig":"177"},{"size":2008,"mtime":1636170579832,"results":"233","hashOfConfig":"177"},{"size":1491,"mtime":1638076205198,"results":"234","hashOfConfig":"177"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18fm8bn",{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h1q278",{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331"},"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/index.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/App.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/reportWebVitals.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/app/store.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/routing/PrivateRoute.js",["512","513","514"],"import { BrowserRouter as Router, Route,Redirect, Switch } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nfunction PrivateRoute({ component: Component, roleAccess, ...children }) {\n\n  const getUser = useSelector(selectUser)\n  const {user, isAuthenticated} = getUser\n  console.log(isAuthenticated)\n\n    if (isAuthenticated === true) {\n      if(roleAccess === user.role){\n        return <Route {...children} render={props => <Component {...props} />} />;\n      }\n      else{\n        if(user.role === \"professor\"){\n          return <Redirect to=\"professorhome\" />;\n        }\n        else{\n          return <Redirect to=\"studenthome\" />;\n        }\n      }\n      \n    }\n\n    return <Redirect to=\"login\" />;\n  }\n  \nexport default PrivateRoute;","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/routing/PublicRoute.js",["515","516","517","518","519"],"import { BrowserRouter as Router, Route,Redirect, Switch } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nfunction PublicRoute({ component: Component, roleAccess, ...children }) {\n\n  const getUser = useSelector(selectUser)\n  const {user, isAuthenticated} = getUser\n  console.log(isAuthenticated)\n\n    console.log(isAuthenticated)\n    if (isAuthenticated === true) {\n      if(roleAccess === \"professor\" ){\n        return <Redirect to=\"professorhome\" />;\n      } else {\n        return <Redirect to=\"studenthome\" />;\n      }\n    }\n    return <Redirect to=\"login\" />;\n  }\n  \nexport default PublicRoute;","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/TestingPage.js",["520"],"import React, {useState} from 'react';\nimport PDFReader from '../components/PDFhandling/PDFReader';\nimport CustomizedButtons from '../components/CustomizedButtons';\nexport default function Testing() {\n  const [text, settext] = useState(\"helloworld\")\n  const hanldechangetext = () => {\n    settext(\"goodbye\")\n  }\n  return (\n    <>\n    <div>{text}</div>\n    <button onClick={hanldechangetext}>Click</button>\n    <CustomizedButtons type3 height1>Click</CustomizedButtons>\n    <CustomizedButtons type3 height1>Click herer</CustomizedButtons>\n    </>\n  );\n}","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Login/LoginPage.js",["521","522","523","524","525","526","527","528","529"],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/ProfessorHomeDashboard.js",["530","531","532","533","534","535","536","537","538","539","540","541","542"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Divider,\n  List,\n  ListItem,\n  IconButton,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemButton,\n  ListItemIcon,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport { BiCheckCircle } from \"react-icons/bi\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedDivider from \"../../components/CustomizedDivider\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport {\n  getAssignmentsByProfessor,\n  getTeamsByProfessor,\n} from \"../../axios/APIRequests\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\n\nfunction CourseBar({ course, history }) {\n  return (\n    <Stack spacing={0} >\n      <CustomizedButtons\n        type3\n        fullwidth\n        model={\"arrow\"}\n        onClick={() => history.push(\"/course\")}\n      >\n        {`${course.title}, Section ${course.sectionNumber}, ${course.semester}`}\n      </CustomizedButtons>\n      <>\n        {course.assignments.length !== 0 ? (\n          <List dense={true} sx={{flex:1}}>\n            {course.assignments.map((assignment) => (\n                <>\n                {!assignment.isSolutionCompleted && (\n                  <ListItem\n                    button\n                    justifyContent=\"space-between\"\n                    onClick={() => history.push(\"/assignmentdisplay\", {\n                      assignmentID: assignment.assignmentID,\n                    })}\n                  >\n                    \n                    <ListItemText\n                      style={{width: \"60%\"}}\n                      primary={\n                        <Typography component=\"span\" fontWeight=\"600\" variant=\"body2\">\n                          {`${assignment.title} Solution`}\n                        </Typography>\n                      }\n                    />\n                    <ListItemText\n                      direction=\"row\" justifyContent=\"flex-end\"\n                      primary={`Due ${new Date(\n                        assignment.solutionDueDateTime\n                      ).toLocaleDateString()}`}\n                    />\n                  </ListItem>\n                )}\n                {!assignment.isPeerReviewCompleted && (\n                  <ListItem\n                    button\n                    onClick={() => history.push(\"/assignmentdisplay\", {\n                      assignmentID: assignment.assignmentID,\n                    })}\n                  >\n                    <ListItemText\n                      primary={\n                        <Typography component=\"span\" fontWeight=\"600\" variant=\"body2\">\n                          {`${assignment.title} Peer Review`}\n                        </Typography>\n                      }\n                    />\n                    <ListItemText\n                      primary={`Due ${new Date(\n                        assignment.peerReviewDueDateTime\n                      ).toLocaleDateString()}`}\n                    />\n                  </ListItem>\n                )}\n                </>\n              ))}\n          </List>\n        ) : (\n          <Stack alignItems=\"center\" p={2} >No Assignment</Stack>\n        )}\n      </>\n    </Stack>\n  );\n}\n\nfunction ProfessorHomeDashBoard({ history }) {\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState([]);\n\n  useEffect(() => {\n    console.log(courses);\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course, key) => {\n        if (course.assignments !== undefined) {\n          setLoading(false);\n        }\n      });\n    }\n  }, [courses]);\n\n  useEffect(() => {\n    getAssignmentsByProfessor()\n      .then((value) => {\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Home\n          </Typography>\n        </Breadcrumbs>\n        <Grid\n          container\n          spacing={3}\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={4.7}>\n            <CustomizedCard>\n              <CardHeader\n                sx={{ paddingBottom: \"8px\" }}\n                title={\n                  <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                    <ListItem>\n                      <ListItemIcon>\n                        <FiberManualRecordIcon\n                          sx={{ color: \"#347DEB\" }}\n                          fontSize=\"medium\"\n                        />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={\n                          <Typography\n                            component=\"span\"\n                            fontWeight=\"600\"\n                            variant=\"h6\"\n                          >\n                            Assignments by Course\n                          </Typography>\n                        }\n                      />\n                    </ListItem>\n                  </List>\n                }\n              ></CardHeader>\n              <CustomizedDivider\n                type1\n                sx={{ marginBottom: \"15px\" }}\n              ></CustomizedDivider>\n              <CardContent\n                sx={{\n                  paddingTop: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <>\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <Stack sx={{flex:1}} spacing={1}>\n                      {courses.map((course, key) => {\n                        return (\n                          <CourseBar\n                            course={course}\n                            key={key}\n                            history={history}\n                          ></CourseBar>\n                        );\n                      })}\n                    </Stack>\n                  )}\n                </>\n              </CardContent>\n            </CustomizedCard>\n          </Grid>\n          <Grid item container spacing={3} xs={7.3}>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem\n                        secondaryAction={\n                          <CustomizedButtons\n                            type1\n                            height1\n                            onClick={() => {\n                              history.push(\"./courseresult\");\n                            }}\n                          >\n                            See All\n                          </CustomizedButtons>\n                        }\n                      >\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#0DC38D\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Quality Check\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <List sx={{ width: \"100%\" }}>\n                      {courses.map((course, key) => {\n                        return (\n                          <>\n                            {course.assignments.length !== 0 ? (\n                              <>\n                                {course.assignments.map((assignment, key) => {\n                                  return (\n                                    <>\n                                      {assignment.reviewStage === true ? (\n                                        <ListItem\n                                          button\n                                          divider\n                                          onClick={() =>\n                                            history.push(\n                                              \"/studentpeerreviewqualitycheck\", {assignmentID: assignment.assignmentID}\n                                            )\n                                          }\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            sx={{ width: \"30%\" }}\n                                            primary={`${assignment.title} Peer Review`}\n                                          />\n                                          <ListItemText\n                                            sx={{\n                                              display: \"flex\",\n                                              justifyContent: \"center\",\n                                            }}\n                                            primary={`submissions closed ${new Date(\n                                              assignment.peerReviewDueDateTime\n                                            ).toLocaleString()}`}\n                                          />\n                                        </ListItem>\n                                      ) : (\n                                        <></>\n                                      )}\n                                      <ListItem\n                                          button\n                                          divider\n                                          onClick={() =>\n                                            history.push(\n                                              \"/studentsolutionqualitycheck\", {assignmentID: assignment.assignmentID}\n                                            )\n                                          }\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            sx={{ width: \"30%\" }}\n                                            primary={`${assignment.title} Solution`}\n                                          />\n                                          <ListItemText\n                                            sx={{\n                                              display: \"flex\",\n                                              justifyContent: \"center\",\n                                            }}\n                                            primary={`Due ${new Date(\n                                              assignment.solutionDueDateTime\n                                            ).toLocaleString()}`}\n                                          />\n                                        </ListItem>\n                                    </>\n                                  );\n                                })}\n                              </>\n                            ) : (\n                              <Stack sx={{flex:1}} alignItems=\"center\">No Assignment</Stack>\n                            )}\n                          </>\n                        );\n                      })}\n                    </List>\n                  )}\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem>\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#6F40DC\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Manage Students & Teams by Course\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <>\n                    {loading === true ? (\n                      <CircularProgress\n                        className={loading.loading}\n                      ></CircularProgress>\n                    ) : (\n                      <Grid container spacing={2}>\n                        {courses.map((course, key) => {\n                          return (\n                            <Grid item xs={6}>\n                              <CustomizedButtons\n                                type2\n                                fullwidth\n                                onClick={() => {\n                                  history.push(\"./studentinfoview\");\n                                }}\n                                model={\"arrow\"}\n                                key={key}\n                              >\n                                {`${course.code}, Section ${course.sectionNumber}, ${course.semester}`}\n                              </CustomizedButtons>\n                            </Grid>\n                          );\n                        })}\n                      </Grid>\n                    )}\n                  </>\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              <CustomizedButtons\n                type1\n                model={\"add\"}\n                onClick={() => history.push(\"/coursecreation\")}\n              >\n                Create a New Course\n              </CustomizedButtons>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default ProfessorHomeDashBoard;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/AddCoursePage.js",["543","544","545","546","547","548","549","550","551","552","553"],"import React, { useState,useEffect } from \"react\";\nimport {\n  Card,\n  Typography,\n  Container,\n  CardContent,\n  Stack,\n  Breadcrumbs,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControl,\n} from \"@mui/material\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport axios from \"axios\";\nimport { CSVReader } from \"react-papaparse\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport { Box } from \"@mui/system\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport CustomizedCSVUploader from \"../../components/CustomizedCSVUploader\";\nimport { postNewCourseByProfessor } from \"../../axios/APIRequests\";\n\nconst buttonRef = React.createRef();\n\nfunction AddCoursePage1({ history }) {\n  const [newCourse, setNewCourse] = useState()\n  const [title, setTitle] = useState(\"\");\n  const [submissionType, setSubmissionType] = React.useState(\"Manually Set Teams\");\n  const [isTeamed, setIsTeamed] = useState(true);\n  const [numberOfTeam, setNumberOfTeam] = React.useState(2);\n  const [csvFile, setCSVFile] = useState(null);\n  var ErrorMessage = \"Please fill out !!!\"\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isPublishing, setIsPublishing] = useState(false);\n  const handleChangeTeams = (event) => {\n    setNumberOfTeam(event.target.value);\n  };\n  useEffect(() => {\n    const DiableTeamInput = () => {\n      if(submissionType === \"Randomized Teams\"){\n        setIsDisabled(false)\n        setIsTeamed(true)\n      }\n      else if (submissionType === \"Independent\"){\n        setIsDisabled(true)\n        setIsTeamed(false)\n      }\n      else{\n        setIsTeamed(true)\n      }\n    }\n    DiableTeamInput()\n  }, [submissionType])\n\n  const handleAddCourse = () => {\n    if( title===\"\"  || csvFile === null)\n    {\n      alert(ErrorMessage)\n    }\n    else{\n    var newCourse = {\n      userID: localStorage.getItem('userID'),\n      \"title\": title,\n      \"isTeamed\": isTeamed,\n      \"code\": title,\n    };\n    var json = {\n      \"csvContents\": csvFile,\n      \"numberOfTeams\": numberOfTeam,\n      \"course\": newCourse,\n    };\n    const json_ = JSON.stringify(json);\n    \n    postNewCourseByProfessor(json)\n      .then(function (response) {\n        console.log(response);\n        history.push(\"./course\")\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\">Course</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Create Course\n          </Typography>\n        </Breadcrumbs>\n\n        <>\n          <Typography\n            style={{ fontWeight: \"600\" }}\n            variant=\"h6\"\n            component=\"div\"\n          >\n            Create Course\n          </Typography>\n          <div style={{ padding: \"10px\" }}></div>\n          <CustomizedCard>\n            <CardContent>\n              <div style={{ width: \"100%\" }}>\n                <Stack direction=\"column\" spacing={2} sx={{ display: \"flex\" }}>\n                  <Typography\n                    style={{ fontWeight: \"600\" }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Course Settings:\n                  </Typography>\n                  <Stack\n                    direction=\"row\"\n                    spacing={4}\n                    sx={{ display: \"flex\", alignItems: \"center\" }}\n                  >\n                    <CustomizedTextField\n                      value={title}\n                      handleTextFieldChange={setTitle}\n                    >\n                      Course Title To Display{\" \"}\n                    </CustomizedTextField>\n                    <Typography\n                      style={{ fontWeight: \"600\" }}\n                      variant=\"body1\"\n                      component=\"div\"\n                    >\n                      Course reference number (CRN) recommended\n                    </Typography>\n                  </Stack>\n                  <Typography\n                    style={{ fontWeight: \"600\" }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Please select team settings:\n                  </Typography>\n                  <Stack direction=\"row\" spacing={1} >\n                    <CustomizedButtons\n                      type4\n                      model={\"radio4\"}\n                      filterType={submissionType}\n                      setFilterType={setSubmissionType}\n                    ></CustomizedButtons>\n                    <FormControl sx={{ width: \"100px\", height: \"10px\" }} disabled={isDisabled}>\n                      <InputLabel id=\"demo-simple-select-label\">\n                        Teams\n                      </InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={numberOfTeam}\n                        label=\"Teams\"\n                        onChange={handleChangeTeams}\n                      >\n                        {Array.from(Array(5).keys()).map((index, key) => (\n                          <MenuItem value={index + 2} key={key}>\n                            {index + 2}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Stack>\n                  <Typography variant=\"body2\" component=\"div\">\n                    Please upload the course student list CSV file provided by\n                    your administrator.\n                  </Typography>\n                  <CustomizedCSVUploader\n                    setCSVFile={setCSVFile}\n                  ></CustomizedCSVUploader>\n                </Stack>\n              </div>\n            </CardContent>\n          </CustomizedCard>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginTop: \"20px\",\n            }}\n          >\n            <Stack direction=\"row\" spacing={2}>\n              <CustomizedButtons\n                type2\n                height1\n                onClick={() => {\n                  history.push(\"./professorhome\");\n                }}\n              >\n                Cancel\n              </CustomizedButtons>\n              <CustomizedButtons type1 height1 onClick={handleAddCourse}>\n                Publish\n              </CustomizedButtons>\n            </Stack>\n          </div>\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default AddCoursePage1;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/ProfessorCoursePage.js",["554","555","556","557","558","559","560","561","562","563"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { TiDelete } from \"react-icons/ti\";\nimport { MdDelete } from \"react-icons/md\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  Breadcrumbs,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedModal from \"../../components/CustomizedModal\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport {\n  getAssignmentsByProfessor,\n  deleteAssignmentByProfessor,\n} from \"../../axios/APIRequests\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction ProfessorCourse({ history }) {\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const [error, setError] = useState(\"\")\n  const { user, isAuthenticated, authLoading } = getUser;\n  const [filterType, setFilterType] = React.useState(\"All\");\n  const [courses, setCourses] = React.useState();\n  const [loading, setLoading] = React.useState(true);\n  const [tab, setTab] = React.useState(0);\n  const [courseNames, setCourseNames] = React.useState([]);\n  const [isAssignmentModalOpened, setIsAssignmentModalOpened] = useState(false);\n  const handleOpenAssignmentModal = () => setIsAssignmentModalOpened(true);\n  const handleCloseAssignmentModal = () => setIsAssignmentModalOpened(false);\n  const [deletedAssignmentID, setDeletedAssignmentID] = useState()\n  const handleGetAssignmentByProfessor = () => {\n    getAssignmentsByProfessor()\n    .then((value) => {\n      console.log(value);\n      setCourses(value);\n    })\n    .catch((err) => {\n      console.log(err);\n      setError(err)\n    });\n  }\n  useEffect(() => {\n    var nameLists = [];\n    console.log(courses);\n    if (courses !== undefined) {\n      courses.map((course) => {\n        nameLists.push(course.code);\n      });\n      setCourseNames(nameLists);\n      setLoading(false);\n    }\n    return () => {\n      console.log(\"unmount\");\n    };\n  }, [courses]);\n  useEffect(() => {\n    handleGetAssignmentByProfessor()\n    return () => {\n      console.log(\"unmount\");\n    };\n  }, []);\n \n  const handleDeleteAssignment = () => {\n    deleteAssignmentByProfessor(deletedAssignmentID)\n      .then((value) => {\n        console.log(value);\n        handleGetAssignmentByProfessor()\n        handleCloseAssignmentModal(true)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Course\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading error={error}/>\n          ) : (\n            <>\n              {courses.length === 0 ? (\n                <CustomizedCard>\n                  <CardContent>\n                  <Stack style={{flex:1}} alignItems=\"center\">Please create a new course</Stack>\n                  </CardContent>\n                </CustomizedCard>\n              ) : (\n                <>\n                <Grid container sx={{ marginBottom: \"20px\" }}>\n                  <Grid\n                    item\n                    xs={8}\n                    sx={{ display: \"flex\", alignItems: \"center\" }}\n                  >\n                    <Typography\n                      style={{\n                        display: \"flex\",\n                        textAlign: \"center\",\n                        fontWeight: \"600\",\n                      }}\n                      variant=\"h6\"\n                      component=\"div\"\n                    >\n                      Courses and Assignments\n                    </Typography>\n                  </Grid>\n\n                  <Grid\n                    item\n                    xs={4}\n                    sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                  >\n                    <Stack direction=\"row\" spacing={2}>\n                      <CustomizedButtons\n                        type2\n                        model={\"add\"}\n                        onClick={() => history.push(\"/coursecreation\")}\n                      >\n                        Create Course\n                      </CustomizedButtons>\n                      <CustomizedButtons\n                        type1\n                        onClick={() => history.push(\"/studentinfoview\")}\n                      >\n                        View Student Info\n                      </CustomizedButtons>\n                    </Stack>\n                  </Grid>\n                </Grid>\n                <div>\n                  <CustomizedTabs\n                    type1\n                    setTab={setTab}\n                    tab={tab}\n                    fullWidth={\"fullWidth\"}\n                    labels={courseNames}\n                  ></CustomizedTabs>\n                  {courses.map((course, key) => {\n                    return (\n                      <TabPanel value={tab} index={key}>\n                        <CustomizedCard>\n                          <CardHeader\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                            }}\n                            title={\n                              <Grid container>\n                                <Grid item xs={6}>\n                                  <CustomizedButtons\n                                    type2\n                                    model={\"add\"}\n                                    onClick={() =>\n                                      history.push(\"/assignmentcreation\", {\n                                        courseID: course.courseID,\n                                      })\n                                    }\n                                  >\n                                    Create New Assignment\n                                  </CustomizedButtons>\n                                </Grid>\n                                <Grid\n                                  item\n                                  xs={6}\n                                  sx={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\",\n                                  }}\n                                >\n                                  <CustomizedButtons\n                                    type3\n                                    model={\"radio1\"}\n                                    fullwidth\n                                    filterType={filterType}\n                                    setFilterType={setFilterType}\n                                  >\n                                    Filter Assignment\n                                  </CustomizedButtons>\n                                </Grid>\n                              </Grid>\n                            }\n                          ></CardHeader>\n                          <CardContent\n                            sx={{\n                              paddingTop: \"0\",\n                            }}\n                          >\n                            {course.assignments.map((assignment, key) => {\n                              return (\n                                <>\n                                  {(filterType === \"All\" ||\n                                    (filterType === \"Draft\") ===\n                                      assignment.draft) && (\n                                    <ListItem\n                                      key={key}\n                                      button\n                                      divider\n                                      secondaryAction={\n                                        <IconButton edge=\"end\">\n                                          <MdDelete\n                                            style={{\n                                              color: \"red\",\n                                              size: \"1.5em\",\n                                            }}\n                                            onClick={()=>{\n                                              handleOpenAssignmentModal()\n                                              setDeletedAssignmentID(assignment.assignmentID)\n                                            }}\n                                          />\n                                        </IconButton>\n                                      }\n                                    >\n                                      <ListItemText\n                                        onClick={() =>{\n                                          console.log(\"go\")\n                                          history.push(\"/assignmentdisplay\", {\n                                            assignmentID: assignment.assignmentID,\n                                          })}\n                                        }\n                                        sx={{ fontWeight: \"800\" }}\n                                        primary={\n                                          <div\n                                            style={{\n                                              display: \"flex\",\n                                              justifyContent: \"space-between\",\n                                              alignItems: \"center\",\n                                            }}\n                                          >\n                                            <Typography\n                                              style={{\n                                                display: \"flex\",\n                                                alignItems: \"center\",\n                                                fontWeight: \"600\",\n                                              }}\n                                              variant=\"body1\"\n                                              component=\"div\"\n                                            >\n                                            {assignment.title}\n                                            \n                                            </Typography>\n                                            <Stack direction=\"row\">\n                                              <Typography\n                                                style={{\n                                                  display: \"flex\",\n                                                  alignItems: \"center\",\n                                                  fontWeight: \"600\",\n                                                }}\n                                                variant=\"body1\"\n                                                component=\"div\"\n                                              >\n                                                Preview\n                                              </Typography>\n                                            </Stack>\n                                          </div>\n                                        }\n                                        secondary={\n                                          <Grid container>\n                                            <Grid\n                                              item\n                                              xs={12}\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"space-between\",\n                                              }}\n                                            >\n                                              <Typography\n                                                variant=\"body2\"\n                                                component=\"div\"\n                                              >\n                                                Solution\n                                              </Typography>\n                                              <Typography\n                                                variant=\"body2\"\n                                                component=\"div\"\n                                              >\n                                                Due Date:{\" \"}\n                                                {new Date(\n                                                  assignment.solutionDueDateTime\n                                                ).toLocaleString()}\n                                              </Typography>\n                                            </Grid>\n                                            <Grid\n                                              item\n                                              xs={12}\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"space-between\",\n                                              }}\n                                            >\n                                              <Typography\n                                                variant=\"body2\"\n                                                component=\"div\"\n                                              >\n                                                Peer Review\n                                              </Typography>\n                                              <Typography\n                                                variant=\"body2\"\n                                                component=\"div\"\n                                              >\n                                                Due Date:{\" \"}\n                                                {new Date(\n                                                  assignment.peerReviewDueDateTime\n                                                ).toLocaleString()}\n                                              </Typography>\n                                            </Grid>\n                                          </Grid>\n                                        }\n                                      />\n                                    </ListItem>\n                                  )}\n                                </>\n                              );\n                            })}\n                          </CardContent>\n                        </CustomizedCard>\n                      </TabPanel>\n                    );\n                  })}\n                </div>\n                </>\n              )}\n            </>\n          )}\n        </>\n        <CustomizedModal\n        modalType={\"assignment\"}\n        isAssignmentModalOpened={isAssignmentModalOpened}\n        handleCloseAssignmentModal={handleCloseAssignmentModal}\n        handleDeleteAssignment={handleDeleteAssignment}\n      />\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default ProfessorCourse;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/AssignmentCreation.js",["564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Radio,\n  Breadcrumbs,\n} from \"@mui/material\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport TextField from \"@mui/material/TextField\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n// Worker\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport CustomizedRadios from \"../../components/CustomizedRadios\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport AssignmentViewer from \"./AssignmentViewer\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport { postNewAssignmentByProfessor } from \"../../axios/APIRequests\";\nimport { ConsoleView } from \"react-device-detect\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction AssignmentCreation({ history, location }) {\n  const [newAssignment, setNewAssignment] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [solutionPdfFile, setSolutionPdfFile] = useState([]);\n  const [peerReviewPdfFile, setPeerReviewPdfFile] = useState([]);\n  const [solutionDueDate, setSolutionDueDate] = useState(new Date());\n  const [prDueDate, setPRDueDate] = useState(new Date());\n  const [solutionPdfFileName, setSolutionPdfFileName] = useState(\"\");\n  const [peerReviewPdfFileName, setPeerReviewPdfFileName] = useState(\"\");\n  var ErrorMessage = \"Please fill out !!!\"\n  const [disablePublishBtn, setDisablePublishBtn] = useState(true)\n  useEffect(() => {\n    if (location.state.assignment == undefined) return\n      var assignment = location.state.assignment;\n      console.log(assignment)\n      setTitle(assignment.title);\n      setSolutionDueDate(new Date(assignment.solutionDueDateTime))\n      setPRDueDate(new Date(assignment.peerReviewDueDateTime))\n      setSolutionPdfFileName(assignment.solutionPdfFileName)\n      setPeerReviewPdfFileName(assignment.peerReviewPdfFileName)\n      setSolutionPdfFile(assignment.solutionPdfDoc)\n      setPeerReviewPdfFile(assignment.peerReviewPdfDoc)\n\n    if ( title === \"\" || solutionPdfFile.length === 0 ||  peerReviewPdfFile.length === 0) {\n      setDisablePublishBtn(true)  \n      return\n    }\n    setDisablePublishBtn(false)\n  }, []);\n\n  useEffect(() => {\n    const generateAssignment = () => {\n      setNewAssignment({\n        courseID: location.state.courseID,\n        settings: \"settings\",\n        title: title,\n        draft: true,\n        solutionPdfDoc: solutionPdfFile,\n        peerReviewPdfDoc: peerReviewPdfFile,\n        solutionPdfFileName : solutionPdfFileName,\n        peerReviewPdfFileName:peerReviewPdfFileName,\n        solutionDueDateTime: solutionDueDate.toJSON().split(\".\")[0],\n        peerReviewDueDateTime: prDueDate.toJSON().split(\".\")[0],\n      });\n    };\n    \n    generateAssignment();\n  }, [title, solutionPdfFile, peerReviewPdfFile,solutionPdfFileName,peerReviewPdfFileName, solutionDueDate, prDueDate]);\n\n  const handlePreview = () => {\n    \n    if (\n      title === \"\" ||\n      solutionPdfFile.length === 0 ||\n      peerReviewPdfFile.length === 0\n    ) {\n        alert(ErrorMessage)\n    } else{\n      var assignment = {\n        courseID: location.state.courseID,\n        settings: \"settings\",\n        title: title,\n        solutionPdfDoc: solutionPdfFile,\n        peerReviewPdfDoc: peerReviewPdfFile,\n        solutionPdfFileName : solutionPdfFileName,\n        peerReviewPdfFileName:peerReviewPdfFileName,\n        solutionDueDateTime: solutionDueDate,\n        peerReviewDueDateTime: prDueDate,\n      }\n      console.log(assignment)\n        history.push(\"./assignmentviewer\", {assignment: assignment , \n          courseID: location.state.courseID \n        })\n    }\n   \n  }\n  const handleSaveDraft = () => {\n    if (\n      title === \"\" ||\n      solutionPdfFile.length === 0 ||\n      peerReviewPdfFile.length === 0\n    ) {\n      alert(ErrorMessage)\n    } else {\n      const json = JSON.stringify(newAssignment);\n      console.log(json);\n      postNewAssignmentByProfessor(newAssignment)\n        .then(function (response) {\n          console.log(response);\n          history.push(\"/course\");\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n  const handlePublish = () => {\n    if (\n      title === \"\" ||\n      solutionPdfFile.length === 0 ||\n      peerReviewPdfFile.length === 0\n    ) {\n      alert(ErrorMessage)\n    } else {\n      var tempAss = {...newAssignment, draft: false}\n      console.log(tempAss)\n      const json = JSON.stringify(tempAss);\n      console.log(json);\n      postNewAssignmentByProfessor(tempAss)\n        .then(function (response) {\n          console.log(response);\n          history.push(\"/course\");\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed></NavBar>\n      <>\n      <CustomizedContainer>\n            <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n              <Typography color=\"text.primary\">Home</Typography>\n              <Typography color=\"text.primary\">Courses</Typography>\n              <Typography color=\"text.primary\">Course Name</Typography>\n              <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n                New Assignment\n              </Typography>\n            </Breadcrumbs>\n            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n\n                <Typography\n                  style={{ fontWeight: \"600\" }}\n                  variant=\"body1\"\n                  component=\"div\"\n                >\n                  Build New Assignment\n                </Typography>\n                <CustomizedButtons\n                  type2\n                  onClick={handlePreview}\n                >\n                  Preview\n                </CustomizedButtons>\n            </Stack>\n\n            {/* First Box */}\n            <CustomizedCard sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}>\n              <CardContent>\n                <Stack direction=\"column\" spacing={2}>\n                  <Typography\n                    style={{\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Title Assignment:\n                  </Typography>\n                  <Stack direction=\"row\" spacing={2}>\n                    <CustomizedTextField\n                      value={title}\n                      handleTextFieldChange={setTitle}\n                    >\n                      Title\n                    </CustomizedTextField>\n                    <Typography\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        fontWeight: \"600\",\n                      }}\n                      variant=\"body1\"\n                      component=\"div\"\n                    >\n                      ‘Solution’ and ‘Peer Review’ will be added to title in\n                      their respective phases.\n                    </Typography>\n                  </Stack>\n                </Stack>\n              </CardContent>\n            </CustomizedCard>\n\n            {/* second box */}\n            <CustomizedCard sx={{ marginBottom: \"30px\" }}>\n              <CardContent>\n                <Stack direction=\"column\" spacing={2}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Solution Assignment Content:\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"div\">\n                    Please set the due date and upload instruction PDFs to be\n                    displayed within solution assignment.\n                  </Typography>\n                  <Stack\n                    direction=\"row\"\n                    spacing={2}\n                    sx={{ display: \"flex\", alignItems: \"center\" }}\n                  >\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                      <DateTimePicker\n                        renderInput={(props) => <TextField {...props} />}\n                        label=\"Solution Due Date\"\n                        value={solutionDueDate}\n                        onChange={(newValue) => {\n                          setSolutionDueDate(newValue);\n                        }}\n                      />\n                    </LocalizationProvider>\n                    <CustomizedPdfUploader\n                      id=\"solution\"\n                      pdfFileName={solutionPdfFileName}\n                      setPdfFileName={setSolutionPdfFileName}\n                      setPdfFile={setSolutionPdfFile}\n                    ></CustomizedPdfUploader>\n                  </Stack>\n                </Stack>\n              </CardContent>\n            </CustomizedCard>\n\n            {/* third box */}\n            <CustomizedCard sx={{ marginBottom: \"30px\" }}>\n              <CardContent>\n                <Stack direction=\"column\" spacing={2}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Peer Review Assignment Content:\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"div\">\n                    Please set the due date and upload instruction PDFs to be\n                    displayed within Peer Review Assignment. Please note that\n                    peer reviews must be manually sent for review by professors\n                    after quality checking.\n                  </Typography>\n                  <Stack\n                    direction=\"row\"\n                    spacing={2}\n                    sx={{ display: \"flex\", alignItems: \"center\" }}\n                  >\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                      <DateTimePicker\n                        renderInput={(props) => <TextField {...props} />}\n                        label=\"Peer Review Due Date\"\n                        value={prDueDate}\n                        onChange={(newValue) => {\n                          setPRDueDate(newValue);\n                        }}\n                      />\n                    </LocalizationProvider>\n                    <CustomizedPdfUploader\n                      id=\"peerReview\"\n                      pdfFileName={peerReviewPdfFileName}\n                      setPdfFileName={setPeerReviewPdfFileName}\n                      setPdfFile={setPeerReviewPdfFile}\n                    ></CustomizedPdfUploader>\n                  </Stack>\n                </Stack>\n              </CardContent>\n            </CustomizedCard>\n\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                margintop: \"10px\",\n              }}\n            >\n              <Stack direction=\"row\" spacing={2}>\n                <CustomizedButtons type2 model={\"type2\"} onClick={handleSaveDraft}>\n                Save Draft\n              </CustomizedButtons>\n              <CustomizedButtons onClick={handlePublish} type1 >\n                Publish\n              </CustomizedButtons>\n              </Stack>\n              \n            </Grid>\n          </CustomizedContainer>\n      </>\n    </CustomizedBody>\n  );\n}\n\nexport default AssignmentCreation;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/CourseResultPage.js",["581","582","583","584","585","586","587","588","589"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport SuccessfulNotification from \"../../components/SuccessfulNotification\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\n\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport { getAssignmentsByProfessor } from \"../../axios/APIRequests\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction CourseResultPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [filterType, setFilterType] = useState(\"All\");\n  const [courses, setCourses] = useState();\n\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n  const [loading, setLoading] = React.useState(true);\n  const [courseNames, setCourseNames] = React.useState([]);\n\n  useEffect(() => {\n    var nameLists = [];\n\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course) => {\n        nameLists.push(course.code);\n      });\n      setCourseNames(nameLists);\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getAssignmentsByProfessor()\n      .then((value) => {\n        console.log(value);\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  // useEffect(() => {\n  //   console.log(filterType);\n  //   const filteredItems = courses.assignments.filter((assignment) => {\n  //     return item.type == filterType || filterType === \"All\";\n  //   });\n  //   setItems(filteredItems);\n  // }, [filterType]);\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Course Results\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"h6\"\n                    component=\"div\"\n                  >\n                    Quality Check\n                  </Typography>\n\n              </Stack>\n              <div>\n                <CustomizedTabs\n                  type3\n                  setTab={setTab}\n                  value={tab}\n                  fullWidth={\"fullWidth\"}\n                  labels={courseNames}\n                ></CustomizedTabs>\n                {courses.map((course, key) => (\n                  <TabPanel value={tab} index={key}>\n                    <CustomizedCard>\n                      <CardHeader\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                        title={\n                          <Grid container>\n                            <Grid\n                              item\n                              xs={12}\n                              sx={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                              }}\n                            >\n                              <CustomizedButtons\n                                type3\n                                model={\"radio2\"}\n                                fullwidth\n                                filterType={filterType}\n                                setFilterType={setFilterType}\n                              >\n                                Filter Results\n                              </CustomizedButtons>\n                            </Grid>\n                          </Grid>\n                        }\n                      ></CardHeader>\n                      <CardContent\n                        sx={{\n                          paddingTop: \"0\",\n                        }}\n                      >\n                        {course.assignments.map((assignment) => {\n                          return (\n                            <>\n                              {!assignment.draft && (\n                                <>\n                                  {(filterType === \"All\" ||\n                                    (filterType === \"Completed\") === false) && ( //assignment.solution.isReviewed\n                                    <ListItem\n                                      button\n                                      divider\n                                      onClick={() =>\n                                        history.push(\n                                          \"/studentsolutionqualitycheck\",\n                                          {\n                                            assignmentID:\n                                              assignment.assignmentID,\n                                          }\n                                        )\n                                      }\n                                      secondaryAction={\n                                        <IconButton edge=\"end\">\n                                          <BsArrowRightCircle />\n                                        </IconButton>\n                                      }\n                                    >\n                                      <ListItemText\n                                        sx={{ width: \"30%\" }}\n                                        primary={`${assignment.title} Solutions`}\n                                      />\n\n                                      <>\n                                        {\n                                          //assignment.solution.isReviewed\n                                          assignment.reviewStage === false ? (\n                                            <>\n                                              <ListItemText\n                                                sx={{\n                                                  display: \"flex\",\n                                                  justifyContent: \"center\",\n                                                }}\n                                                primary={`Due ${new Date(\n                                                  assignment.solutionDueDateTime\n                                                ).toLocaleString()}`}\n                                              />\n                                              <ListItemText\n                                                primary={\n                                                  <div\n                                                    style={{\n                                                      display: \"flex\",\n                                                      alignItems: \"center\",\n                                                      justifyContent:\n                                                        \"flex-end\",\n                                                    }}\n                                                  >\n                                                    <FiberManualRecordIcon\n                                                      sx={{\n                                                        color: \"#0DC38D\",\n                                                        marginRight: \"10px\",\n                                                      }}\n                                                      fontSize=\"medium\"\n                                                    />{\" \"}\n                                                    <>Needs Review</>\n                                                  </div>\n                                                }\n                                              />\n                                            </>\n                                          ) : (\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Completed ${new Date(\n                                                assignment.solutionDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          )\n                                        }\n                                      </>\n                                    </ListItem>\n                                  )}\n                                  {assignment.reviewStage && (\n                                    <>\n                                      {(filterType === \"All\" ||\n                                        (filterType === \"Completed\") ===\n                                          false) && ( //assignment.peerreview.isReviewed\n                                        <ListItem\n                                          button\n                                          divider\n                                          onClick={() =>\n                                            history.push(\n                                              \"/studentpeerreviewqualitycheck\",\n                                              {\n                                                assignmentID:\n                                                  assignment.assignmentID,\n                                              }\n                                            )\n                                          }\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            sx={{ width: \"30%\" }}\n                                            primary={`${assignment.title} Peer Reviews`}\n                                          />\n\n                                          <>\n                                            {\n                                              //assignment.peerreview.isReviewed\n                                              assignment.reviewStage ===\n                                              false ? (\n                                                <>\n                                                  <ListItemText\n                                                    sx={{\n                                                      display: \"flex\",\n                                                      justifyContent: \"center\",\n                                                    }}\n                                                    primary={`submissions closed ${new Date(\n                                                      assignment.peerReviewDueDateTime\n                                                    ).toLocaleString()}`}\n                                                  />\n\n                                                  <ListItemText\n                                                    primary={\n                                                      <div\n                                                        style={{\n                                                          display: \"flex\",\n                                                          alignItems: \"center\",\n                                                          justifyContent:\n                                                            \"flex-end\",\n                                                        }}\n                                                      >\n                                                        <FiberManualRecordIcon\n                                                          sx={{\n                                                            color: \"#0DC38D\",\n                                                            marginRight: \"10px\",\n                                                          }}\n                                                          fontSize=\"medium\"\n                                                        />{\" \"}\n                                                        <>Needs Review</>\n                                                      </div>\n                                                    }\n                                                  />\n                                                </>\n                                              ) : (\n                                                <ListItemText\n                                                  sx={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-end\",\n                                                  }}\n                                                  primary={`Completed ${new Date(\n                                                    assignment.peerReviewDueDateTime\n                                                  ).toLocaleString()}`}\n                                                />\n                                              )\n                                            }\n                                          </>\n                                        </ListItem>\n                                      )}\n                                    </>\n                                  )}\n                                </>\n                              )}\n                            </>\n                          );\n                        })}\n                      </CardContent>\n                    </CustomizedCard>\n                  </TabPanel>\n                ))}\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default CourseResultPage;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/ResultsViewerPage.js",["590","591","592","593"],"import React, { useState } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { MdOutlineCancel } from \"react-icons/md\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedTables from \"../../components/CustomizedTables\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  Grid,\n  Breadcrumbs\n} from \"@mui/material\";\nimport CSVUploader from \"../../components/CSVUploader\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@mui/styles\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n\nfunction ResultsViewerPage({ history }) {\n  const [jsonData, setjsonData] = useState([]);\n  console.log(jsonData)\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n      <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\">Courses</Typography>\n          <Typography color=\"text.primary\">Course Name</Typography>\n          <Typography color=\"text.primary\" style={{fontWeight:\"600\"}}>New Assignment</Typography>\n        </Breadcrumbs>\n        <Grid container sx={{ marginBottom: \"20px\" }}>\n          <Grid item xs={9}>\n            <Typography\n              style={{\n                display: \"flex\",\n                textAlign: \"center\",\n                fontWeight: \"600\",\n              }}\n              variant=\"h6\"\n              component=\"div\"\n            >\n              Student Information\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            xs={3}\n            sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            <CustomizedButtons type3 model={\"checked\"}>\n              Send Results\n            </CustomizedButtons>\n          </Grid>\n        </Grid>\n        <div>\n          <CustomizedCard>\n            <CardContent\n              sx={{\n                paddingTop: \"0\",\n              }}\n            >\n              <CSVUploader setjsonData={setjsonData}></CSVUploader>\n              <CustomizedTables\n                jsonData={jsonData.slice(0, -1)}\n              ></CustomizedTables>\n            </CardContent>\n          </CustomizedCard>\n        </div>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default ResultsViewerPage;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/StudentInfoViewPage.js",["594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { MdOutlineCancel, MdTurnedInNot } from \"react-icons/md\";\nimport { MdDelete } from \"react-icons/md\";\nimport { IoIosArrowDropdown, IoIosArrowDropup } from \"react-icons/io\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedModal from \"../../components/CustomizedModal\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Divider,\n  Box,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Stack,\n  TextField,\n  Modal,\n  Fade,\n  Collapse,\n  CircularProgress,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@mui/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\n\nimport Loading from \"../../components/Loading\";\nimport axios from \"axios\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport {\n  getTeamsByProfessor,\n  deleteStudentByProfessor,\n  deleteCourseByProfessor,\n  postNewStudentByProfessor,\n} from \"../../axios/APIRequests\";\n\nconst AddStudentBox = (props) => {\n  const {\n    classes,\n    handleAddStudent,\n    firstName,\n    lastName,\n    sID,\n    email,\n    setFirstName,\n    setLastName,\n    setSID,\n    setEmail,\n    handleCloseAddStudentBox,\n  } = props;\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"#EDEDED\",\n        borderRadius: \"10px\",\n        padding: \"15px\",\n      }}\n    >\n      <Grid container rowSpacing={1}>\n        <Grid item xs={12}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Typography\n              style={{\n                display: \"flex\",\n                textAlign: \"center\",\n                fontWeight: \"600\",\n              }}\n              variant=\"h6\"\n              component=\"div\"\n            >\n              Add Student to Course\n            </Typography>\n            <IconButton aria-label=\"delete\" onClick={handleCloseAddStudentBox}>\n              <MdOutlineCancel />\n            </IconButton>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <Stack\n            direction=\"row\"\n            spacing={3}\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <CustomizedTextField value={firstName} handleTextFieldChange={setFirstName}>\n              First Name\n            </CustomizedTextField>\n            <CustomizedTextField value={lastName} handleTextFieldChange={setLastName}>\n              Last Name\n            </CustomizedTextField>\n            <CustomizedTextField value={sID} handleTextFieldChange={setSID}>\n              Student ID\n            </CustomizedTextField>\n            <CustomizedTextField value={email} handleTextFieldChange={setEmail}>\n              Email\n            </CustomizedTextField>\n            <CustomizedButtons type1 height1 onClick={handleAddStudent}>\n              Add\n            </CustomizedButtons>\n          </Stack>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction StudentInfoViewPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [viewType, setViewType] = useState(\"Student List\");\n  const [isOpenedAddStudentBox, setIsOpenedAddStudentBox] = useState(false);\n  const [isCourseModalOpened, setIsCourseModalOpened] = useState(false);\n  const [isStudentModalOpened, setIsStudentModalOpened] = useState(false);\n  const [firstName, setFirstName] = useState();\n  const [lastName, setLastName] = useState();\n  const [sID, setSID] = useState();\n  const [email, setEmail] = useState();\n\n  const [deletedStudentID, setDeletedStudentID] = useState()\n\n  const handleOpenAddStudentBox = () => setIsOpenedAddStudentBox(true);\n  const handleCloseAddStudentBox = () => setIsOpenedAddStudentBox(false);\n  const handleOpenCourseModal = () => setIsCourseModalOpened(true);\n  const handleCloseCourseModal = () => setIsCourseModalOpened(false);\n  const handleOpenStudentModal = () => setIsStudentModalOpened(true);\n  const handleCloseStudentModal = () => setIsStudentModalOpened(false);\n  const [teamKeys, setTeamKeys] = useState({});\n\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState();\n  const [courseNames, setCourseNames] = React.useState([]);\n  const handleGetTeamsByProfessor = () => {\n    getTeamsByProfessor()\n    .then((value) => {\n      console.log(value);\n      setCourses(value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n  useEffect(() => {\n    var courseNameLists = [];\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course) => {\n        courseNameLists.push(course.code);\n      });\n      setCourseNames(courseNameLists);\n      console.log(\"`loading`\");\n      setLoading(false);\n    }\n  }, [courses]);\n\n  useEffect(() => {\n    handleGetTeamsByProfessor()\n  }, []);\n  const handleClick = (key) => () => {\n    setTeamKeys({ [key]: !teamKeys[key] });\n  };\n  const handleDeleteCourse = () => {\n    const deletedCourseID = courses[tab].courseID; //tab is the index of chosen course\n    deleteCourseByProfessor(deletedCourseID)\n      .then((value) => {\n        console.log(value);\n        handleCloseCourseModal(true)\n        handleGetTeamsByProfessor()\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const handleDeleteStudent = () => {\n    console.log(deletedStudentID);\n    deleteStudentByProfessor(deletedStudentID)\n      .then((value) => {\n        console.log(value);\n        handleCloseStudentModal(true)\n        handleGetTeamsByProfessor()\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const handleAddStudent = () => {\n    var newStudent = {\n      firstName: firstName,\n      lastName: lastName,\n      studentID: sID,\n      email: email,\n    };\n    var json = {\n      courseID: courses[tab].courseID,\n      student: newStudent,\n    };\n    const json_ = JSON.stringify(json);\n    postNewStudentByProfessor(json)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    setIsOpenedAddStudentBox(false);\n  };\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\">Courses</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Students & Teams\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Grid container sx={{ marginBottom: \"20px\" }}>\n                <Grid\n                  item\n                  xs={9}\n                  sx={{ display: \"flex\", alignItems: \"center\" }}\n                >\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"h6\"\n                    component=\"div\"\n                  >\n                    Student Information\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  xs={3}\n                  sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                >\n                  <CustomizedButtons\n                    type2\n                    model={\"add\"}\n                    onClick={()=>{\n                      handleOpenCourseModal()}}\n                  >\n                    Delete Course\n                  </CustomizedButtons>\n                </Grid>\n              </Grid>\n              <div>\n                <CustomizedTabs\n                  type2\n                  setTab={setTab}\n                  value={tab}\n                  fullWidth={\"fullWidth\"}\n                  labels={courseNames}\n                ></CustomizedTabs>\n                {courses.map((course, key) => {\n                  return <TabPanel value={tab} index={key}>\n                    <CustomizedCard>\n                      <CardHeader\n                        sx={{\n                          paddingBottom: \"0\",\n                        }}\n                        title={\n                          <>\n                            {isOpenedAddStudentBox === false ? (\n                              <Grid container>\n                                <Grid item xs={3}>\n                                  <CustomizedButtons\n                                    type3\n                                    sx={{ width: \"170px\" }}\n                                    model={\"add\"}\n                                    model={\"switch\"}\n                                    setViewType={setViewType}\n                                  >\n                                    {viewType}\n                                  </CustomizedButtons>\n                                </Grid>\n                                <Grid\n                                  item\n                                  xs={9}\n                                  sx={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\",\n                                  }}\n                                >\n                                  <CustomizedButtons\n                                    type3\n                                    model={\"add\"}\n                                    onClick={handleOpenAddStudentBox}\n                                  >\n                                    Add new student\n                                  </CustomizedButtons>\n                                </Grid>\n                              </Grid>\n                            ) : (\n                              <Collapse\n                                in={isOpenedAddStudentBox}\n                                timeout=\"auto\"\n                                unmountOnExit\n                              >\n                                <AddStudentBox\n                                  handleAddStudent={handleAddStudent}\n                                  setFirstName={setFirstName}\n                                  firstName={firstName}\n                                  setLastName={setLastName}\n                                  lastName={lastName}\n                                  setSID={setSID}\n                                  sID={sID}\n                                  setEmail={setEmail}\n                                  email={email}\n                                  handleCloseAddStudentBox={\n                                    handleCloseAddStudentBox\n                                  }\n                                ></AddStudentBox>\n                              </Collapse>\n                            )}\n                          </>\n                        }\n                      ></CardHeader>\n                      <CardContent\n                        sx={{\n                          paddingTop: \"0\",\n                        }}\n                      >\n                        {viewType === \"Student List\" ? (\n                          <List component=\"nav\">\n                            {course.students.length !== 0 ? (\n                              <>\n                                {course.students.map((student) => (\n                                  <ListItem\n                                    button\n                                    divider\n                                    secondaryAction={\n                                      <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"delete\"\n                                        onClick={()=>{\n                                          setDeletedStudentID(student.userID)\n                                          handleOpenStudentModal()}}\n                                      >\n                                        <MdDelete style={{\n                                            color: \"red\",\n                                            size: \"1.5em\",\n                                          }}/>\n                                      </IconButton>\n                                    }\n                                  >\n                                    <ListItemText\n                                      primary={`${student.firstName} ${student.lastName}`}\n                                    />\n                                    <ListItemText\n                                      sx={{\n                                        display: \"flex\",\n                                        justifyContent: \"flex-end\",\n                                      }}\n                                      primary=\"Added via CSV upload 08/13/21\"\n                                    />\n                                  </ListItem>\n                                ))}\n                              </>\n                            ) : (\n                              <ListItem>\n                                <ListItemText\n                                  sx={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\",\n                                  }}\n                                  primary=\"There is no student in this course\"\n                                />\n                              </ListItem>\n                            )}\n                          </List>\n                        ) : (\n                          <List component=\"nav\">\n                            {course.teams.map((team, key) => {\n                              const open = teamKeys[key] || false;\n                              return (\n                                <div key={key}>\n                                  <ListItem\n                                    button\n                                    divider\n                                    secondaryAction={\n                                      <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"delete\"\n                                      >\n                                        {open ? (\n                                          <IoIosArrowDropdown />\n                                        ) : (\n                                          <IoIosArrowDropup />\n                                        )}\n                                      </IconButton>\n                                    }\n                                    onClick={handleClick(key)}\n                                  >\n                                    <ListItemText\n                                      primary={`Team ${team.teamName}`}\n                                    />\n                                    <ListItemText\n                                      sx={{\n                                        display: \"flex\",\n                                        justifyContent: \"flex-end\",\n                                      }}\n                                      primary={`${team.students.length} team members`}\n                                    />\n                                  </ListItem>\n\n                                  <Collapse\n                                    in={open}\n                                    timeout=\"auto\"\n                                    unmountOnExit\n                                  >\n                                    <List component=\"div\" disablePadding>\n                                      <>\n                                        {team.students.map((student, key) => (\n                                          <ListItem\n                                            key={key}\n                                            button\n                                            sx={{ pl: 4 }}\n                                            divider\n                                            secondaryAction={\n                                              <IconButton\n                                                style={{color:\"red\"}}\n                                                edge=\"end\"\n                                                aria-label=\"delete\"\n                                                onClick={()=>{\n                                                  setDeletedStudentID(student.userID)\n                                                  handleOpenStudentModal()}}\n                                              >\n                                                <MdDelete />\n                                              </IconButton>\n                                            }\n                                          >\n                                            <ListItemText\n                                              primary={`${student.firstName} ${student.lastName}`}\n                                            />\n                                          </ListItem>\n                                        ))}\n                                      </>\n                                    </List>\n                                  </Collapse>\n                                </div>\n                              );\n                            })}\n                          </List>\n                        )}\n                      </CardContent>\n                    </CustomizedCard>\n                  </TabPanel>\n                })}\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n      <CustomizedModal\n        modalType={\"course\"}\n        isCourseModalOpened={isCourseModalOpened}\n        handleCloseCourseModal={handleCloseCourseModal}\n        handleDeleteCourse={handleDeleteCourse}\n      />\n      <CustomizedModal\n        modalType={\"student\"}\n        isStudentModalOpened={isStudentModalOpened}\n        handleCloseStudentModal={handleCloseStudentModal}\n        handleDeleteStudent={handleDeleteStudent}\n      />\n    </CustomizedBody>\n  );\n}\n\nexport default StudentInfoViewPage;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/StudentPeerReviewQualityCheckPage.js",["614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport { FcHighPriority } from \"react-icons/fc\";\nimport { GoTriangleDown, GoTriangleUp } from \"react-icons/go\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n//PDF\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport { handleConvertByteArrayToPdf } from \"../../utils/byteArrayToPDF\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Collapse,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n  Tabs,\n  Tab,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedTables from \"../../components/CustomizedTables\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport {\n  getQualityCheckPeerReviewByProfesssor,\n  sendFeedBackByProfessor,\n  rejectPeerReviewByProfessor,\n  postNewPeerReviewByStudent,\n} from \"../../axios/APIRequests\";\nimport { IoIosArrowDropdown, IoIosArrowDropup } from \"react-icons/io\";\nimport { GrDocumentMissing } from \"react-icons/gr\";\nimport { BsFillFileEarmarkExcelFill } from \"react-icons/bs\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction StudentPeerReviewQualityCheckPage({ history, location }) {\n  const [tab, setTab] = useState(0);\n  const [teamTab, setTeamTab] = useState(0);\n  const [submissionTab, setSubmissionTab] = useState(0);\n  //const [jsonData, setjsonData] = useState([]);\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const [linkDownload, setLinkDownload] = useState();\n  const [openErrors, setOpenErrors] = React.useState(false);\n  const [assignment, setAssignment] = useState();\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  const [teamKeys, setTeamKeys] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const [submissionPdfFile, setSubmissionPdfFile] = useState();\n  const [peerReviewPdfFileName, setPeerReviewPdfFileName] = useState(\"\");\n  const [submissionArray, setSubmissionArray] = useState([]);\n  const handleClick = () => {\n    setOpenErrors(!openErrors);\n  };\n  const handleChangeTeamTab = (event, newValue) => {\n    setTeamTab(newValue);\n  };\n  const handleChangeSubmissionTab = (event, newValue) => {\n    setSubmissionTab(newValue);\n  };\n  useEffect(() => {\n    if (location.state.assignmentID == undefined) return;\n    var assignmentID = location.state.assignmentID;\n    console.log(assignmentID);\n    getQualityCheckPeerReviewByProfesssor(assignmentID)\n      .then((value) => {\n        console.log(value);\n        setAssignment(value);\n        if (value !== undefined) {\n          setLoading(false);\n        }\n        console.log(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  useEffect(() => {\n    if (assignment !== undefined) {\n      if (assignment.teams[teamTab].peerReview[submissionTab] !== undefined) {\n        console.log(assignment.teams[teamTab].peerReview[submissionTab].pdfDoc);\n        setLinkDownload(\n          handleConvertByteArrayToPdf(\n            assignment.teams[teamTab].peerReview[submissionTab].pdfDoc\n          )\n        );\n      }\n    }\n  }, [assignment, teamTab, submissionTab]);\n  // for submit event\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n  const handleExpand = (key) => () => {\n    setTeamKeys({ [key]: !teamKeys[key] });\n  };\n  const handleSendForFeedBack = () => {\n    sendFeedBackByProfessor(assignment.assignmentID)\n      .then(function (response) {\n        console.log(response);\n        history.push(\"./courseresult\");\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const handleReupload = (teamId) => {\n    // var newSubArray = [];\n    // if (submissionPdfFile.length === 0) {\n    //   alert(\"Please upload your pdf file before submitting !!!\");\n    // } else {\n    //     var newSubmission = {\n    //       teamID: teamId,\n    //       assignmentID: peerReviewInfo.assignmentID,\n    //       pdfDoc: submission.pdfDoc,\n    //       score: submission.score,\n    //       submissionID: peerReviewInfo.teams[index].submission.submissionID,\n    //     };\n    //     newSubArray.push(newSubmission);\n    //   const json = JSON.stringify(newSubArray);\n    //   console.log(newSubArray);\n    //   postNewPeerReviewByStudent(newSubArray)\n    //     .then(function (response) {\n    //       console.log(response);\n    //       history.push(\"/seeallassignment\");\n    //     })\n    //     .catch(function (error) {\n    //       console.log(error);\n    //     });\n    // }\n  };\n  const handleReject = (teamID) => {\n    console.log(teamID);\n    rejectPeerReviewByProfessor(assignment.assignmentID, teamID)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Student Dashboard</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Peer Review Results\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Stack\n                direction=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                mb={3}\n              >\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"h6\"\n                  component=\"div\"\n                >\n                  Peer Review Quality Check\n                </Typography>\n                <CustomizedButtons\n                  type1\n                  model={\"checked\"}\n                  onClick={handleSendForFeedBack}\n                >\n                  Send Feedback\n                </CustomizedButtons>\n              </Stack>\n              <Stack>\n                <CustomizedCard style={{ marginBottom: \"20px\" }}>\n                  <CardContent\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Stack>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                          fontWeight: \"600\",\n                        }}\n                        variant=\"body1\"\n                        component=\"div\"\n                      >\n                        {`${assignment.title} Peer Review`}\n                      </Typography>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                        }}\n                        variant=\"body2\"\n                        component=\"div\"\n                      >\n                        {`Submissions closed ${new Date(\n                          assignment.peerReviewDueDateTime\n                        ).toLocaleString()}`}\n                      </Typography>\n                    </Stack>\n                    <CustomizedButtons\n                      type3\n                      model={\"download\"}\n                      href={linkDownload}\n                      download={\"PeerReviewInstructor.pdf\"}\n                    >\n                      Download Peer Review Instruction\n                    </CustomizedButtons>\n                  </CardContent>\n                </CustomizedCard>\n                <Stack direction=\"row\" alignItems=\"flex-start\">\n                  <Stack sx={{ flex: 1 }}>\n                    <CustomizedTabs\n                      type3\n                      setTab={setTab}\n                      value={tab}\n                      labels={[\"Distributions\", \"Peer Reviews\"]}\n                    ></CustomizedTabs>\n                    <TabPanel value={tab} index={0}>\n                      <CustomizedCard>\n                        <CardContent>\n                          <Stack\n                            direction=\"column\"\n                            mb={1}\n                            justifyContent=\"space-between\"\n                          >\n                            <Typography\n                              style={{\n                                display: \"flex\",\n                                textAlign: \"center\",\n                                fontWeight: \"600\",\n                              }}\n                              variant=\"body1\"\n                              component=\"div\"\n                            >\n                              View each team's average score. Expand a team to\n                              view each peer review score received.\n                            </Typography>\n                            <List component=\"nav\">\n                              {assignment.outlier.map((team, key) => {\n                                const open = teamKeys[key] || false;\n                                return (\n                                  <div key={key}>\n                                    <ListItem\n                                      button\n                                      divider\n                                      secondaryAction={\n                                        <>\n                                          {team.peerReview.length === 0 ? (\n                                            <BsFillFileEarmarkExcelFill\n                                              style={{ color: \"red\" }}\n                                            />\n                                          ) : (\n                                            <IconButton\n                                              edge=\"end\"\n                                              aria-label=\"delete\"\n                                            >\n                                              {open ? (\n                                                <IoIosArrowDropup />\n                                              ) : (\n                                                <IoIosArrowDropdown />\n                                              )}\n                                            </IconButton>\n                                          )}\n                                        </>\n                                      }\n                                      onClick={handleExpand(key)}\n                                    >\n                                      <ListItemText\n                                        sx={{ fontWeight: \"600\" }}\n                                        primary={`Team ${team.teamName}`}\n                                      />\n                                      <>\n                                        {team.peerReview.length === 0 ? (\n                                          <ListItemText\n                                            sx={{\n                                              display: \"flex\",\n                                              justifyContent: \"flex-end\",\n                                            }}\n                                            primary={`This team has not submit the solution\n                                          `}\n                                          />\n                                        ) : (\n                                          <>\n                                            {team.averageScore === -1 ? (\n                                              <ListItemText\n                                                sx={{\n                                                  display: \"flex\",\n                                                  justifyContent: \"flex-end\",\n                                                }}\n                                                primary={`No team reviews the solution of this team\n                                          `}\n                                              />\n                                            ) : (\n                                              <ListItemText\n                                                sx={{\n                                                  display: \"flex\",\n                                                  justifyContent: \"flex-end\",\n                                                }}\n                                                primary={`Average Score: ${Math.round(\n                                                  team.averageScore\n                                                )}`}\n                                              />\n                                            )}\n                                          </>\n                                        )}\n                                      </>\n                                    </ListItem>\n\n                                    <Collapse\n                                      in={open}\n                                      timeout=\"auto\"\n                                      unmountOnExit\n                                    >\n                                      <List component=\"div\" disablePadding>\n                                        <>\n                                          {team.peerReview.map(\n                                            (review, key) => (\n                                              <ListItem\n                                                key={key}\n                                                button\n                                                sx={{ pl: 4 }}\n                                                divider\n                                              >\n                                                <ListItemText\n                                                  primary={`Team ${review.teamName}`}\n                                                />\n                                                <>\n                                                  {review.score ===\n                                                  undefined ? (\n                                                    <ListItemText\n                                                      sx={{\n                                                        display: \"flex\",\n                                                        justifyContent:\n                                                          \"flex-end\",\n                                                      }}\n                                                      primary={`In Process`}\n                                                    />\n                                                  ) : (\n                                                    <ListItemText\n                                                      sx={{\n                                                        display: \"flex\",\n                                                        justifyContent:\n                                                          \"flex-end\",\n                                                      }}\n                                                      primary={`Score: ${review.score}`}\n                                                    />\n                                                  )}\n                                                </>\n                                              </ListItem>\n                                            )\n                                          )}\n                                        </>\n                                      </List>\n                                    </Collapse>\n                                  </div>\n                                );\n                              })}\n                            </List>\n                          </Stack>\n                        </CardContent>\n                      </CustomizedCard>\n                    </TabPanel>\n                    <TabPanel value={tab} index={1}>\n                      <CustomizedCard>\n                        <CardContent>\n                          {assignment.teams.map((team, key) => {\n                            return (\n                              <TabPanel value={teamTab} index={key}>\n                                {team.peerReview.length !== 0 ? (\n                                  <Stack\n                                    direction=\"column\"\n                                    alignItems=\"center\"\n                                    spacing={4}\n                                  >\n                                    <Tabs\n                                      value={submissionTab}\n                                      onChange={handleChangeSubmissionTab}\n                                      variant=\"scrollable\"\n                                      scrollButtons\n                                      allowScrollButtonsMobile\n                                    >\n                                      {team.peerReview.map(\n                                        (peerreview, key) => (\n                                          <Tab\n                                            label={`Peer Review ${key + 1}`}\n                                          />\n                                        )\n                                      )}\n                                    </Tabs>\n                                    {team.peerReview.map((peerreview, key2) => {\n                                      return (\n                                        <TabPanel\n                                          value={submissionTab}\n                                          index={key2}\n                                        >\n                                          <Stack\n                                            sx={{ flex: 1 }}\n                                            direction=\"column\"\n                                            justifyContent=\"center\"\n                                            alignItems=\"space-between\"\n                                          >\n                                            <Stack\n                                              direction=\"column\"\n                                              spacing={1}\n                                            >\n                                              <Stack\n                                                direction=\"row\"\n                                                justifyContent=\"space-between\"\n                                              >\n                                                <Stack\n                                                  direction=\"column\"\n                                                  spacing={1}\n                                                >\n                                                  <Typography\n                                                    style={{\n                                                      display: \"flex\",\n                                                      textAlign: \"center\",\n                                                      fontWeight: \"600\",\n                                                    }}\n                                                    variant=\"body1\"\n                                                    component=\"div\"\n                                                  >\n                                                    {`Team ${team.teamName} Review of Team ${peerreview.solutionTeamName}`}\n                                                  </Typography>\n                                                  <Typography\n                                                    style={{\n                                                      display: \"flex\",\n                                                      textAlign: \"center\",\n                                                    }}\n                                                    variant=\"body1\"\n                                                    component=\"div\"\n                                                  >\n                                                    {`Submitted at ${new Date(\n                                                      peerreview.submissionTime\n                                                    ).toLocaleString()}`}\n                                                  </Typography>\n                                                </Stack>\n                                                <Stack\n                                                  direction=\"column\"\n                                                  alignItems=\"flex-end\"\n                                                  spacing={1}\n                                                >\n                                                  <CustomizedButtons\n                                                    type3\n                                                    height1\n                                                    model={\"download\"}\n                                                    href={linkDownload}\n                                                    download={\"PeerReview.pdf\"}\n                                                  >\n                                                    Download Peer Review\n                                                  </CustomizedButtons>\n                                                  <Stack\n                                                    sx={{\n                                                      display: \"flex\",\n                                                      flexDirection: \"row\",\n                                                      justifyContent:\n                                                        \"space-between\",\n                                                      alignItems: \"center\",\n                                                      width: \"130px\",\n                                                      cursor: \"pointer\",\n                                                    }}\n                                                    onClick={handleClick}\n                                                  >\n                                                    <FcHighPriority size=\"1.5em\" />\n                                                    <Typography\n                                                      style={{\n                                                        display: \"flex\",\n                                                        textAlign: \"center\",\n                                                        fontWeight: \"600\",\n                                                      }}\n                                                      variant=\"body2\"\n                                                      component=\"div\"\n                                                    >\n                                                      View Errors\n                                                    </Typography>\n                                                    {openErrors === false ? (\n                                                      <GoTriangleDown size=\"1em\" />\n                                                    ) : (\n                                                      <GoTriangleUp size=\"1em\" />\n                                                    )}\n                                                  </Stack>\n                                                </Stack>\n                                              </Stack>\n                                              <Collapse\n                                                in={openErrors}\n                                                timeout=\"auto\"\n                                                unmountOnExit\n                                              >\n                                                <div\n                                                  style={{\n                                                    backgroundColor: \"#F2F4F5\",\n                                                    borderRadius: \"10px\",\n                                                    padding:\n                                                      \"20px 20px 30px 30px\",\n                                                  }}\n                                                >\n                                                  <Typography\n                                                    style={{\n                                                      display: \"flex\",\n                                                      textAlign: \"center\",\n                                                      fontWeight: \"600\",\n                                                    }}\n                                                    variant=\"body1\"\n                                                    component=\"div\"\n                                                  >\n                                                    Error Found\n                                                  </Typography>\n                                                  <List>\n                                                    {peerreview.listOfQCWordViolations\n                                                      .split(\",\")\n                                                      .map((word, key) => (\n                                                        <ListItem key={key}>\n                                                          <Typography\n                                                            style={{\n                                                              display: \"flex\",\n                                                              textAlign:\n                                                                \"center\",\n                                                            }}\n                                                            variant=\"body2\"\n                                                            component=\"div\"\n                                                          >\n                                                            {word}\n                                                          </Typography>\n                                                        </ListItem>\n                                                      ))}\n                                                  </List>\n                                                  <Stack\n                                                    direction=\"row\"\n                                                    spacing={3}\n                                                  >\n                                                    {/* {submissionPdfFile !==\n                                                      undefined && (\n                                                      <CustomizedButtons\n                                                        type1\n                                                        height1\n                                                        onClick={() => {\n                                                          handleReupload(\n                                                            team.teamID\n                                                          );\n                                                        }}\n                                                      >\n                                                        Submit\n                                                      </CustomizedButtons>\n                                                    )}\n                                                    <CustomizedPdfUploader\n                                                      id=\"submission\"\n                                                      value={submissionPdfFile}\n                                                      setPdfFile={\n                                                        setSubmissionPdfFile\n                                                      }\n                                                      pdfFileName={\n                                                        peerReviewPdfFileName\n                                                      }\n                                                      setPdfFileName={\n                                                        setPeerReviewPdfFileName\n                                                      }\n                                                    ></CustomizedPdfUploader> */}\n                                                    <CustomizedButtons\n                                                      type2\n                                                      height1\n                                                      onClick={() => {\n                                                        handleReject(\n                                                          team.teamID\n                                                        );\n                                                      }}\n                                                    >\n                                                      Reject PDF\n                                                    </CustomizedButtons>\n                                                  </Stack>\n                                                </div>\n                                              </Collapse>\n                                            </Stack>\n                                            {peerreview.pdfDoc && (\n                                              <Stack\n                                                direction=\"row\"\n                                                justifyContent=\"center\"\n                                                alignItems=\"center\"\n                                                p={1}\n                                                height={825}\n                                              >\n                                                <CustomizedButtons\n                                                  model={\"arrowL\"}\n                                                  style={{\n                                                    color: \"black\",\n                                                    marginBottom: \"10px\",\n                                                  }}\n                                                  onClick={goToPreviousPage}\n                                                ></CustomizedButtons>\n                                                <Document\n                                                  file={{\n                                                    data: peerreview.pdfDoc,\n                                                  }}\n                                                  onLoadSuccess={\n                                                    onDocumentLoadSuccess\n                                                  }\n                                                >\n                                                  <Page\n                                                    pageNumber={pageNumber}\n                                                    scale={scale}\n                                                  />\n                                                </Document>\n                                                <CustomizedButtons\n                                                  model={\"arrow\"}\n                                                  style={{\n                                                    color: \"black\",\n                                                    marginBottom: \"10px\",\n                                                  }}\n                                                  onClick={goToNextPage}\n                                                ></CustomizedButtons>\n                                              </Stack>\n                                            )}\n                                          </Stack>\n                                        </TabPanel>\n                                      );\n                                    })}\n                                  </Stack>\n                                ) : (\n                                  <Stack\n                                    sx={{ height: \"100%\", flex: 1 }}\n                                    direction=\"row\"\n                                    justifyContent=\"center\"\n                                    alignItems=\"center\"\n                                  >\n                                    This team has not submitted Peer Review yet.\n                                  </Stack>\n                                )}\n                              </TabPanel>\n                            );\n                          })}\n                        </CardContent>\n                      </CustomizedCard>\n                    </TabPanel>\n                  </Stack>\n                  {tab !== 0 && (\n                    <CustomizedCard\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        height: \"250px\",\n                        marginLeft: \"20px\",\n                        marginTop: \"47px\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <Tabs\n                        value={teamTab}\n                        orientation=\"vertical\"\n                        onChange={handleChangeTeamTab}\n                        variant=\"scrollable\"\n                        scrollButtons\n                        allowScrollButtonsMobile\n                      >\n                        {assignment.teams.map((team, key) => (\n                          <Tab label={`Team ${team.teamName}`} />\n                        ))}\n                      </Tabs>\n                    </CustomizedCard>\n                  )}\n                </Stack>\n              </Stack>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default StudentPeerReviewQualityCheckPage;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/AssignmentViewer.js",["638","639","640","641","642","643","644","645","646","647","648","649"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Radio,\n  autocompleteClasses,\n} from \"@mui/material\";\n// styled components\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport PDFControlBar from \"../../components/PDFhandling/PDFControlBar\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction AssignmentViewer({ history, location }) {\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  const [isLoading, setIsLoading] = useState(true);\n  const [tab, setTab] = React.useState(0);\n  //const [isPreV, setisPreV] = useState(initialState)\n  //const [assignment, setAssignment] = useState();\n\n  var assignment = location.state.assignment;\n  var solutionPdf = assignment.solutionPdfDoc;\n  var peerReviewPdf = assignment.peerReviewPdfDoc;\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n  // const handlePreviewMode = () => {\n  //   setIsPreviewMode(false);\n  // };\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed></NavBar>\n      <CustomizedContainer>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              fontWeight: \"600\",\n            }}\n            variant=\"h6\"\n            component=\"div\"\n          >\n            {assignment.title}\n          </Typography>\n          <CustomizedButtons\n            type2\n            onClick={() => {\n              history.push(\"/assignmentcreation\", {\n                assignment: assignment,\n                courseID: location.state.courseID,\n              });\n            }}\n          >\n            Close Preview\n          </CustomizedButtons>\n        </Stack>\n        <CustomizedCard sx={{ margin: \"20px 0\" }}>\n          <CardContent>\n            <Grid container>\n              <Grid item xs={12}>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Publish Date:\n                  </Typography>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {new Date().toDateString()}\n                  </Typography>\n                </Stack>\n              </Grid>\n              <Grid item xs={6}>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Solution Due Date:\n                  </Typography>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {new Date(assignment.solutionDueDateTime).toLocaleString()}\n                  </Typography>\n                </Stack>\n              </Grid>\n              <Grid item xs={6}>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Peer Review Due:\n                  </Typography>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {new Date(\n                      assignment.peerReviewDueDateTime\n                    ).toLocaleString()}\n                  </Typography>\n                </Stack>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </CustomizedCard>\n        <div>\n          <CustomizedTabs\n            type1\n            setTab={setTab}\n            tab={tab}\n            labels={[\"Solution\", \"Peer Review\"]}\n          ></CustomizedTabs>\n          <TabPanel value={tab} index={0}>\n            <CustomizedCard>\n              <CardContent>\n                {solutionPdf && (\n                  <Stack\n                  direction=\"row\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  p={1}\n                  height={825}\n                  >\n                    <CustomizedButtons\n                      model={\"arrowL\"}\n                      style={{ color: \"black\", marginBottom: \"10px\" }}\n                      onClick={goToPreviousPage}\n                    ></CustomizedButtons>\n                    <Document\n                      file={{ data: solutionPdf }}\n                      onLoadSuccess={onDocumentLoadSuccess}\n                    >\n                      <Page pageNumber={pageNumber} scale={scale} />\n                    </Document>\n                    <CustomizedButtons\n                      model={\"arrow\"}\n                      style={{ color: \"black\", marginBottom: \"10px\" }}\n                      onClick={goToNextPage}\n                    ></CustomizedButtons>\n                  </Stack>\n                )}\n              </CardContent>\n            </CustomizedCard>\n          </TabPanel>\n          <TabPanel value={tab} index={1}>\n            <CustomizedCard>\n              <CardContent>\n                <>\n                  {peerReviewPdf && (\n                    <Stack\n                      direction=\"row\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                      p={1}\n                      height={825}\n                    >\n                      <CustomizedButtons\n                        model={\"arrowL\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToPreviousPage}\n                      ></CustomizedButtons>\n                      <Document\n                        file={{ data: peerReviewPdf }}\n                        onLoadSuccess={onDocumentLoadSuccess}\n                      >\n                        <Page pageNumber={pageNumber} scale={scale} />\n                      </Document>\n                      <CustomizedButtons\n                        model={\"arrow\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToNextPage}\n                      ></CustomizedButtons>\n                    </Stack>\n                  )}\n                </>\n              </CardContent>\n            </CustomizedCard>\n          </TabPanel>\n        </div>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default AssignmentViewer;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/AssignmentDisplay.js",["650","651","652","653","654","655","656","657","658","659","660"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Radio,\n  autocompleteClasses,\n} from \"@mui/material\";\n// styled components\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport PDFControlBar from \"../../components/PDFhandling/PDFControlBar\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\nimport {\n  getSpecificAssignment,\n} from \"../../axios/APIRequests\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction AssignmentDisplay({ history, location }) {\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  const [isLoading, setIsLoading] = useState(true);\n  const [tab, setTab] = React.useState(0);\n  const [assignment, setAssignment] = useState()\n  const [loading, setLoading] = React.useState(true);\n  const [solutionPdf, setSolutionPdf] = useState()\n  const [peerReviewPdf, setPeerReviewPdf] = useState()\n\n  useEffect(() => {\n    if (assignment !== undefined && assignment.length !== 0) {\n      setSolutionPdf(assignment.solutionPdfDoc)\n      setPeerReviewPdf(assignment.peerReviewPdfDoc)\n      setLoading(false);\n    }\n  }, [assignment]);\n  useEffect(() => {\n    var assignmentID = location.state.assignmentID\n    getSpecificAssignment(assignmentID)\n    .then((value) => {\n      console.log(value);\n      setAssignment(value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }, []);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed></NavBar>\n      <CustomizedContainer>\n      <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack direction=\"row\" spacing={1}>\n            <Typography\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                fontWeight: \"600\",\n              }}\n              variant=\"h6\"\n              component=\"div\"\n            >\n              {assignment.title}\n            </Typography>\n            {assignment.draft === true ? (\n              <Typography\n                style={{\n                  display: \"flex\",\n                  color: \"#777\",\n                  fontWeight: \"500\",\n                  alignItems: \"center\",\n                }}\n                variant=\"h6\"\n                component=\"div\"\n              >\n                (Draft)\n              </Typography>\n            ) : (\n              <></>\n            )}\n          </Stack>\n\n          <Stack direction=\"row\" spacing={2}>\n            <CustomizedButtons\n              type1\n              onClick={() => {\n                history.push(\"/assignmentedit\", {\n                  assignmentID: assignment.assignmentID,\n                  courseID: assignment.courseID,\n                });\n              }}\n            >\n              Edit Assignment\n            </CustomizedButtons>\n            {assignment.draft === true ? (\n              <CustomizedButtons\n                type1\n                onClick={() => {\n                  history.push(\"/assignmentedit\", {\n                    assignment: assignment,\n                    courseID: assignment.courseID,\n                  });\n                }}\n              >\n                Publish\n              </CustomizedButtons>\n            ) : (\n              <></>\n            )}\n          </Stack>\n        </Stack>\n        <CustomizedCard sx={{ margin: \"20px 0\" }}>\n          <CardContent>\n            <Grid container>\n              <Grid item xs={12}>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Publish Date:\n                  </Typography>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {new Date(assignment.publishDateTime).toDateString()}\n                  </Typography>\n                </Stack>\n              </Grid>\n              <Grid item xs={6}>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Solution Due Date:\n                  </Typography>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {new Date(assignment.solutionDueDateTime).toLocaleString()}\n                  </Typography>\n                </Stack>\n              </Grid>\n              <Grid item xs={6}>\n                <Stack direction=\"row\" spacing={1}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    Peer Review Due:\n                  </Typography>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {new Date(\n                      assignment.peerReviewDueDateTime\n                    ).toLocaleString()}\n                  </Typography>\n                </Stack>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </CustomizedCard>\n        <div>\n          <CustomizedTabs\n            type1\n            setTab={setTab}\n            tab={tab}\n            labels={[\"Solution\", \"Peer Review\"]}\n          ></CustomizedTabs>\n          <TabPanel value={tab} index={0}>\n            <CustomizedCard>\n              <CardContent>\n                {solutionPdf && (\n                  <Stack\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    p={10}\n                  >\n                    <CustomizedButtons\n                      model={\"arrowL\"}\n                      style={{ color: \"black\", marginBottom: \"10px\" }}\n                      onClick={goToPreviousPage}\n                    ></CustomizedButtons>\n                    <Document\n                      file={{ data: solutionPdf }}\n                      onLoadSuccess={onDocumentLoadSuccess}\n                    >\n                      <Page pageNumber={pageNumber} scale={scale} />\n                    </Document>\n                    <CustomizedButtons\n                      model={\"arrow\"}\n                      style={{ color: \"black\", marginBottom: \"10px\" }}\n                      onClick={goToNextPage}\n                    ></CustomizedButtons>\n                  </Stack>\n                )}\n              </CardContent>\n            </CustomizedCard>\n          </TabPanel>\n          <TabPanel value={tab} index={1}>\n            <CustomizedCard s>\n              <CardContent>\n                <>\n                  {peerReviewPdf && (\n                    <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" p={1} height={825}\n                    >\n                      <CustomizedButtons\n                        model={\"arrowL\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToPreviousPage}\n                      ></CustomizedButtons>\n                      <Document\n                        file={{ data: peerReviewPdf }}\n                        onLoadSuccess={onDocumentLoadSuccess}\n                      >\n                        <Page pageNumber={pageNumber} scale={scale} />\n                      </Document>\n                      <CustomizedButtons\n                        model={\"arrow\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToNextPage}\n                      ></CustomizedButtons>\n                    </Stack>\n                  )}\n                </>\n              </CardContent>\n            </CustomizedCard>\n          </TabPanel>\n        </div></>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default AssignmentDisplay;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/StudentSolutionQualityCheckPage.js",["661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport { FcHighPriority } from \"react-icons/fc\";\nimport { GoTriangleDown, GoTriangleUp } from \"react-icons/go\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n//PDF\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport PDFControlBar from \"../../components/PDFhandling/PDFControlBar\";\n\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Collapse,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport { getQualityCheckSolutionByProfessor, rejectSolutionByProfessor, sendReviewByProfessor,postNewSolutionByStudent } from \"../../axios/APIRequests\";\nimport { handleConvertByteArrayToPdf } from \"../../utils/byteArrayToPDF\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction StudentSolutionQualityCheckPage({ history, location }) {\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n  const [openErrors, setOpenErrors] = React.useState(false);\n  const [submissionPdfFile, setSubmissionPdfFile] = useState();\n  const [solutionPdfFileName, setSolutionPdfFileName] = useState(\"\");\n  const handleClick = () => {\n    setOpenErrors(!openErrors);\n  };\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  const [tab, setTab] = React.useState(0);\n  const [assignment, setAssignment] = useState();\n  const [linkDownload, setLinkDownload] = useState();\n  const [submittedTeam, setSubmittedTeam] = useState(0)\n  const [totalTeam, setTotalTeam] = useState(0)\n\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n  };\n  const [loading, setLoading] = useState(true);\n  // for submit event\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n  const handleGetQualityCheckSolutionByProfessor = (assignmentID) => {\n    getQualityCheckSolutionByProfessor(assignmentID)\n    .then((value) => {\n      console.log(value);\n      setAssignment(value);\n      if (value !== undefined) {\n        setLoading(false);\n        setSubmittedTeam(value.teams.filter((team) => team.submission !== undefined).length)\n        setTotalTeam(value.teams.length)\n      }\n      console.log(value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n  useEffect(() => {\n    if (location.state.assignmentID == undefined) return;\n    var assignmentID = location.state.assignmentID;\n    console.log(assignmentID);\n    handleGetQualityCheckSolutionByProfessor(assignmentID)\n  }, []);\n  useEffect(() => {\n    if(assignment === undefined) return\n    if(assignment.teams[tab].submission !== undefined){\n      setLinkDownload(handleConvertByteArrayToPdf(assignment.teams[tab].submission.pdfDoc));\n    }\n  }, [tab])\n  const handleSendForReview = () => {\n    sendReviewByProfessor(assignment.assignmentID)\n    .then(function (response) {\n      console.log(response);\n      history.push(\"./courseresult\");\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  };\n  const handleReupload = (teamId) => {\n    if (submissionPdfFile.length === 0) {\n      alert(\"Please upload your pdf file before submitting !!!\")\n    } else {\n      var newSubmission = {\n        teamID: teamId,\n        pdfDoc: submissionPdfFile,\n        seen: false,\n        assignmentID: assignment.assignmentID,\n      };\n\n      const json = JSON.stringify(newSubmission);\n      console.log(newSubmission);\n      postNewSolutionByStudent(newSubmission)\n        .then(function (response) {\n          console.log(response);\n          var assignmentID = location.state.assignmentID;\n          setSubmissionPdfFile()\n          setSolutionPdfFileName(\"\")\n          handleGetQualityCheckSolutionByProfessor(assignmentID)\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }\n  const handleReject = (teamID) => {\n    console.log(teamID);\n    rejectSolutionByProfessor(assignment.assignmentID,teamID)\n    .then(function (response) {\n      console.log(response);\n      \n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Student Dashboard</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Solution Results\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Stack\n                direction=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                mb={3}\n              >\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"h6\"\n                  component=\"div\"\n                >\n                  Solution Quality Check\n                </Typography>\n                <CustomizedButtons\n                  type1\n                  model={\"checked\"}\n                  onClick={handleSendForReview}\n                >\n                  Send for Reviews\n                </CustomizedButtons>\n              </Stack>\n              <div>\n                <CustomizedCard>\n                  <CardContent\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <Stack>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                          fontWeight: \"600\",\n                        }}\n                        variant=\"body1\"\n                        component=\"div\"\n                      >\n                        {`${assignment.title} Solution`}\n                      </Typography>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                        }}\n                        variant=\"body2\"\n                        component=\"div\"\n                      >\n                        {`Submissions closed ${new Date(\n                          assignment.solutionDueDateTime\n                        ).toLocaleString()}`}\n                      </Typography>\n                    </Stack>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                          fontWeight: \"600\",\n                        }}\n                        variant=\"body2\"\n                        component=\"div\"\n                      >\n                        {`${submittedTeam} out of ${totalTeam} teams submitted`}\n                      </Typography>\n                    </div>\n                  </CardContent>\n                </CustomizedCard>\n                <Stack direction=\"row\" justifyContent=\"space-between\" mt={3}>\n                  {assignment.teams.map((team, key) => {\n                    return (\n                      <TabPanel value={tab} index={key} style={{ flex: 1 }}>\n                        <CustomizedCard>\n                          {team.submission !== undefined ? (\n                            <CardContent>\n                              <Stack direction=\"column\">\n                                <Stack\n                                  direction=\"row\"\n                                  justifyContent=\"space-between\"\n                                  alignItems=\"center\"\n                                  mb={2}\n                                >\n                                  <Stack direction=\"column\" spacing={1}>\n                                    <Typography\n                                      style={{\n                                        display: \"flex\",\n                                        textAlign: \"center\",\n                                        fontWeight: \"600\",\n                                      }}\n                                      variant=\"body1\"\n                                      component=\"div\"\n                                    >\n                                      {`Team ${team.teamName}`}\n                                    </Typography>\n                                    <Typography\n                                      style={{\n                                        display: \"flex\",\n                                        textAlign: \"center\",\n                                      }}\n                                      variant=\"body1\"\n                                      component=\"div\"\n                                    >\n                                      Submitted at{\" \"}\n                                      {new Date(\n                                        team.submission.submissionTime\n                                      ).toLocaleString()}\n                                    </Typography>\n                                  </Stack>\n                                  <Stack\n                                    direction=\"column\"\n                                    spacing={1}\n                                    alignItems=\"flex-end\"\n                                  >\n                                    <CustomizedButtons\n                                      type3\n                                      model={\"download\"}\n                                      href={linkDownload}\n                                      download={\"Solution.pdf\"}\n                                    >\n                                      Download Solutions\n                                    </CustomizedButtons>\n                                    <Stack\n                                      sx={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                        justifyContent: \"space-between\",\n                                        alignItems: \"center\",\n                                        width: \"130px\",\n                                        cursor: \"pointer\",\n                                      }}\n                                      onClick={handleClick}\n                                    >\n                                      <FcHighPriority size=\"1.5em\" />\n                                      <Typography\n                                        style={{\n                                          display: \"flex\",\n                                          textAlign: \"center\",\n                                          fontWeight: \"600\",\n                                        }}\n                                        variant=\"body2\"\n                                        component=\"div\"\n                                      >\n                                        View Errors\n                                      </Typography>\n                                      {openErrors === false ? (\n                                        <GoTriangleDown size=\"1em\" />\n                                      ) : (\n                                        <GoTriangleUp size=\"1em\" />\n                                      )}\n                                    </Stack>\n                                  </Stack>\n                                </Stack>\n                                <Collapse\n                                  in={openErrors}\n                                  timeout=\"auto\"\n                                  unmountOnExit\n                                >\n                                  <div\n                                    style={{\n                                      backgroundColor: \"#F2F4F5\",\n                                      borderRadius: \"10px\",\n                                      padding: \"20px 20px 30px 30px\",\n                                    }}\n                                  >\n                                    <Typography\n                                      style={{\n                                        display: \"flex\",\n                                        textAlign: \"center\",\n                                        fontWeight: \"600\",\n                                      }}\n                                      variant=\"body1\"\n                                      component=\"div\"\n                                    >\n                                      Error Found\n                                    </Typography>\n                                    <List>\n                                      {team.submission.listOfQCWordViolations\n                                        .split(\",\")\n                                        .map((word, key) => (\n                                          <ListItem key={key}>\n                                            <Typography\n                                              style={{\n                                                display: \"flex\",\n                                                textAlign: \"center\",\n                                              }}\n                                              variant=\"body2\"\n                                              component=\"div\"\n                                            >\n                                              {word}\n                                            </Typography>\n                                          </ListItem>\n                                        ))}\n                                    </List>\n                                    <Stack direction=\"row\" spacing={3}>\n                                      {submissionPdfFile !== undefined && (\n                                        <CustomizedButtons\n                                        type1\n                                        height1\n                                        onClick={() => {\n                                          handleReupload(team.teamID);\n                                        }}\n                                      >\n                                        Submit\n                                      </CustomizedButtons>\n                                      )}\n                                      <CustomizedPdfUploader\n                                        id=\"submission\"\n                                        value={submissionPdfFile}\n                                        setPdfFile={setSubmissionPdfFile}\n                                        pdfFileName={solutionPdfFileName}\n                                        setPdfFileName={setSolutionPdfFileName}\n                                      ></CustomizedPdfUploader>\n                                      <CustomizedButtons\n                                        type2\n                                        height1\n                                        onClick={() => {\n                                          handleReject(team.teamID);\n                                        }}\n                                      >\n                                        Reject PDF\n                                      </CustomizedButtons>\n                                    </Stack>\n                                  </div>\n                                </Collapse>\n                              </Stack>\n                              {team.submission.pdfDoc && (\n                                <Stack\n                                  direction=\"row\"\n                                  justifyContent=\"center\"\n                                  alignItems=\"center\"\n                                  p={1}\n                                  height={825}\n                                >\n                                  <CustomizedButtons\n                                    model={\"arrowL\"}\n                                    style={{\n                                      color: \"black\",\n                                      marginBottom: \"10px\",\n                                    }}\n                                    onClick={goToPreviousPage}\n                                  ></CustomizedButtons>\n                                  <Document\n                                    file={{ data: team.submission.pdfDoc }}\n                                    onLoadSuccess={onDocumentLoadSuccess}\n                                  >\n                                    <Page\n                                      pageNumber={pageNumber}\n                                      scale={scale}\n                                    />\n                                  </Document>\n                                  <CustomizedButtons\n                                    model={\"arrow\"}\n                                    style={{\n                                      color: \"black\",\n                                      marginBottom: \"10px\",\n                                    }}\n                                    onClick={goToNextPage}\n                                  ></CustomizedButtons>\n                                </Stack>\n                              )}\n                            </CardContent>\n                          ) : (\n                            <CardContent>\n                              <List>\n                                <div\n                                  style={{\n                                    display: \"flex\",\n                                    marginBottom: \"20px\",\n                                    flexDirection: \"column\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Stack direction=\"row\" spacing={1}>\n                                    <Typography\n                                      style={{\n                                        display: \"flex\",\n                                        textAlign: \"center\",\n                                        fontWeight: \"600\",\n                                      }}\n                                      variant=\"body1\"\n                                      component=\"div\"\n                                    >\n                                      {`Team ${team.teamName}`}\n                                    </Typography>\n                                  </Stack>\n                                  <Typography\n                                    style={{\n                                      display: \"flex\",\n                                      textAlign: \"center\",\n                                      fontWeight: \"400\",\n                                    }}\n                                    variant=\"body1\"\n                                    component=\"div\"\n                                  >\n                                    This team has not submitted their solution\n                                    yet !!!\n                                  </Typography>\n                                </div>\n                              </List>\n                            </CardContent>\n                          )}\n                        </CustomizedCard>\n                      </TabPanel>\n                    );\n                  })}\n                  <CustomizedCard\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      height: \"250px\",\n                      marginLeft: \"20px\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <Tabs\n                      value={tab}\n                      orientation=\"vertical\"\n                      onChange={handleChange}\n                      variant=\"scrollable\"\n                      scrollButtons\n                      allowScrollButtonsMobile\n                    >\n                      {assignment.teams.map((team, key) => (\n                        <Tab label={`Team ${team.teamName}`} />\n                      ))}\n                    </Tabs>\n                  </CustomizedCard>\n                </Stack>\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default StudentSolutionQualityCheckPage;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Professor/AssignmentEdit.js",["681","682","683","684","685","686","687","688","689","690","691"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Radio,\n  Breadcrumbs,\n} from \"@mui/material\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport TextField from \"@mui/material/TextField\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n// Worker\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport {\n  editAssignmentByProfessor,\n  getSpecificAssignment,\n} from \"../../axios/APIRequests\";\nimport Loading from \"../../components/Loading\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction AssignmentEdit({ history, location }) {\n  const [loading, setLoading] = React.useState(true);\n  const [newAssignment, setNewAssignment] = useState();\n  const [assignment, setAssignment] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [solutionPdfDoc, setSolutionPdfDoc] = useState([]);\n  const [peerReviewPdfDoc, setPeerReviewPdfDoc] = useState([]);\n  const [solutionPdfFileName, setSolutionPdfFileName] = useState(\"\");\n  const [peerReviewPdfFileName, setPeerReviewPdfFileName] = useState(\"\");\n  const [solutionDueDate, setSolutionDueDate] = useState(new Date());\n  const [prDueDate, setPRDueDate] = useState(new Date());\n  useEffect(() => {\n    if (assignment !== undefined && assignment.length !== 0) {\n      setTitle(assignment.title);\n      setSolutionDueDate(new Date(assignment.solutionDueDateTime));\n      setPRDueDate(new Date(assignment.peerReviewDueDateTime));\n      setSolutionPdfFileName(assignment.solutionPdfFileName);\n      setPeerReviewPdfFileName(assignment.peerReviewPdfFileName);\n      setSolutionPdfDoc(assignment.solutionPdfDoc);\n      setPeerReviewPdfDoc(assignment.peerReviewPdfDoc);\n      setLoading(false);\n    }\n  }, [assignment]);\n  useEffect(() => {\n    var assignmentID = location.state.assignmentID\n    getSpecificAssignment(assignmentID)\n    .then((value) => {\n      console.log(value);\n      setAssignment(value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }, []);\n  console.log(newAssignment);\n  useEffect(() => {\n    const generateAssignment = () => {\n      setNewAssignment({\n        ...assignment,\n        courseID: location.state.courseID,\n        title: title,\n        solutionPdfDoc: solutionPdfDoc,\n        peerReviewPdfDoc: peerReviewPdfDoc,\n        solutionPdfFileName: solutionPdfFileName,\n        peerReviewPdfFileName: peerReviewPdfFileName,\n        solutionDueDateTime: solutionDueDate.toJSON().split(\".\")[0],\n        peerReviewDueDateTime: prDueDate.toJSON().split(\".\")[0],\n      });\n    };\n\n    generateAssignment();\n  }, [title, solutionPdfDoc, peerReviewPdfDoc, solutionDueDate, prDueDate]);\n\n  const handleApplyChange = () => {\n    if (\n      title === \"\" ||\n      solutionPdfDoc.length === 0 ||\n      peerReviewPdfDoc.length === 0\n    ) {\n      console.log(\"Error\");\n    } else {\n      const json = JSON.stringify(newAssignment);\n      console.log(json);\n      editAssignmentByProfessor(newAssignment)\n        .then(function (response) {\n          history.push(\"/assignmentdisplay\", {\n            assignmentID: assignment.assignmentID,\n            courseID: location.state.courseID,\n          });\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed></NavBar>\n      <>\n        <CustomizedContainer>\n          <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n            <Typography color=\"text.primary\">Home</Typography>\n            <Typography color=\"text.primary\">Courses</Typography>\n            <Typography color=\"text.primary\">Course Name</Typography>\n            <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n              New Assignment\n            </Typography>\n          </Breadcrumbs>\n          <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n          <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Typography\n              style={{ fontWeight: \"600\" }}\n              variant=\"body1\"\n              component=\"div\"\n            >\n              Build New Assignment\n            </Typography>\n\n            <CustomizedButtons onClick={handleApplyChange} type1>\n              Apply Changes\n            </CustomizedButtons>\n          </Stack>\n\n          {/* First Box */}\n          <CustomizedCard sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}>\n            <CardContent>\n              <Stack direction=\"column\" spacing={2}>\n                <Typography\n                  style={{\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"body1\"\n                  component=\"div\"\n                >\n                  Title Assignment:\n                </Typography>\n                <Stack direction=\"row\" spacing={2}>\n                  <CustomizedTextField\n                    value={title}\n                    handleTextFieldChange={setTitle}\n                  >\n                    Title\n                  </CustomizedTextField>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    ‘Solution’ and ‘Peer Review’ will be added to title in their\n                    respective phases.\n                  </Typography>\n                </Stack>\n              </Stack>\n            </CardContent>\n          </CustomizedCard>\n\n          {/* second box */}\n          <CustomizedCard sx={{ marginBottom: \"30px\" }}>\n            <CardContent>\n              <Stack direction=\"column\" spacing={2}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"body1\"\n                  component=\"div\"\n                >\n                  Solution Assignment Content:\n                </Typography>\n                <Typography variant=\"body2\" component=\"div\">\n                  Please set the due date and upload instruction PDFs to be\n                  displayed within solution assignment.\n                </Typography>\n                <Stack\n                  direction=\"row\"\n                  spacing={2}\n                  sx={{ display: \"flex\", alignItems: \"center\" }}\n                >\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DateTimePicker\n                      renderInput={(props) => <TextField {...props} />}\n                      label=\"Solution Due Date\"\n                      value={solutionDueDate}\n                      onChange={(newValue) => {\n                        setSolutionDueDate(newValue);\n                      }}\n                    />\n                  </LocalizationProvider>\n                  <CustomizedPdfUploader\n                    id=\"solution\"\n                    pdfFileName={solutionPdfFileName}\n                    setPdfFileName={setSolutionPdfFileName}\n                    setPdfFile={setSolutionPdfDoc}\n                  ></CustomizedPdfUploader>\n                </Stack>\n              </Stack>\n            </CardContent>\n          </CustomizedCard>\n\n          {/* third box */}\n          <CustomizedCard sx={{ marginBottom: \"30px\" }}>\n            <CardContent>\n              <Stack direction=\"column\" spacing={2}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"body1\"\n                  component=\"div\"\n                >\n                  Peer Review Assignment Content:\n                </Typography>\n                <Typography variant=\"body2\" component=\"div\">\n                  Please set the due date and upload instruction PDFs to be\n                  displayed within Peer Review Assignment. Please note that peer\n                  reviews must be manually sent for review by professors after\n                  quality checking.\n                </Typography>\n                <Stack\n                  direction=\"row\"\n                  spacing={2}\n                  sx={{ display: \"flex\", alignItems: \"center\" }}\n                >\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DateTimePicker\n                      renderInput={(props) => <TextField {...props} />}\n                      label=\"Peer Review Due Date\"\n                      value={prDueDate}\n                      onChange={(newValue) => {\n                        setPRDueDate(newValue);\n                      }}\n                    />\n                  </LocalizationProvider>\n                  <CustomizedPdfUploader\n                    id=\"peerReview\"\n                    pdfFileName={peerReviewPdfFileName}\n                    setPdfFileName={setPeerReviewPdfFileName}\n                    setPdfFile={setPeerReviewPdfDoc}\n                  ></CustomizedPdfUploader>\n                </Stack>\n              </Stack>\n            </CardContent>\n          </CustomizedCard>\n          </>\n          )}\n        </>\n        </CustomizedContainer>\n      </>\n    </CustomizedBody>\n  );\n}\n\nexport default AssignmentEdit;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/StudentHomeDashboard.js",["692","693","694","695","696","697","698","699","700","701","702","703"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Divider,\n  List,\n  ListItem,\n  IconButton,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemButton,\n  ListItemIcon,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport { BiCheckCircle } from \"react-icons/bi\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedDivider from \"../../components/CustomizedDivider\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport {\n  getAssignmenstByStudent,\n  getResultsByStudent,\n} from \"../../axios/APIRequests\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nfunction CourseBar({ course, history }) {\n  return (\n    <Stack spacing={0}>\n      <CustomizedButtons\n        type3\n        fullwidth\n        \n        onClick={() => history.push(\"/studentresults\")}\n      >\n        {`${course.title}, Section ${course.sectionNumber}, ${course.semester}`}\n      </CustomizedButtons>\n      <List dense={true} sx={{flex:1}}>\n        {course.assignments.map((assignment) => (\n          <>\n            {!assignment.draft && (\n              <>\n                {assignment.averageScore !== -1 ? (\n                  <ListItem\n                    button\n                    divider\n                    onClick={() =>\n                      history.push(\"/studentpeerreviewresultsdisplay\", {\n                        assignmentID: assignment.assignmentID,\n                      })\n                    }\n                    secondaryAction={\n                      <IconButton edge=\"end\" aria-label=\"delete\">\n                        <BsArrowRightCircle />\n                      </IconButton>\n                    }\n                  >\n                    <ListItemText primary={`${assignment.title}`} />\n                    <ListItemText primary={\"Completed\"} />\n                    <ListItemText\n                      sx={{\n                        display: \"flex\",\n                        justifyContent: \"flex-end\",\n                      }}\n                      primary={\"Score: \" + `${Math.round(assignment.averageScore)}`}\n                    />\n                  </ListItem>\n                ) : (\n                  <ListItem\n                    button\n                    divider\n                    disabled\n                    secondaryAction={\n                      <IconButton edge=\"end\" aria-label=\"delete\">\n                        <BsArrowRightCircle />\n                      </IconButton>\n                    }\n                  >\n                    <ListItemText primary={`${assignment.title}`} />\n                    <ListItemText primary={\"In process\"} />\n                  </ListItem>\n                )}\n              </>\n            )}\n          </>\n        ))}\n      </List>\n    </Stack>\n  );\n}\n\nfunction StudentHomeDashBoard({ history }) {\n  const [loading, setLoading] = React.useState(true);\n  const [assignmentCourses, setAssignmentCourses] = React.useState([]);\n  const [resultCourses, setResultCourses] = React.useState([]);\n  useEffect(() => {\n    if (assignmentCourses === undefined || assignmentCourses.length === 0) return\n    if (resultCourses === undefined || resultCourses.length === 0) return\n    setLoading(false);\n  }, [assignmentCourses,resultCourses ]);\n  useEffect(() => {\n    getAssignmenstByStudent()\n      .then((value) => {\n        setAssignmentCourses(value);\n        getResultsByStudent()\n          .then((value) => {\n            setResultCourses(value);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Home\n          </Typography>\n        </Breadcrumbs>\n        <Grid\n          container\n          spacing={3}\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={4.7}>\n            <CustomizedCard>\n              <CardHeader\n                sx={{ paddingBottom: \"8px\" }}\n                title={\n                  <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                    <ListItem>\n                      <ListItemIcon>\n                        <FiberManualRecordIcon\n                          sx={{ color: \"#0DC38D\" }}\n                          fontSize=\"medium\"\n                        />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={\n                          <Typography\n                            component=\"span\"\n                            fontWeight=\"600\"\n                            variant=\"h6\"\n                          >\n                            Recent Results\n                          </Typography>\n                        }\n                      />\n                    </ListItem>\n                  </List>\n                }\n              ></CardHeader>\n              <CustomizedDivider\n                type1\n                sx={{ marginBottom: \"15px\" }}\n              ></CustomizedDivider>\n              <CardContent\n                sx={{\n                  paddingTop: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <>\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <Stack sx={{flex:1}} spacing={2}>\n                      {resultCourses.map((course, key) => {\n                        return (\n                          <CourseBar\n                            course={course}\n                            key={key}\n                            history={history}\n                          ></CourseBar>\n                        );\n                      })}\n                    </Stack>\n                  )}\n                </>\n              </CardContent>\n            </CustomizedCard>\n          </Grid>\n          <Grid item container spacing={3} xs={7.3}>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem\n                        secondaryAction={\n                          <CustomizedButtons\n                            type1\n                            height1\n                            onClick={() => {\n                              history.push(\"./seeallassignment\");\n                            }}\n                          >\n                            See All\n                          </CustomizedButtons>\n                        }\n                      >\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#347DEB\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Upcoming Assignments\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <List sx={{ width: \"100%\" }}>\n                      {assignmentCourses.map((course, key) => {\n                        return (\n                          <>\n                            {course.assignments.map((assignment, key) => {\n                              return (\n                                <>\n                                  {!assignment.draft && (\n                                    <>\n                                      {!assignment.isSolutionCompleted && (\n                                        <ListItem\n                                          key={key}\n                                          button\n                                          divider\n                                          onClick={() => {\n                                            history.push(\n                                              \"./newsolutionassignmentview\",\n                                              { assignment: assignment }\n                                            );\n                                          }}\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            primary={`${assignment.title} Solution`}\n                                          />\n                                          {assignment.isSolutionCompleted ? (\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Completed ${new Date(\n                                                assignment.solutionDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          ) : (\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Due ${new Date(\n                                                assignment.solutionDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          )}\n                                        </ListItem>\n                                      )}\n                                      {!assignment.isPeerReviewCompleted && (\n                                        <>\n                                          {assignment.reviewStage === true && (\n                                            <ListItem\n                                              key={key}\n                                              button\n                                              divider\n                                              onClick={() => {\n                                                history.push(\n                                                  \"./peerreviewassignmentview\",\n                                                  {\n                                                    assignmentID:\n                                                      assignment.assignmentID,\n                                                  }\n                                                );\n                                              }}\n                                              secondaryAction={\n                                                <IconButton edge=\"end\">\n                                                  <BsArrowRightCircle />\n                                                </IconButton>\n                                              }\n                                            >\n                                              <ListItemText\n                                                primary={`${assignment.title} Peer Review`}\n                                              />\n                                              {assignment.isPeerReviewCompleted ? ( //assignment.peerreview.isCompleted === true\n                                                <ListItemText\n                                                  sx={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-end\",\n                                                  }}\n                                                  primary={`Completed ${new Date(\n                                                    assignment.peerReviewDueDateTime\n                                                  ).toLocaleString()}`}\n                                                />\n                                              ) : (\n                                                <ListItemText\n                                                  sx={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-end\",\n                                                  }}\n                                                  primary={`Due ${new Date(\n                                                    assignment.peerReviewDueDateTime\n                                                  ).toLocaleString()}`}\n                                                />\n                                              )}\n                                            </ListItem>\n                                          )}\n                                        </>\n                                      )}\n                                    </>\n                                  )}\n                                </>\n                              );\n                            })}\n                          </>\n                        );\n                      })}\n                    </List>\n                  )}\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem\n                        button\n                        onClick={() => history.push(\"/studentteams\")}\n                        secondaryAction={\n                          <IconButton edge=\"end\">\n                            <BsArrowRightCircle />\n                          </IconButton>\n                        }\n                      >\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#6F40DC\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Manage Teams\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n              </CustomizedCard>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            ></Grid>\n          </Grid>\n        </Grid>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default StudentHomeDashBoard;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/SeeAllAssignmentPage.js",["704","705","706","707","708","709"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport { getAssignmenstByStudent } from \"../../axios/APIRequests\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction SeeAllAssignmentPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [filterType, setFilterType] = useState(\"All\");\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState();\n  const [courseNames, setCourseNames] = React.useState([]);\n\n  useEffect(() => {\n    var courseNameLists = [];\n    if (courses !== undefined && courses.length !== 0) {\n      console.log(courses);\n      courses.map((course) => {\n        courseNameLists.push(course.code);\n      });\n      setCourseNames(courseNameLists);\n      console.log(\"`loading`\");\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getAssignmenstByStudent()\n      .then((value) => {\n        console.log(value);\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CustomizedBody bg={bg}\n    >\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Assignments\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Grid container sx={{ marginBottom: \"20px\" }}>\n                <Grid item xs={8}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"h6\"\n                    component=\"div\"\n                  >\n                    Assignments by Course\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  xs={4}\n                  sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                >\n                  <CustomizedButtons\n                    type1\n                    onClick={() => history.push(\"/studentteams\")}\n                  >\n                    View Teams\n                  </CustomizedButtons>\n                </Grid>\n              </Grid>\n              <div>\n                <CustomizedTabs\n                  type1\n                  setTab={setTab}\n                  value={tab}\n                  fullWidth={\"fullWidth\"}\n                  labels={courseNames}\n                ></CustomizedTabs>\n                {courses.map((course, id) => (\n                  <TabPanel value={tab} index={id}>\n                    <CustomizedCard>\n                      <CardHeader\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                        title={\n                          <Grid container>\n                            <Grid\n                              item\n                              xs={12}\n                              sx={{\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                              }}\n                            >\n                              <CustomizedButtons\n                                type3\n                                model={\"radio3\"}\n                                fullwidth\n                                filterType={filterType}\n                                setFilterType={setFilterType}\n                              >\n                                Filter Results\n                              </CustomizedButtons>\n                            </Grid>\n                          </Grid>\n                        }\n                      ></CardHeader>\n                      <CardContent\n                        sx={{\n                          paddingTop: \"0\",\n                        }}\n                      >\n                        {course.assignments.map((assignment, key) => {\n                          return (\n                            <>\n                              {!assignment.draft && (\n                                <>\n                                  {(filterType === \"All\" ||\n                                    (filterType === \"Completed\") ===\n                                      assignment.isSolutionCompleted) && (\n                                    <ListItem\n                                      key={key}\n                                      button\n                                      divider\n                                      onClick={() => {\n                                        history.push(\n                                          \"./newsolutionassignmentview\",\n                                          { assignment: assignment }\n                                        );\n                                      }}\n                                      secondaryAction={\n                                        <IconButton edge=\"end\">\n                                          <BsArrowRightCircle />\n                                        </IconButton>\n                                      }\n                                    >\n                                      <ListItemText\n                                        primary={`${assignment.title} Solution`}\n                                      />\n                                      {assignment.isSolutionCompleted ? (\n                                        <ListItemText\n                                          sx={{\n                                            display: \"flex\",\n                                            justifyContent: \"flex-end\",\n                                          }}\n                                          primary={`Completed ${new Date(\n                                            assignment.solutionDueDateTime\n                                          ).toLocaleString()}`}\n                                        />\n                                      ) : (\n                                        <ListItemText\n                                          sx={{\n                                            display: \"flex\",\n                                            justifyContent: \"flex-end\",\n                                          }}\n                                          primary={`Due ${new Date(\n                                            assignment.solutionDueDateTime\n                                          ).toLocaleString()}`}\n                                        />\n                                      )}\n                                    </ListItem>\n                                  )}\n                                  {(filterType === \"All\" ||\n                                    (filterType === \"Completed\") === assignment.isPeerReviewCompleted) && (\n                                    <>\n                                      {assignment.reviewStage === true && (\n                                        <ListItem\n                                          key={key}\n                                          button\n                                          divider\n                                          onClick={() => {\n                                            history.push(\n                                              \"./peerreviewassignmentview\",\n                                              {\n                                                assignmentID:\n                                                  assignment.assignmentID,\n                                              }\n                                            );\n                                          }}\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            primary={`${assignment.title} Peer Review`}\n                                          />\n                                          {assignment.isPeerReviewCompleted ? ( //assignment.peerreview.isCompleted === true\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Completed ${new Date(\n                                                assignment.peerReviewDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          ) : (\n                                            <ListItemText\n                                              sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"flex-end\",\n                                              }}\n                                              primary={`Due ${new Date(\n                                                assignment.peerReviewDueDateTime\n                                              ).toLocaleString()}`}\n                                            />\n                                          )}\n                                        </ListItem>\n                                      )}\n                                    </>\n                                  )}\n                                </>\n                              )}\n                            </>\n                          );\n                        })}\n                      </CardContent>\n                    </CustomizedCard>\n                  </TabPanel>\n                ))}\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default SeeAllAssignmentPage;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/StudentTeamsPage.js",["710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nimport { FaUserCheck } from \"react-icons/fa\";\nimport { IoIosArrowDropdown, IoIosArrowDropup } from \"react-icons/io\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedModal from \"../../components/CustomizedModal\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Divider,\n  Box,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Stack,\n  TextField,\n  Modal,\n  Fade,\n  Collapse,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport Loading from \"../../components/Loading\";\nimport { getTeamsByProfessor, getTeamsByStudent } from \"../../axios/APIRequests\";\n\nconst styles = (theme) => ({\n  input: {\n    height: 30,\n    paddingTop: \"5px\",\n  },\n});\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction StudentTeamsPage({ history }) {\n\n  const [tab, setTab] = useState(0);\n  const [teamKeys, setTeamKeys] = useState({});\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState();\n  const [courseNames, setCourseNames] = React.useState([]);\n\n  useEffect(() => {\n    var courseNameLists = [];\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course) => {\n        courseNameLists.push(course.code);\n      });\n      setCourseNames(courseNameLists);\n      console.log(\"`loading`\");\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getTeamsByStudent()\n    .then((value) => {\n      console.log(value);\n      setCourses(value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }, []);\n  const handleClick = (key) => () => {\n    setTeamKeys({ [key]: !teamKeys[key] });\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\">Courses</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"800\" }}>\n            Students & Teams\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Grid container sx={{ marginBottom: \"20px\" }}>\n                <Grid item xs={9}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"h6\"\n                    component=\"div\"\n                  >\n                    Student Information\n                  </Typography>\n                </Grid>\n              </Grid>\n              <div>\n                <CustomizedTabs\n                  type2\n                  setTab={setTab}\n                  value={tab}\n                  labels={courseNames}\n                  fullWidth={\"fullWidth\"}\n                ></CustomizedTabs>\n                {courses.map((course, key) => (\n                  <TabPanel value={tab} index={key}>\n                    <CustomizedCard>\n                      <CardContent\n                        sx={{\n                          paddingTop: \"0\",\n                        }}\n                      >\n                       <List component=\"nav\">\n                            {course.teams.map((team, key) => {\n                              const open = teamKeys[key] || false;\n                              return (\n                                <div key={key}>\n                                  <ListItem\n                                    button\n                                    divider\n                                    secondaryAction={\n                                      <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"delete\"\n                                      >\n                                        {open ? (\n                                           <IoIosArrowDropup />\n                                        ) : (\n                                          <IoIosArrowDropdown />\n                                        )}\n                                      </IconButton>\n                                    }\n                                    onClick={handleClick(key)}\n                                  >\n                                    <ListItemText\n                                      primary={`Team ${team.teamName}`}\n                                    />\n                                    <ListItemText\n                                      sx={{\n                                        display: \"flex\",\n                                        justifyContent: \"flex-end\",\n                                      }}\n                                      primary={`${team.students.length} team members`}\n                                    />\n                                  </ListItem>\n\n                                  <Collapse\n                                    in={open}\n                                    timeout=\"auto\"\n                                    unmountOnExit\n                                  >\n                                    <List component=\"div\" disablePadding>\n                                      <>\n                                        {team.students.map((student, key) => (\n                                          <ListItem\n                                            key={key}\n                                            button\n                                            sx={{ pl: 4 }}\n                                            divider\n                                            secondaryAction={\n                                              <IconButton\n                                                edge=\"end\"\n                                                aria-label=\"delete\"\n                                              >\n                                                {(student.userID.toString() === localStorage.getItem('userID')) && (\n                                                   <FaUserCheck style={{color: \"green\"}}/>\n                                                )}\n                                              </IconButton>\n                                            }\n                                          >\n                                            <ListItemText\n                                              primary={`${student.firstName} ${student.lastName}`}\n                                            />\n                                          </ListItem>\n                                        ))}\n                                      </>\n                                    </List>\n                                  </Collapse>\n                                </div>\n                              );\n                            })}\n                          </List>\n                      </CardContent>\n                    </CustomizedCard>\n                  </TabPanel>\n                ))}\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default StudentTeamsPage;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/NewSolutionAssignmentView.js",["726","727","728","729","730","731","732","733","734","735","736"],"import React, { useState, useEffect } from \"react\";\n\n// @mui components\nimport Typography from \"@mui/material/Typography\";\n//PDF\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport { CardContent, Grid, List, Stack } from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport { getTeamIdByStudentAndCourse, postNewSolutionByStudent } from \"../../axios/APIRequests\";\nimport { handleConvertByteArrayToPdf } from \"../../utils/byteArrayToPDF\";\n\nfunction NewSolutionAssignmentView({ history, location }) {\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  // ========= main variable =======\n\n  const [assignment, setAssignment] = useState();\n  const [submissionPdfFile, setSubmissionPdfFile] = useState();\n  const [linkDownload, setLinkDownload] = useState();\n  const [teamId, setTeamId] = useState();\n  var ErrorMessage = \"Please upload your pdf file before submitting !!!\"\n  useEffect(() => {\n    if (assignment !== undefined) {\n      // =========== Handle PDF Download From Byte Array ==================\n      setLinkDownload(handleConvertByteArrayToPdf(assignment.solutionPdfDoc))\n      getTeamIdByStudentAndCourse(assignment.courseID)\n        .then((value) => {\n          setTeamId(value.teamID);\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [assignment]);\n\n  useEffect(() => {\n    setAssignment(location.state.assignment);\n  }, []);\n\n\n  //======= handle send request to backend =====\n  const handleSubmitFile = (event) => {\n    //TODO add function to send request to backend\n\n    if (submissionPdfFile.length === 0) {\n      alert(ErrorMessage)\n    } else {\n      var newSubmission = {\n        teamID: teamId,\n        pdfDoc: submissionPdfFile,\n        seen: false,\n        assignmentID: assignment.assignmentID,\n      };\n\n      const json = JSON.stringify(newSubmission);\n      console.log(newSubmission);\n      postNewSolutionByStudent(newSubmission)\n        .then(function (response) {\n          console.log(response);\n          history.push(\"/seeallassignment\");\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    \n  };\n\n  // for submit event\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      {loading === true ? (\n        <Loading />\n      ) : (\n        <>\n          <CustomizedContainer>\n            <Grid\n              container\n              sx={{\n                marginBottom: \"20px\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n              spacing={9}\n            >\n              <Grid item xs={9}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"h6\"\n                  component=\"div\"\n                >\n                  {`${assignment.title} Solution`}\n                </Typography>\n              </Grid>\n            </Grid>\n            <div>\n              <CustomizedCard style={{ marginTop: \"20px\"}}>\n                <CardContent>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        marginBottom: \"20px\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                        <Typography\n                          style={{\n                            display: \"flex\",\n                            textAlign: \"center\",\n                            fontWeight: \"600\",\n                          }}\n                          variant=\"body1\"\n                          component=\"div\"\n                        >\n                          Due Date:\n                        </Typography>\n                        <Typography\n                          style={{\n                            display: \"flex\",\n                            textAlign: \"center\",\n                          }}\n                          variant=\"body1\"\n                          component=\"div\"\n                        >\n                          {new Date(\n                            assignment.solutionDueDateTime\n                          ).toLocaleString()}\n                        </Typography>\n                      </Stack>\n                      <CustomizedButtons\n                        type3\n                        model={\"download\"}\n                        href={linkDownload}\n                        download={\"SolutionInstructor\"}\n                        title=\"download\"\n                    \n                      >\n                        Download Instructions\n                      </CustomizedButtons>\n                    </div>\n                  {assignment.solutionPdfDoc && (\n                    <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" p={1} height={825}\n                    >\n                      <CustomizedButtons\n                        model={\"arrowL\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToPreviousPage}\n                      ></CustomizedButtons>\n                      <Document\n                        file={{ data: assignment.solutionPdfDoc }}\n                        onLoadSuccess={onDocumentLoadSuccess}\n                      >\n                        <Page pageNumber={pageNumber} scale={scale} />\n                      </Document>\n                      <CustomizedButtons\n                        model={\"arrow\"}\n                        style={{ color: \"black\", marginBottom: \"10px\" }}\n                        onClick={goToNextPage}\n                      ></CustomizedButtons>\n                    </Stack>\n                  )}\n                </CardContent>\n              </CustomizedCard>\n              <CustomizedCard\n                style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n              >\n                <CardContent>\n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                    <Typography\n                      style={{\n                        display: \"flex\",\n                        textAlign: \"center\",\n                        fontWeight: \"600\",\n                      }}\n                      variant=\"body1\"\n                      component=\"div\"\n                    >\n                      Submit Solution as a PDF attachment:\n                    </Typography>\n                      <CustomizedPdfUploader\n                        id=\"submission\"\n                        setPdfFile={setSubmissionPdfFile}\n                      ></CustomizedPdfUploader>\n                  </Stack>\n                </CardContent>\n              </CustomizedCard>\n            </div>\n            <Stack\n              direction=\"row\"\n              justifyContent=\"flex-end\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <CustomizedButtons type2>Cancel</CustomizedButtons>\n              <CustomizedButtons type1 onClick={handleSubmitFile}>\n                Submit\n              </CustomizedButtons>\n            </Stack>\n          </CustomizedContainer>\n        </>\n      )}\n    </CustomizedBody>\n  );\n}\n\nexport default NewSolutionAssignmentView;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/PeerReviewAssignmentView.js",["737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport Typography from \"@mui/material/Typography\";\n//PDF\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport { CardContent, FormControl, Grid, InputLabel, List, MenuItem, Select, Stack, Tab, Tabs } from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport { handleConvertByteArrayToPdf } from \"../../utils/byteArrayToPDF\";\nimport { Box } from \"@mui/system\";\nimport { getSubmissionsToReviewByStudent,getTeamIdByStudentAndCourse,postNewPeerReviewByStudent,postNewSolutionByStudent} from \"../../axios/APIRequests\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction PeerReviewAssignmentView({ history, location }) {\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  const [tab, setTab] = useState(0);\n  // ========= main variable =======\n  const [score, setScore] = useState();\n  const [teamId, setTeamId] = useState(); \n  const [peerReviewInfo, setPeerReviewInfo] = useState();\n  const [submissionPdfFile, setSubmissionPdfFile] = useState();\n  const [submissionPdfFileName, setSubmissionPdfFileName] = useState(\"\");\n  const [submissionArray, setSubmissionArray] = useState([]);\n  const [linkDownload, setLinkDownload] = useState(); //this is peer review instuction pdf\n  const [submissionLinkDownload, setSubmissionLinkDownload] = useState(); //this is solution submssion pdf\n  var ErrorMessage = \"Please fill out !!!\";\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n  };\n  const handleChangeScore = (event) => {\n    setScore(event.target.value);\n    submissionArray[tab].score = event.target.value;\n  };\n  useEffect(() => {\n    if (location.state.assignmentID == undefined) return;\n    var assignmentID = location.state.assignmentID;\n    getSubmissionsToReviewByStudent(assignmentID)\n      .then((value) => {\n        console.log(value)\n        if (value !== undefined) {\n          setPeerReviewInfo(value);\n          let subArray = [];\n        //initialize submission array\n        value.teams.map((index) => {\n          let sub = {\n            pdfDoc: [],\n            fileName: \"\",\n            score: 0,\n          };\n          subArray.push(sub);\n        });\n          setSubmissionArray(subArray);\n          setLoading(false);\n          getTeamIdByStudentAndCourse(value.courseID)\n          .then((value) => {\n            setTeamId(value.teamID);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n          \n          if (value !== undefined) {\n            setLinkDownload(handleConvertByteArrayToPdf(value.peerReviewPdfDoc));\n          }\n        } \n      })\n      .catch((err) => {\n        console.log(err);\n      });\n     \n  }, []);\n\n  console.log(submissionArray)\n  useEffect(() => {\n    if (peerReviewInfo !== undefined) {\n      setSubmissionLinkDownload(\n        handleConvertByteArrayToPdf(peerReviewInfo.teams[tab].submission.pdfDoc)\n      );\n      setScore(submissionArray[tab].score);\n      setSubmissionPdfFileName(submissionArray[tab].fileName)\n    }\n  }, [tab]);\n\n  useEffect(() => {\n    console.log(submissionArray);\n    if (submissionArray.length === 0) return;\n\n    submissionArray[tab].pdfDoc = submissionPdfFile;\n    submissionArray[tab].fileName = submissionPdfFileName\n  }, [submissionPdfFile]);\n  \n  //======= handle send request to backend =====\n  const handleSubmitFile = (event) => {\n    var newSubArray = []\n    if (submissionPdfFile.length === 0) {\n      alert(ErrorMessage);\n    } else {\n      submissionArray.map((submission,index) => {\n        var newSubmission = {\n          teamID: teamId,\n          assignmentID: peerReviewInfo.assignmentID,\n          pdfDoc: submission.pdfDoc,\n          score: submission.score,\n          submissionID: peerReviewInfo.teams[index].submission.submissionID,\n        };\n        newSubArray.push(newSubmission)\n      });\n      const json = JSON.stringify(newSubArray);\n      console.log(newSubArray);\n      postNewPeerReviewByStudent(newSubArray)\n        .then(function (response) {\n          console.log(response);\n           history.push(\"/seeallassignment\");\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  // for submit event\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      {loading === true ? (\n        <Loading />\n      ) : (\n        <>\n          <CustomizedContainer>\n            <Grid\n              container\n              sx={{\n                marginBottom: \"20px\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n              spacing={9}\n            >\n              <Grid item xs={9}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"h6\"\n                  component=\"div\"\n                >\n                  {`${peerReviewInfo.title} Peer Review`}\n                </Typography>\n              </Grid>\n            </Grid>\n            <div>\n              <CustomizedCard style={{ margin: \"20px 0\"  }}>\n                <CardContent>\n                  <Stack direction=\"row\" spacing={3} justifyContent=\"space-between\" alignItems=\"center\">\n                    <Stack direction=\"row\" spacing={1}>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                          fontWeight: \"600\",\n                        }}\n                        variant=\"body1\"\n                        component=\"div\"\n                      >\n                        Due Date:\n                      </Typography>\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                        }}\n                        variant=\"body1\"\n                        component=\"div\"\n                      >\n                        {new Date(\n                          peerReviewInfo.peerReviewDueDateTime\n                        ).toLocaleString()}\n                      </Typography>\n                    </Stack>\n                    <CustomizedButtons\n                      type3\n                      model={\"download\"}\n                      href={linkDownload}\n                      download={\"PeerReviewInstructor.pdf\"}\n                      title=\"download\"\n                    >\n                      Download Instructions\n                    </CustomizedButtons>\n                  </Stack>\n                </CardContent>\n              </CustomizedCard>\n              {peerReviewInfo.teams.length !== 0 ? (\n\n                <Stack direction=\"row\" justifyContent=\"space-between\" style={{flex:\"1\"}}>\n                  {peerReviewInfo.teams.map((team, key) => {\n                    return (\n                      <TabPanel value={tab} index={key} style={{ flex:1}}>\n                        <CustomizedCard >\n                          <CardContent>\n                            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\"\n                            >\n                              <Stack direction=\"column\" spacing={1}>\n                                <Typography\n                                  style={{\n                                    display: \"flex\",\n                                    textAlign: \"center\",\n                                    fontWeight: \"600\",\n                                  }}\n                                  variant=\"body1\"\n                                  component=\"div\"\n                                >\n                                  {`Submission ${key + 1}`}\n                                </Typography>\n                              </Stack>\n                              <CustomizedButtons\n                                type2\n                                model={\"download\"}\n                                href={submissionLinkDownload}\n                                download={\"Solution.pdf\"}\n                              >\n                                Download Peer Review PDF\n                              </CustomizedButtons>\n                            </Stack>\n                            {team.submission.pdfDoc && (\n                              <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" p={1} height={825}\n                              >\n                                <CustomizedButtons\n                                  model={\"arrowL\"}\n                                  style={{ color: \"black\", marginBottom: \"10px\" }}\n                                  onClick={goToPreviousPage}\n                                ></CustomizedButtons>\n                                <Document\n                                  file={{ data: team.submission.pdfDoc }}\n                                  onLoadSuccess={onDocumentLoadSuccess}\n                                >\n                                  <Page pageNumber={pageNumber} scale={scale} />\n                                </Document>\n                                <CustomizedButtons\n                                  model={\"arrow\"}\n                                  style={{ color: \"black\", marginBottom: \"10px\" }}\n                                  onClick={goToNextPage}\n                                ></CustomizedButtons>\n                              </Stack>\n                            )}\n                            <Stack direction=\"column\" spacing={3}>\n                              <Typography\n                                style={{\n                                  display: \"flex\",\n                                  textAlign: \"center\",\n                                  fontWeight: \"600\",\n                                }}\n                                variant=\"body1\"\n                                component=\"div\"\n                              >\n                                Score Submission:\n                              </Typography>\n\n                              <Stack direction=\"row\" spacing={3} alignItems=\"center\">\n                                <FormControl sx={{width:\"100px\"}}>\n                                  <InputLabel id=\"demo-simple-select-label\">\n                                    Score\n                                  </InputLabel>\n                                  <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    value={score}\n                                    label=\"Score\"\n                                    onChange={handleChangeScore}\n                                  >\n                                    {Array.from(Array(10).keys()).map((index, key)=>(\n                                      <MenuItem value={index} key={key}>{index}</MenuItem>\n                                    ))}\n                                  </Select>\n                                </FormControl>\n                                <CustomizedPdfUploader\n                                  id=\"submission\"\n                                  pdfFileName={submissionPdfFileName}\n                                  setPdfFileName={setSubmissionPdfFileName}\n                                  setPdfFile={setSubmissionPdfFile}\n                                ></CustomizedPdfUploader>\n                              </Stack>\n                            </Stack>\n                          </CardContent>\n                        </CustomizedCard>\n                      </TabPanel>\n                    );\n                  })}\n                  <CustomizedCard\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      height: \"250px\",\n                      marginLeft: \"20px\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <Tabs\n                      value={tab}\n                      orientation=\"vertical\"\n                      onChange={handleChange}\n                      variant=\"scrollable\"\n                      scrollButtons\n                      allowScrollButtonsMobile\n                    >\n                      {peerReviewInfo.teams.map((team, key) => (\n                        <Tab label={`Submission ${key + 1}`} />\n                      ))}\n                    </Tabs>\n                  </CustomizedCard>\n                </Stack>\n              ) : (\n                <CustomizedCard style={{flex:\"1\"}}>\n                  <CardContent>\n                    <Stack direction=\"row\" justifyContent=\"space-between\" >There is no submission to review</Stack>\n                  </CardContent>\n                </CustomizedCard>\n              )}\n            </div>\n            {peerReviewInfo.teams.length !== 0 && (\n              <Stack\n              direction=\"row\"\n              justifyContent=\"flex-end\"\n              alignItems=\"center\"\n              spacing={2}\n              mt={3}\n              mr={20}\n            >\n              <CustomizedButtons type2>Cancel</CustomizedButtons>\n              <CustomizedButtons type1 onClick={handleSubmitFile}>\n                Submit\n              </CustomizedButtons>\n            </Stack>\n            )}\n          </CustomizedContainer>\n        </>\n      )}\n    </CustomizedBody>\n  );\n}\n\nexport default PeerReviewAssignmentView;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/StudentPeerReviewResultsDisplay.js",["754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport {\n  CardContent,\n  Grid,\n  List,\n  Stack,\n  Typography,\n  Box,\n  CardHeader,\n} from \"@mui/material\";\n//PDF\nimport { Document, Page, pdfjs } from \"react-pdf\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\n\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedPdfUploader from \"../../components/CustomizedPdfUploader\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport { getPeerReviewResulttByStudent } from \"../../axios/APIRequests\";\nimport { handleConvertByteArrayToPdf } from \"../../utils/byteArrayToPDF\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\nfunction StudentPeerReviewResultsDisplay({ history, location }) {\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n  const [tab, setTab] = useState(0);\n  // ========= main variable =======\n  const [comments, setComments] = React.useState(\"\");\n  const [assignment, setAssignment] = useState();\n  const [submissionPdfFile, setSubmissionPdfFile] = useState(null);\n  const [peerReviewResult, setPeerReviewResult] = useState();\n  const [linkDownload, setLinkDownload] = useState();\n  useEffect(() => {\n    if (location.state.assignmentID == undefined) return;\n    var assignmentID = location.state.assignmentID;\n    getPeerReviewResulttByStudent(assignmentID)\n      .then((value) => {\n        console.log(value);\n        if (peerReviewResult === undefined) {\n          setPeerReviewResult(value);\n        }\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  useEffect(() => {\n   \n    if(peerReviewResult !== undefined){\n     //console.log(peerReviewResult.peerReview[tab].pdfDoc)\n      setLinkDownload(handleConvertByteArrayToPdf(peerReviewResult.peerReview[tab].pdfDoc));\n    }\n  }, [peerReviewResult,tab])\n  // for submit event\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      {loading === true ? (\n        <Loading />\n      ) : (\n        <>\n          <CustomizedContainer>\n            <Grid\n              container\n              sx={{\n                marginBottom: \"20px\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n              spacing={9}\n            >\n              <Grid item xs={9}>\n                <Typography\n                  style={{\n                    display: \"flex\",\n                    textAlign: \"center\",\n                    fontWeight: \"600\",\n                  }}\n                  variant=\"h6\"\n                  component=\"div\"\n                >\n                  Peer Review Results\n                </Typography>\n              </Grid>\n            </Grid>\n            <CustomizedCard style={{ marginTop: \"20px\" }}>\n              <CardContent>\n                <Stack\n                  direction=\"row\"\n                  justifyContent=\"space-between\"\n                  alignItems=\"center\"\n                  spacing={3}\n                >\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"body1\"\n                    component=\"div\"\n                  >\n                    {`Averaged Score: ${Math.round(\n                    peerReviewResult.averageScore\n                  )}`}\n                  </Typography>\n                </Stack>\n              </CardContent>\n            </CustomizedCard>\n            <div style={{ marginTop: \"20px\" }}>\n              <CustomizedTabs\n                type3\n                setTab={setTab}\n                value={tab}\n                labels={Array.from(\n                  { length: peerReviewResult.peerReview.length },\n                  (_, index) => `Review ${index + 1}`\n                )}\n              ></CustomizedTabs>\n              {peerReviewResult.peerReview.map((review, key) => (\n                <TabPanel value={tab} index={key}>\n                  <CustomizedCard>\n                    <CardContent>\n                      <Stack direction=\"row\" justifyContent=\"space-between\">\n                        <CustomizedButtons type2>\n                          Score : {review.score}\n                        </CustomizedButtons>\n                        <CustomizedButtons\n                          type3\n                          model={\"download\"}\n                          href={linkDownload}\n                          download={\"PeerReview.pdf\"}\n                        >\n                          Download Reviews\n                        </CustomizedButtons>\n                      </Stack>\n                      {review.pdfDoc && (\n                        <Stack\n                          direction=\"row\"\n                          justifyContent=\"center\"\n                          alignItems=\"center\"\n                          p={1}\n                        >\n                          <CustomizedButtons\n                            model={\"arrowL\"}\n                            style={{ color: \"black\", marginBottom: \"10px\" }}\n                            onClick={goToPreviousPage}\n                          ></CustomizedButtons>\n                          <Document\n                            file={{ data: review.pdfDoc }}\n                            onLoadSuccess={onDocumentLoadSuccess}\n                          >\n                            <Page pageNumber={pageNumber} scale={scale} />\n                          </Document>\n                          <CustomizedButtons\n                            model={\"arrow\"}\n                            style={{ color: \"black\", marginBottom: \"10px\" }}\n                            onClick={goToNextPage}\n                          ></CustomizedButtons>\n                        </Stack>\n                      )}{\" \"}\n                    </CardContent>\n                  </CustomizedCard>\n                </TabPanel>\n              ))}\n            </div>\n          </CustomizedContainer>\n        </>\n      )}\n    </CustomizedBody>\n  );\n}\n\nexport default StudentPeerReviewResultsDisplay;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/pages/Student/StudentResultPage.js",["773","774","775","776","777","778","779","780","781","782","783","784"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport { getResultsByStudent } from \"../../axios/APIRequests\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n\nconst demoData = [\n  {\n    name: \"Peer Review 1\",\n    date: \"10/07/21\",\n    type: \"Completed\",\n    deadline: \"10/01/21\",\n  },\n  {\n    name: \"Peer Review 2\",\n    date: \"11/07/21\",\n    type: \"Upcoming\",\n    deadline: \"10/01/21\",\n  },\n  {\n    name: \"Peer Review 3\",\n    date: \"13/07/21\",\n    type: \"Upcoming\",\n    deadline: \"10/01/21\",\n  },\n  {\n    name: \"Peer Review 4\",\n    date: \"12/07/21\",\n    type: \"Completed\",\n    deadline: \"10/01/21\",\n  },\n];\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction StudentResultPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [filterType, setFilterType] = useState(\"All\");\n  const [items, setItems] = useState(demoData);\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState();\n  const [courseNames, setCourseNames] = React.useState([]);\n\n  useEffect(() => {\n    var courseNameLists = [];\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course) => {\n        courseNameLists.push(course.code);\n      });\n      setCourseNames(courseNameLists);\n      console.log(\"`loading`\");\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getResultsByStudent()\n      .then((value) => {\n        console.log(value);\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    console.log(filterType);\n    const filteredItems = demoData.filter((item) => {\n      return item.type == filterType || filterType === \"All\";\n    });\n    setItems(filteredItems);\n  }, [filterType]);\n  return (\n    <CustomizedBody bg={bg}\n    >\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            CourseResults\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              <Grid container sx={{ marginBottom: \"20px\" }}>\n                <Grid item xs={8}>\n                  <Typography\n                    style={{\n                      display: \"flex\",\n                      textAlign: \"center\",\n                      fontWeight: \"600\",\n                    }}\n                    variant=\"h6\"\n                    component=\"div\"\n                  >\n                    Results\n                  </Typography>\n                </Grid>\n              </Grid>\n              <div>\n                <CustomizedTabs\n                  type3\n                  setTab={setTab}\n                  value={tab}\n                  fullWidth={\"fullWidth\"}\n                  labels={courseNames}\n                ></CustomizedTabs>\n                {courses.map((course, id) => (\n                  <TabPanel value={tab} index={id}>\n                    <CustomizedCard>\n                      <CardContent>\n                        {course.assignments.map((assignment) => (\n                          <>\n                            {!assignment.draft && (\n                              <>\n                                {assignment.averageScore !== -1 ? (\n                                  <ListItem\n                                    button\n                                    divider\n                                    onClick={() =>\n                                      history.push(\n                                        \"/studentpeerreviewresultsdisplay\",\n                                        {\n                                          assignmentID: assignment.assignmentID,\n                                        }\n                                      )\n                                    }\n                                    secondaryAction={\n                                      <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"delete\"\n                                      >\n                                        <BsArrowRightCircle />\n                                      </IconButton>\n                                    }\n                                  >\n                                    <ListItemText\n                                      primary={`${assignment.title}`}\n                                    />\n                                    <ListItemText primary={\"Completed\"} />\n                                    <ListItemText\n                                      sx={{\n                                        display: \"flex\",\n                                        justifyContent: \"flex-end\",\n                                      }}\n                                      primary={\n                                        \"Score: \" + `${Math.round(assignment.averageScore)}`\n                                      }\n                                    />\n                                  </ListItem>\n                                ) : (\n                                  <ListItem\n                                    button\n                                    divider\n                                    disabled\n                                    secondaryAction={\n                                      <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"delete\"\n                                      >\n                                        <BsArrowRightCircle />\n                                      </IconButton>\n                                    }\n                                  >\n                                    <ListItemText\n                                      primary={`${assignment.title}`}\n                                    />\n                                    <ListItemText primary={\"In process\"} />\n                                  </ListItem>\n                                )}\n                              </>\n                            )}\n                          </>\n                        ))}\n                      </CardContent>\n                    </CustomizedCard>\n                  </TabPanel>\n                ))}\n              </div>\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default StudentResultPage;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/features/userSlice.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedBody.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedContainer.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedButtons.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedCard.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/Loading.js",["785","786"],"import React from \"react\";\n// @mui components\n\nimport { styled } from \"@mui/material/styles\";\nimport logo from \"../images/logo.png\";\n\n// styled components\nimport LoadingStyle from \"../styles/LoadingStyle\";\n\nimport CustomizedContainer from \"../components/CustomizedContainer\";\nimport CustomizedCard from \"../components/CustomizedCard\";\nimport { CircularProgress } from \"@mui/material\";\n\nfunction Loading({ history, error }) {\n  const loading = LoadingStyle();\n\n  return (\n    <CustomizedContainer>\n      <CustomizedCard>\n        <div className={loading.box}>\n          <img className={loading.logo} src={`${logo}`} />\n          <div>{error}</div>\n          <CircularProgress className={loading.loading}></CircularProgress>\n        </div>\n      </CustomizedCard>\n    </CustomizedContainer>\n  );\n}\n\nexport default Loading;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedDivider.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/PDFhandling/PDFReader.js",["787"],"import React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport PDFControlBar from './PDFControlBar';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst PDFReader = () => {\n  const [scale, setScale] = useState(1.0);\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  // for onchange event\n  const [pdfFile, setPdfFile]=useState(null);\n  const [pdfFileError, setPdfFileError]=useState('');\n\n  // for submit event\n  const [viewPdf, setViewPdf]=useState(null);\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n  }\n  const fileType=['application/pdf'];\n  const handlePdfFileChange=(e)=>{\n    let selectedFile=e.target.files[0];\n    if(selectedFile){\n      if(selectedFile&&fileType.includes(selectedFile.type)){\n        let reader = new FileReader();\n            reader.readAsDataURL(selectedFile);\n            reader.onloadend = (e) =>{\n              setPdfFile(e.target.result);\n              setPdfFileError('');\n            }\n      }\n      else{\n        setPdfFile(null);\n        setPdfFileError('Please select valid pdf file');\n      }\n    }\n    else{\n      console.log('select your file');\n    }\n  }\n  const handlePdfFileSubmit=(e)=>{\n    e.preventDefault();\n    if(pdfFile!==null){\n      setViewPdf(pdfFile);\n    }\n    else{\n      setViewPdf(null);\n    }\n  }\n  return (\n    <div>\n      <form onSubmit={handlePdfFileSubmit}>\n        <input type=\"file\" className='form-control'\n          required onChange={handlePdfFileChange}\n        />\n        {pdfFileError&&<div className='error-msg'>{pdfFileError}</div>}\n        <br></br>\n        <button type=\"submit\" >\n          Preview\n        </button>\n      </form>\n      {viewPdf&&<>\n        <PDFControlBar\n          scale={scale}\n          setScale={setScale}\n          numPages={numPages}\n          pageNumber={pageNumber}\n          setPageNumber={setPageNumber}\n          file={viewPdf}\n        />\n        <Document\n          file={viewPdf}\n          onLoadSuccess={onDocumentLoadSuccess}\n        >\n          <Page pageNumber={pageNumber} scale={scale} />\n        </Document>\n      </>}\n      \n    </div>\n  );\n};\n\nexport default PDFReader;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/NavBar/NavBarLogin.js",["788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// @mui components\nimport { makeStyles } from \"@mui/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Badge from \"@mui/material/Badge\";\nimport { styled } from \"@mui/material/styles\";\nimport logo from \"../../images/logo.png\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\n// styled components\nimport NavBarStyle from \"../../styles/NavBarStyle\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser, setUser } from \"../../features/userSlice\";\nimport { whiteColor, darkColor } from \"../../styles/Style\";\nimport CustomizedContainer from \"../CustomizedContainer\";\nimport { Grid, Stack, Button, Menu, MenuItem, Collapse } from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nfunction NavBar({ history }) {\n\n  const nav = NavBarStyle();\n\n  return (\n    <div className={nav.root}>\n      <AppBar\n        style={{\n          backgroundColor: whiteColor,\n          color: darkColor,\n          flexDirection: \"row\",\n        }}\n        className={nav.appBar}\n      >\n        <CustomizedContainer>\n          <Grid\n            container\n            rowSpacing={2}\n            sx={{ display: \"flex\", alignItems: \"center\" }}\n          >\n            <Grid item xs={2}>\n                <img className={nav.logo} src={`${logo}`} />\n\n            </Grid>\n          </Grid>\n        </CustomizedContainer>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/NavBar/NavBar.js",["804","805","806","807"],"import KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { Button, Collapse, Grid, Stack } from \"@mui/material\";\nimport AppBar from \"@mui/material/AppBar\";\nimport React from \"react\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { selectUser, selectUserName, setUser } from \"../../features/userSlice\";\nimport professorLogo from \"../../images/professor_logo.png\";\nimport studentLogo from \"../../images/student_logo.png\";\n// styled components\nimport NavBarStyle from \"../../styles/NavBarStyle\";\nimport { darkColor, whiteColor } from \"../../styles/Style\";\nimport CustomizedContainer from \"../CustomizedContainer\";\nfunction NavBar({ history }) {\n  const dispatch = useDispatch();\n  const nav = NavBarStyle();\n  const getUser = useSelector(selectUser);\n  const getUserName = useSelector(selectUserName);\n  const { user, isAuthenticated, role } = getUser;\n  const handleLogOut = () => {\n    dispatch(setUser());\n  };\n  const [dropdown, setDropdown] = React.useState(false);\n  const handleSignOut = () => {\n    handleLogOut();\n    sessionStorage.clear();\n  };\n  const handleClick = () => {\n    setDropdown(!dropdown);\n  };\n  return (\n    <div className={nav.root}>\n      <AppBar\n        style={{\n          backgroundColor: whiteColor,\n          color: darkColor,\n          flexDirection: \"row\",\n        }}\n        className={nav.appBar}\n      >\n        <CustomizedContainer>\n          <Grid\n            container\n            rowSpacing={2}\n            sx={{ display: \"flex\", alignItems: \"center\" }}\n          >\n            \n            {user.role === \"professor\" ? (\n              <>\n              <Grid item xs={2}>\n              <Link\n                to=\"/professorhome\"\n                style={{ textDecoration: \"none\", color: \"#000\" }}\n              >\n                <img className={nav.logo} src={`${professorLogo}`} />\n              </Link>\n            </Grid>\n              <Grid\n                item\n                container\n                xs={8}\n                rowSpacing={2}\n                sx={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <Stack direction=\"row\" spacing={3} sx={{ paddingTop: \"16px\" }}>\n                  <Link\n                    to=\"/course\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <Stack\n                      direction=\"row\"\n                      spacing={1}\n                      sx={{ display: \"flex\", alignItems: \"center\" }}\n                      className={nav.link}\n                    >\n                      <div>Courses & Assignments</div>\n                      <AiOutlinePlusCircle />\n                    </Stack>\n                  </Link>\n                  <Link\n                    to=\"/courseresult\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <div className={nav.link}>Quality Check</div>\n                  </Link>\n                  <Link\n                    to=\"/studentinfoview\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <div className={nav.link}>Students & Teams</div>\n                  </Link>\n                </Stack>\n              </Grid>\n              </>\n            ) : (\n              <>\n              <Grid item xs={2}>\n              <Link\n                to=\"/studenthome\"\n                style={{ textDecoration: \"none\", color: \"#000\" }}\n              >\n                <img className={nav.logo} src={`${studentLogo}`} />\n              </Link>\n            </Grid>\n              <Grid\n                item\n                container\n                xs={8}\n                rowSpacing={2}\n                sx={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <Stack direction=\"row\" spacing={3} sx={{ paddingTop: \"16px\" }}>\n                  <Link\n                    to=\"/seeallassignment\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <Stack\n                      direction=\"row\"\n                      spacing={1}\n                      sx={{ display: \"flex\", alignItems: \"center\" }}\n                      className={nav.link}\n                    >\n                      <div>Assignments</div>\n                      <AiOutlinePlusCircle />\n                    </Stack>\n                  </Link>\n                  <Link\n                    to=\"/studentresults\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <div className={nav.link}>Results</div>\n                  </Link>\n                  <Link\n                    to=\"/studentteams\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <div className={nav.link}>Teams </div>\n                  </Link>\n                </Stack>\n              </Grid>\n              </>\n            )}\n\n            <Grid\n              item\n              container\n              xs={2}\n              rowSpacing={2}\n              sx={{ display: \"flex\", justifyContent: \"center\" }}\n            >\n              <Stack\n                direction=\"column\"\n                spacing={3}\n                sx={{ paddingTop: \"16px\", position: \"relative\" }}\n              >\n                <Stack direction=\"row\">\n                  <Button\n                    onClick={handleClick}\n                    sx={{ color: \"#000\",textTransform: \"unset\",width: \"130px\" }}\n                    endIcon={<KeyboardArrowDownIcon />}\n                  >\n                    {getUserName}\n                  </Button>\n                </Stack>\n                <Collapse\n                  in={dropdown}\n                  timeout=\"auto\"\n                  unmountOnExit\n                  sx={{ position: \"absolute\", top: \"50px\" }}\n                >\n                  <Link\n                    to=\"/login\"\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\n                  >\n                    <Button\n                      variant=\"contained\"\n                      className={nav.link}\n                      sx={{ width: \"130px\" }}\n                      onClick={handleSignOut}\n                    >\n                      Sign out\n                    </Button>\n                  </Link>\n                </Collapse>\n              </Stack>\n            </Grid>\n          </Grid>\n        </CustomizedContainer>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/axios/APIRequests.js",["808","809","810","811","812"],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedTabs.js",["813","814","815","816","817"],"import React from \"react\";\n\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n// @material-ui/core components\nimport { styled } from \"@mui/material/styles\";\nimport { Tabs, Tab, Typography, Box } from \"@mui/material\";\n// core components\nimport TabStyle from \"../styles/TabStyle\";\n\nconst StyledTabs = styled((props) => (\n  <Tabs\n    {...props}\n    TabIndicatorProps={{ children: <span className=\"MuiTabs-indicatorSpan\" /> }}\n  />\n))({\n  \"& .MuiTabs-indicator\": {\n    display: \"flex\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \n  },\n  \"& .MuiTabs-indicatorSpan\": {\n    width: \"100%\",\n    borderRadius: \"10px 10px 0 0\",\n    backgroundColor: \"#347DEB\",\n  },\n});\n\nconst StyledTab = styled((props) => <Tab disableRipple {...props} />)(\n  ({ theme }) => ({\n    textTransform: \"none\",\n    fontWeight: theme.typography.fontWeightRegular,\n    fontSize: theme.typography.pxToRem(15),\n    marginRight: theme.spacing(0.5),\n    borderRadius: \"10px 10px 0 0\",\n    width:\"200px\",\n    color: \"#000\",\n    fontWeight: \"600\",\n    zIndex: 1,\n    outline: \"none\",\n    // borderRadius: \"10px 10px 0 0\",\n    backgroundColor: \"rgba(207, 225, 255, 1)\",\n    \"&.Mui-selected\": {\n      color: \"#fff\",\n      backgroundColor: \"rgba(207, 225, 255, 0.1)\",\n    },\n    \"&.Mui-focusVisible\": {\n      backgroundColor: \"rgba(100, 95, 228, 1)\",\n    },\n  })\n);\nconst CustomizedTabs = React.forwardRef((props, ref) => {\n  const {\n    model,\n    fullWidth,\n    type1,\n    type2,\n    type3,\n    labels,\n    children,\n    setTab,\n    tab,\n    ...rest\n  } = props;\n\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n  };\n  // Styles\n  const classes = TabStyle();\n  const tabClasses = classNames({\n    [classes.type1]: type1,\n    [classes.type2]: type2,\n    [classes.type3]: type3,\n    [classes.root]: true,\n  });\n\n  return (\n    <StyledTabs\n      value={tab}\n      variant={fullWidth}\n      onChange={handleChange}\n      aria-label=\"styled tabs example\"\n      {...rest}\n      ref={ref}\n      className={tabClasses}\n    >\n      {labels.map(label => {\n        return <StyledTab label= {label}/>\n      }) }\n    </StyledTabs>\n  );\n});\nCustomizedTabs.propTypes = {\n  value: PropTypes.any,\n  setValue: PropTypes.func,\n  type1: PropTypes.bool,\n  type1: PropTypes.bool,\n  type1: PropTypes.bool,\n};\nexport default CustomizedTabs;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedPdfUploader.js",["818","819","820"],"import React, { useState , useEffect} from \"react\";\nimport { Stack, Typography } from \"@mui/material\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n// style\nimport ButtonStyle from \"../styles/ButtonStyle\";\n\nfunction CustomizedPdfUploader(props) {\n  const { id, pdfFileName, setPdfFileName, setPdfFile, multiplePdf, ...rest } =\n    props;\n\n  // Styles\n  const classes = ButtonStyle();\n\n  const inputStyleClasses = classNames({\n    [classes.displayNone]: true,\n  });\n\n  const uploadBtnClasses = classNames({\n    [classes.type1]: true,\n    [classes.height1]: true,\n    [classes.root]: true,\n  });\n\n  //=========== Handle Submission\n  const [pdfFileError, setPdfFileError] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n\n  useEffect(() => {\n    if (pdfFileName !== undefined) {\n      setFileName(pdfFileName);\n    }\n  }, [pdfFileName]);\n\n  const fileType = [\"application/pdf\"];\n  const handlePdfFileChange = (e) => {\n    let arrayPdfFiles = [];\n    for (let i = 0; i < e.target.files.length; i++) {\n      let selectedFile = e.target.files[i];\n      if (selectedFile) {\n        if (selectedFile && fileType.includes(selectedFile.type)) {\n          setFileName(selectedFile.name);\n           \n          if(pdfFileName !== undefined)\n          {\n             \n              setPdfFileName(selectedFile.name);\n          }\n        \n        \n          let reader = new FileReader();\n          //reader.readAsDataURL(selectedFile);\n          reader.readAsArrayBuffer(selectedFile);\n          reader.onloadend = (e) => {\n            let unit8Array = new Int8Array(e.target.result);\n            let byteArray = unit8Array.toString().split(\",\").map(Number);\n           \n            if (multiplePdf) {\n              arrayPdfFiles = [...arrayPdfFiles, byteArray];\n              setPdfFile(arrayPdfFiles);\n              setPdfFileError(\"\");\n            } else {\n              setPdfFile(byteArray);\n              setPdfFileError(\"\");\n            }\n          };\n        } else {\n          setPdfFile(null);\n          setPdfFileError(\"Please select valid pdf file\");\n        }\n      } else {\n        console.log(\"select your file\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Stack direction=\"row\" spacing={3} alignItems=\"center\">\n        {multiplePdf === true ? (\n          <input\n            type=\"file\"\n            id={id}\n            accept=\"application/pdf\"\n            class=\"inputfile\"\n            multiple\n            className={inputStyleClasses}\n            onChange={handlePdfFileChange}\n          />\n        ) : (\n          <input\n            type=\"file\"\n            id={id}\n            accept=\"application/pdf\"\n            class=\"inputfile\"\n            className={inputStyleClasses}\n            onChange={handlePdfFileChange}\n          />\n        )}\n\n        <label for={id}>\n          <span id=\"file-name\" class=\"file-box\"></span>\n          <span class={uploadBtnClasses}>Upload PDF file</span>\n        </label>\n        <Typography\n          style={{\n            display: \"flex\",\n            textAlign: \"center\",\n            fontWeight: \"500\",\n          }}\n          variant=\"body1\"\n          component=\"div\"\n        >\n          {fileName}\n        </Typography>\n      </Stack>\n    </div>\n  );\n\n\n}\n  CustomizedPdfUploader.propTypes = {\n    multiplePdf: PropTypes.bool,\n  };\nexport default CustomizedPdfUploader;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/utils/byteArrayToPDF.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedTextField.js",["821","822","823","824"],"import React from \"react\";\n\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n// @material-ui/core components\nimport { Box, TextField } from \"@mui/material\";\n// core components\nimport ButtonStyle from \"../styles/ButtonStyle\";\n\nconst CustomizedTextField = React.forwardRef((props, ref) => {\n  const {\n    text,\n    value,\n    handleTextFieldChange,\n    comments,\n    isDisabled,\n    number,\n    children,\n    ...rest\n  } = props;\n  var defaultValue = \"\";\n  if (value) {\n    defaultValue = value;\n  }\n\n  // ===== Handle Comments ============\n  const handleTextField = (event) => {\n    event.preventDefault();\n    handleTextFieldChange(event.target.value);\n  };\n\n  // Styles\n  const classes = ButtonStyle();\n  //const classes = makeComponentStyles();\n\n  return (\n    <Box>\n      <>\n        {\" \"}\n        {number ? (\n          <TextField\n            disabled={isDisabled}\n            sx={{ bgcolor: \"#fff\", width: \"100px\" }}\n            label={children}\n            id=\"outlined-size-small\"\n            size=\"small\"\n            type=\"number\"\n            InputProps={{ inputProps: { min: 0, max: 10 } }}\n            onChange={handleTextField}\n          />\n\n\n        ) : (\n          <>\n            {comments ? (\n              <TextField\n                sx={{ bgcolor: \"#fff\" }}\n                label={children}\n                id=\"outlined-size-small\"\n                size=\"small\"\n                multiline\n                maxRows={4}\n                onChange={handleTextField}\n              />\n            ) : (\n              <TextField\n                sx={{ bgcolor: \"#fff\" }}\n                label={children}\n                id=\"outlined-size-small\"\n                size=\"small\"\n                value={defaultValue}\n                onChange={handleTextField}\n              />\n            )}\n          </>\n        )}\n      </>\n    </Box>\n  );\n});\nCustomizedTextField.propTypes = {};\nexport default CustomizedTextField;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/TabStyle.js",["825","826","827"],"import { makeStyles } from '@mui/styles';\nimport { secondaryColor, primaryColor, darkColor, blueColor, greenColor, purpleColor } from \"./Style\";\nconst TabStyle = makeStyles((theme) => ({\n  root: {\n\n    fontWeight: \"600\",\n    color: \"#fff\",\n    \"& .MuiTabs-indicator\": {\n      \n        display: \"flex\",\n        height: \"100%\",\n        justifyContent: \"center\",\n        backgroundColor: \"transparent\",\n      },\n  },\n  fullwidth: {\n    width: \"100%\",\n  },\n  type1: {\n    \"& .MuiTabs-indicatorSpan\": {\n      backgroundColor: blueColor,\n    },\n  },\n  type2: {\n    \"& .MuiTabs-indicatorSpan\": {\n      backgroundColor: purpleColor,\n    },\n  },\n  type3: {\n    \"& .MuiTabs-indicatorSpan\": {\n      backgroundColor: greenColor,\n    },\n  },\n}));\n\nexport default TabStyle;","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/Style.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/NavBarStyle.js",["828","829","830","831"],"import { makeStyles } from \"@mui/styles\";\nimport { secondaryColor, primaryColor, fontColor, grayColor, blueColor } from \"./Style\";\nconst NavBarStyle = makeStyles((theme) => ({\n  root: {\n    flexGrow: \"1\"\n  },\n  appBar: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    border: \"0\",\n    borderRadius: \"3px\",\n    marginBottom: \"20px\",\n    color: \"#f11111\",\n    width: \"100%\",\n    height: \"80px\",\n    backgroundColor: \"red\",\n    // boxShadow:\n    //   \"0 4px 18px 0px rgba(0, 0, 0, 0.12), 0 7px 10px -5px rgba(0, 0, 0, 0.15)\",\n    transition: \"all 150ms ease 0s\",\n    alignItems: \"center\",\n    flexFlow: \"collumn nowrap\",\n    justifyContent: \"start\",\n    position: \"fixed\",\n    zIndex: \"2\",\n  },\n  logo: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n    width: \"7em\",\n  },\n  link: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    '&:hover': {\n      color: blueColor,\n  },\n  },\n}));\n\nexport default NavBarStyle;","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/PDFhandling/PDFControlBar.js",["832","833","834","835","836"],"import { Grid } from '@mui/material';\nimport React from 'react';\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nconst ControlPanel = (props) => {\n  const { file, pageNumber, numPages, setPageNumber, scale, setScale } = props;\n\n  const isFirstPage = pageNumber === 1;\n  const isLastPage = pageNumber === numPages;\n\n  const firstPageClass = isFirstPage ? \"disabled\" : \"clickable\";\n  const lastPageClass = isLastPage ? \"disabled\" : \"clickable\";\n\n  const goToFirstPage = () => {\n    if (!isFirstPage) setPageNumber(1);\n  };\n  const goToPreviousPage = () => {\n    if (!isFirstPage) setPageNumber(pageNumber - 1);\n  };\n  const goToNextPage = () => {\n    if (!isLastPage) setPageNumber(pageNumber + 1);\n  };\n  const goToLastPage = () => {\n    if (!isLastPage) setPageNumber(numPages);\n  };\n\n  const onPageChange = (e) => {\n    const { value } = e.target;\n    setPageNumber(Number(value));\n  };\n\n  const isMinZoom = scale < 0.6;\n  const isMaxZoom = scale >= 2.0;\n\n  const zoomOutClass = isMinZoom ? \"disabled\" : \"clickable\";\n  const zoomInClass = isMaxZoom ? \"disabled\" : \"clickable\";\n\n  const zoomOut = () => {\n    if (!isMinZoom) setScale(scale - 0.1);\n  };\n\n  const zoomIn = () => {\n    if (!isMaxZoom) setScale(scale + 0.1);\n  };\n\n  return (\n    <div style={{ marginBottom: \"10px\" }}>\n      <div\n        style={{\n          padding: \"1px\",\n        }}\n      >\n        <CustomizedButtons\n          type3\n          style={{ marginBottom: \"10px\" }}\n          onClick={goToFirstPage}\n        >\n          first page\n        </CustomizedButtons>\n\n        <CustomizedButtons\n          type3\n          model={\"arrowL\"}\n          style={{ marginBottom: \"10px\" }}\n          onClick={goToPreviousPage}\n        ></CustomizedButtons>\n        <span style={{ marginBottom: \"10px\" }}>\n          Page{\" \"}\n          <input\n            style={{ marginBottom: \"10px\" }}\n            name=\"pageNumber\"\n            type=\"number\"\n            min={1}\n            max={numPages || 1}\n            value={pageNumber}\n            onChange={onPageChange}\n          />{\" \"}\n          of {numPages}\n        </span>\n        <CustomizedButtons\n          type3\n          model={\"arrow\"}\n          style={{ marginBottom: \"10px\" }}\n          onClick={goToNextPage}\n        ></CustomizedButtons>\n        <CustomizedButtons\n          type3\n          style={{ marginBottom: \"10px\" }}\n          onClick={goToLastPage}\n        >\n          last page\n        </CustomizedButtons>\n      </div>\n      <div>\n        <CustomizedButtons\n          type3\n          style={{ marginBottom: \"10px\" }}\n          onClick={zoomOut}\n        >\n          zoom out\n        </CustomizedButtons>\n        <div style={{ marginBottom: \"10px\", paddingLeft: \"10px\" }}>\n          <span>{(scale * 100).toFixed()}%</span>\n        </div>\n        <CustomizedButtons\n          type3\n          style={{ marginBottom: \"10px\" }}\n          onClick={zoomIn}\n        >\n          zoom in\n        </CustomizedButtons>\n      </div>\n      <div>\n        <CustomizedButtons\n          type2\n          model={\"download\"}\n          style={{ marginBottom: \"10px\" }}\n          href={file}\n          download={true}\n          title=\"download\"\n        >\n          {\" \"}\n          Download PDF\n        </CustomizedButtons>\n      </div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default ControlPanel;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/DividerStyle.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/LoadingStyle.js",["837","838"],"import { makeStyles } from \"@mui/styles\";\nimport { blueColor, primaryColor, darkColor } from \"./Style\";\nconst LoadingStyle = makeStyles((theme) => ({\n  box: {\n    display: \"flex\",\n    height: \"300px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  }, \n  logo: {\n    width:\"300px\",\n    marginBottom: \"20px\"\n  },\n  loading: {\n    color: blueColor\n  },\n}));\n\nexport default LoadingStyle;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/CardStyle.js",["839","840","841"],"import { makeStyles } from \"@mui/styles\";\nimport { secondaryColor, primaryColor, darkColor } from \"./Style\";\nconst CardStyle = makeStyles((theme) => ({\n  root: {\n    overflow: \"hidden\",\n    p: 1,\n    border: \"3px solid #cfe1ff\",\n    borderRadius: \"10px\",\n  },\n}));\n\nexport default CardStyle;","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/ButtonStyle.js",["842"],"import { makeStyles } from '@mui/styles';\nimport { primaryColor, darkColor, whiteColor, grayColor } from \"./Style\";\nconst ButtonStyle = makeStyles((theme) => ({\n  root: {\n    minHeight: \"auto\",\n    minWidth: \"auto\",\n    borderRadius: \"50px\",\n    textTransform: \"unset\",\n    fontWeight: \"600\",\n    padding: \"5px 15px\",\n    height: \"42px\",\n    display: \"flex\",\n    textAlign: \"center\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    cursor: \"pointer\"\n  },\n  displayNone:{\n    display : \"none\",\n  },\n  fullwidth: {\n    width: \"100%\"\n  },\n  height1: {\n    height: \"33px\",\n  },\n  height2: {\n    height: \"42px\",\n  },\n  height3: {\n    height: \"26px\",\n  },\n  type1: {\n    backgroundColor: darkColor,\n\n    color: whiteColor,\n    border: \"1px solid #000000\",\n    \"&:hover, &.Mui-focusVisible\": { backgroundColor: \"#222\" }\n  },\n  type2: {\n    backgroundColor: \"transparent\",\n    color: darkColor,\n    border: \"1px solid #000000\"\n  },\n  type3: {\n    backgroundColor: grayColor,\n    color: darkColor,\n  },\n  type4: {\n    backgroundColor: \"transparent\",\n    color: darkColor,\n  },\n}));\n\nexport default ButtonStyle;","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedRadios.js",["843","844","845","846","847","848","849","850","851","852","853"],"import React, {useState} from 'react';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup, { useRadioGroup } from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { secondaryColor, primaryColor, darkColor, blueColor, greenColor, purpleColor } from \"../styles/Style\";\nimport { styled } from '@mui/material/styles';\nimport CustomizedTextField from './CustomizedTextField';\n\n\nexport default function CustomizedRadios({type, filterType, setFilterType}) {\n  const handleChange = (event) => {\n    setFilterType(event.target.value);\n    console.log(event.target.value)\n   \n  };\n  return (\n    <FormControl component=\"fieldset\">\n      <RadioGroup\n        aria-label=\"gender\"\n        name=\"controlled-radio-buttons-group\"\n        value={filterType}\n        onChange={handleChange}\n        sx={{display: \"flex\", flexDirection: \"row\"}}\n      >\n      {type === \"radio1\" ? (<>\n        <FormControlLabel value=\"Draft\" control={<Radio />} label=\"Draft\" />\n        <FormControlLabel value=\"Active\" control={<Radio />} label=\"Active\" />\n        <FormControlLabel value=\"All\" control={<Radio />} label=\"All\" /></>) : <>\n        {type === \"radio2\" ? (<>\n          <FormControlLabel value=\"Needs Review\" control={<Radio />} label=\"Needs Review\" />\n        <FormControlLabel value=\"Completed\" control={<Radio />} label=\"Completed\" />\n        <FormControlLabel value=\"All\" control={<Radio />} label=\"All\" /></>) : <>\n        {type === \"radio3\" ? (<>\n        <FormControlLabel value=\"Upcoming\" control={<Radio />} label=\"Upcoming\" />\n        <FormControlLabel value=\"Completed\" control={<Radio />} label=\"Completed\" />\n        <FormControlLabel value=\"All\" control={<Radio />} label=\"All\" /></>) : <>\n        {type === \"radio4\" ? (<>\n        <FormControlLabel value=\"Independent\" control={<Radio />} label=\"Independent\" />\n        <FormControlLabel value=\"Randomized Teams\" control={<Radio />} label=\"Randomized Teams\" />\n        </>) : <>\n        \n      </>}\n      </>}\n      </>}\n      </>}\n      </RadioGroup>\n    </FormControl>\n  );\n}","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedSwitch.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/styles/ContainerStyle.js",["854","855","856"],"import { makeStyles } from \"@mui/styles\";\nimport { secondaryColor, primaryColor, darkColor } from \"./Style\";\nconst ContainerStyle = makeStyles((theme) => ({\n  containerFluid: {\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    width: \"100%\",\n  },\n\n  container: {\n    \"@media (min-width: 576px)\": {\n      maxWidth: \"540px\",\n    },\n    \"@media (min-width: 768px)\": {\n      maxWidth: \"720px\",\n    },\n    \"@media (min-width: 992px)\": {\n      maxWidth: \"960px\",\n    },\n    \"@media (min-width: 1200px)\": {\n      maxWidth: \"1100px\",\n    },\n  },\n}));\n\nexport default ContainerStyle;\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedModal.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedTables.js",["857","858","859","860","861","862","863","864","865","866","867","868","869","870","871"],"import React, {useState, useEffect} from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { primaryColor, darkColor, grayColor, greenColor, whiteColor, blueColor } from \"../styles/Style\";\nimport { borderRadius, Box } from \"@mui/system\";\n\nexport default function StickyHeadTable({jsonData}) {\n  console.log(jsonData)\n  const [arrayData, setarrayData] = useState([]);\n  useEffect(() => {\n      var result = [];\n      for(var i in jsonData){\n        var row = [];\n        for(var j in jsonData[i]){\n          row.push(jsonData[i][j]);\n        }\n        result.push(row)\n      }\n      setarrayData(result)\n  }, [jsonData])\n  console.log(arrayData)\n\n  const label_1 = [\n    { id: \"name\", label: \"Team Name\", align: \"center\", width: 20 },\n  ];\n  const label_2 = [\n    {\n      id: \"avggradereceived\",\n      label: \"Avg Grade RECEIVED\",\n      align: \"center\",\n      width: 20,\n    },\n  ];\n  const headers = arrayData.map((index, i) => {\n    return {\n      key: i,\n      id: index[0],\n      label: index[0],\n      width: 20,\n      align: \"center\",\n      format: (value) => value.toLocaleString(\"en-US\"),\n    };\n  });\n\n  const columns = label_1.concat(headers);\n  return (\n    <Box sx={{ width: \"100%\"}}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\n          <TableHead>\n            <TableRow >\n              {columns.map((column, indexCol) => {\n                let bgColor;\n                let color;\n                if (indexCol == columns.length - 1) {\n                  bgColor = greenColor\n                  color = whiteColor\n                }\n                else{\n                  bgColor = grayColor\n                  color = darkColor\n                }\n                return <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{\n                    width: \"10px\",\n                    height: \"10px\",\n                    border: \"0.01px solid #000\",\n                    backgroundColor: bgColor,\n                    color: color,\n                  }}\n                >\n                  {column.label}\n                </TableCell>\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {arrayData\n              .map((row, indexRow) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} style={{\n                    width: \"10px\",\n                    height: \"10px\"}}>\n                    {columns.map((column, indexCol) => {\n                      let value = row[indexCol];\n                      let bgColor;\n                      let color;\n                      {\n                        if(indexCol == indexRow + 1 || indexCol == 0 && indexRow != arrayData.length - 1){\n                          bgColor = primaryColor\n                        }\n                        else {\n                          if (indexCol == columns.length - 1 && indexRow != arrayData.length - 1) {\n                            bgColor = greenColor\n                            color = whiteColor\n                          }\n                          else {\n                            if (indexRow == arrayData.length - 1 && indexCol != columns.length - 1) {\n                              bgColor = blueColor\n                              color = whiteColor\n                            }\n                            else {\n                              bgColor = whiteColor\n                            }\n                          }\n                        }\n                      }\n                      return (\n                        <TableCell\n                          key={column.id}\n                          align={column.align}\n                          style={{\n                            width: \"10px\",\n                            height: \"10px\",\n                            color: color,\n                            backgroundColor: bgColor,\n                            border: \"0.01px solid #000\",\n                          }}\n                        >\n                          {value != 0 ? value : \"\"}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n","/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CSVUploader.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/SuccessfulNotification.js",[],"/home/ductran/guide-rest-client-reactjs/start/src/main/frontend/src/components/CustomizedCSVUploader.js",["872","873","874"],"import React, { useState } from \"react\";\nimport { Stack, Typography } from \"@mui/material\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n// style\nimport ButtonStyle from \"../styles/ButtonStyle\";\n\nfunction CustomizedCSVUploader(props) {\n  const { setCSVFile, multipleCSV, ...rest } = props;\n\n  // Styles\n  const classes = ButtonStyle();\n\n  const inputStyleClasses = classNames({\n    [classes.root]: true,\n    [classes.displayNone]: true,\n  });\n\n  const uploadBtnClasses = classNames({\n    [classes.type1]: true,\n    [classes.height3]: true,\n    [classes.root]: true,\n  });\n\n  //=========== Handle Submission\n  const [pdfFileError, setPdfFileError] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n\n  const fileType = [\"text/csv\"];\n  const handlePdfFileChange = (e) => {\n    let arrayPdfFiles = []\n    console.log(e.target.files)\n    for (let i = 0; i < e.target.files.length; i++) {\n      console.log(e.target.files[i]);\n      let selectedFile = e.target.files[i];\n      if (selectedFile) {\n        if (selectedFile && fileType.includes(selectedFile.type)) {\n          setFileName(selectedFile.name);\n          let reader = new FileReader();\n          //reader.readAsDataURL(selectedFile);\n          reader.readAsText(selectedFile);\n          reader.onloadend = (e) => {\n            //let unit8Array = new Uint8Array(e.target.result);\n            let text = e.target.result//unit8Array//.split(',')\n            var lines = text.toString().split(\"\\n\")\n            var result = [];\n            var headers=lines[0].split(\",\");\n            for(var i=1;i<lines.length-1;i++){\n\n              var obj = {};\n              var currentline=lines[i].split(\",\");\n              for(var j=0;j<headers.length;j++){\n                obj[headers[j]] = currentline[j];\n            }\n              result.push(obj);\n            }\n            \n            if(multipleCSV){\n              arrayPdfFiles = [...arrayPdfFiles,result]\n              setCSVFile(arrayPdfFiles);\n              setPdfFileError(\"\");\n            }\n            else{\n                setCSVFile(result);\n              setPdfFileError(\"\");\n            }\n            \n          };\n        } else {\n            setCSVFile(null);\n          setPdfFileError(\"Please select valid csv file\");\n        }\n      } else {\n        console.log(\"select your file\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Stack direction=\"row\" spacing={3}>\n        {multipleCSV === true ? (\n          <input\n            type=\"file\"\n            id=\"file\"\n            accept=\".csv\"\n            class=\"inputfile\"\n            multiple\n            className={inputStyleClasses}\n            onChange={handlePdfFileChange}\n          />\n        ) : (\n          <input\n            type=\"file\"\n            id=\"file\"\n            accept=\".csv\"\n            class=\"inputfile\"\n            className={inputStyleClasses}\n            onChange={handlePdfFileChange}\n          />\n        )}\n\n        <label for=\"file\">\n          <span id=\"file-name\" class=\"file-box\"></span>\n          <span class={uploadBtnClasses}>Upload CSV file</span>\n        </label>\n        <Typography\n          style={{\n            display: \"flex\",\n            textAlign: \"center\",\n            fontWeight: \"500\",\n          }}\n          variant=\"h6\"\n          component=\"div\"\n        >\n          {fileName}\n        </Typography>\n      </Stack>\n    </div>\n  );\n\n\n}\n  CustomizedCSVUploader.propTypes = {\n    multipleCSV: PropTypes.bool,\n  };\nexport default CustomizedCSVUploader;\n","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/index.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/reportWebVitals.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/App.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/app/store.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/routing/PrivateRoute.js",["875","876","877"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/routing/PublicRoute.js",["878","879","880","881","882"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/TestingPage.js",["883"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/AddCoursePage.js",["884","885","886","887","888","889","890","891","892","893","894"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/ProfessorCoursePage.js",["895","896","897","898","899","900","901","902","903","904"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { TiDelete } from \"react-icons/ti\";\nimport { MdDelete } from \"react-icons/md\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  Breadcrumbs,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedModal from \"../../components/CustomizedModal\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport {\n  getAssignmentsByProfessor,\n  deleteAssignmentByProfessor,\n} from \"../../axios/APIRequests\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction ProfessorCourse({ history }) {\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const [error, setError] = useState(\"\");\n  const { user, isAuthenticated, authLoading } = getUser;\n  const [filterType, setFilterType] = React.useState(\"All\");\n  const [courses, setCourses] = React.useState();\n  const [loading, setLoading] = React.useState(true);\n  const [tab, setTab] = React.useState(0);\n  const [courseNames, setCourseNames] = React.useState([]);\n  const [isAssignmentModalOpened, setIsAssignmentModalOpened] = useState(false);\n  const handleOpenAssignmentModal = () => setIsAssignmentModalOpened(true);\n  const handleCloseAssignmentModal = () => setIsAssignmentModalOpened(false);\n  const [deletedAssignmentID, setDeletedAssignmentID] = useState();\n  const handleGetAssignmentByProfessor = () => {\n    getAssignmentsByProfessor()\n      .then((value) => {\n        console.log(value);\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n        setError(err);\n      });\n  };\n  useEffect(() => {\n    var nameLists = [];\n    console.log(courses);\n    if (courses !== undefined) {\n      courses.map((course) => {\n        nameLists.push(course.code);\n      });\n      setCourseNames(nameLists);\n      setLoading(false);\n    }\n    return () => {\n      console.log(\"unmount\");\n    };\n  }, [courses]);\n  useEffect(() => {\n    handleGetAssignmentByProfessor();\n    return () => {\n      console.log(\"unmount\");\n    };\n  }, []);\n\n  const handleDeleteAssignment = () => {\n    deleteAssignmentByProfessor(deletedAssignmentID)\n      .then((value) => {\n        console.log(value);\n        handleGetAssignmentByProfessor();\n        handleCloseAssignmentModal(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Course\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading error={error} />\n          ) : (\n            <>\n              {courses.length === 0 ? (\n                <CustomizedCard>\n                  <CardContent>\n                    <Stack style={{ flex: 1 }} alignItems=\"center\">\n                      Please create a new course\n                    </Stack>\n                  </CardContent>\n                </CustomizedCard>\n              ) : (\n                <>\n                  <Grid container sx={{ marginBottom: \"20px\" }}>\n                    <Grid\n                      item\n                      xs={8}\n                      sx={{ display: \"flex\", alignItems: \"center\" }}\n                    >\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                          fontWeight: \"600\",\n                        }}\n                        variant=\"h6\"\n                        component=\"div\"\n                      >\n                        Courses and Assignments\n                      </Typography>\n                    </Grid>\n\n                    <Grid\n                      item\n                      xs={4}\n                      sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                    >\n                      <Stack direction=\"row\" spacing={2}>\n                        <CustomizedButtons\n                          type2\n                          model={\"add\"}\n                          onClick={() => history.push(\"/coursecreation\")}\n                        >\n                          Create Course\n                        </CustomizedButtons>\n                        <CustomizedButtons\n                          type1\n                          onClick={() => history.push(\"/studentinfoview\")}\n                        >\n                          View Student Info\n                        </CustomizedButtons>\n                      </Stack>\n                    </Grid>\n                  </Grid>\n                  <div>\n                    <CustomizedTabs\n                      type1\n                      setTab={setTab}\n                      tab={tab}\n                      fullWidth={\"fullWidth\"}\n                      labels={courseNames}\n                    ></CustomizedTabs>\n                    {courses.map((course, key) => {\n                      return (\n                        <TabPanel value={tab} index={key}>\n                          <CustomizedCard>\n                            <CardHeader\n                              sx={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"space-between\",\n                              }}\n                              title={\n                                <Grid container>\n                                  <Grid item xs={6}>\n                                    <CustomizedButtons\n                                      type2\n                                      model={\"add\"}\n                                      onClick={() =>\n                                        history.push(\"/assignmentcreation\", {\n                                          courseID: course.courseID,\n                                        })\n                                      }\n                                    >\n                                      Create New Assignment\n                                    </CustomizedButtons>\n                                  </Grid>\n                                  <Grid\n                                    item\n                                    xs={6}\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"flex-end\",\n                                    }}\n                                  >\n                                    <CustomizedButtons\n                                      type3\n                                      model={\"radio1\"}\n                                      fullwidth\n                                      filterType={filterType}\n                                      setFilterType={setFilterType}\n                                    >\n                                      Filter Assignment\n                                    </CustomizedButtons>\n                                  </Grid>\n                                </Grid>\n                              }\n                            ></CardHeader>\n                            <CardContent\n                              sx={{\n                                paddingTop: \"0\",\n                              }}\n                            >\n                              {course.assignments.map((assignment, key) => {\n                                return (\n                                  <>\n                                    {(filterType === \"All\" ||\n                                      (filterType === \"Draft\") ===\n                                        assignment.draft) && (\n                                      <ListItem\n                                        key={key}\n                                        button\n                                        divider\n                                        secondaryAction={\n                                          <IconButton edge=\"end\">\n                                            <MdDelete\n                                              style={{\n                                                color: \"red\",\n                                                size: \"1.5em\",\n                                              }}\n                                              onClick={() => {\n                                                handleOpenAssignmentModal();\n                                                setDeletedAssignmentID(\n                                                  assignment.assignmentID\n                                                );\n                                              }}\n                                            />\n                                          </IconButton>\n                                        }\n                                      >\n                                        <ListItemText\n                                          onClick={() => {\n                                            console.log(\"go\");\n                                            history.push(\"/assignmentdisplay\", {\n                                              assignmentID:\n                                                assignment.assignmentID,\n                                            });\n                                          }}\n                                          sx={{ fontWeight: \"800\" }}\n                                          primary={\n                                            <div\n                                              style={{\n                                                display: \"flex\",\n                                                justifyContent: \"space-between\",\n                                                alignItems: \"center\",\n                                              }}\n                                            >\n                                              <Typography\n                                                style={{\n                                                  display: \"flex\",\n                                                  alignItems: \"center\",\n                                                  fontWeight: \"600\",\n                                                }}\n                                                variant=\"body1\"\n                                                component=\"div\"\n                                              >\n                                                {assignment.title}\n                                              </Typography>\n                                              <Stack direction=\"row\">\n                                                <Typography\n                                                  style={{\n                                                    display: \"flex\",\n                                                    alignItems: \"center\",\n                                                    fontWeight: \"600\",\n                                                  }}\n                                                  variant=\"body1\"\n                                                  component=\"div\"\n                                                >\n                                                  Preview\n                                                </Typography>\n                                              </Stack>\n                                            </div>\n                                          }\n                                          secondary={\n                                            <Grid container>\n                                              <Grid\n                                                item\n                                                xs={12}\n                                                sx={{\n                                                  display: \"flex\",\n                                                  justifyContent:\n                                                    \"space-between\",\n                                                }}\n                                              >\n                                                <Typography\n                                                  variant=\"body2\"\n                                                  component=\"div\"\n                                                >\n                                                  Solution\n                                                </Typography>\n                                                <Typography\n                                                  variant=\"body2\"\n                                                  component=\"div\"\n                                                >\n                                                  Due Date:{\" \"}\n                                                  {new Date(\n                                                    assignment.solutionDueDateTime\n                                                  ).toLocaleString()}\n                                                </Typography>\n                                              </Grid>\n                                              <Grid\n                                                item\n                                                xs={12}\n                                                sx={{\n                                                  display: \"flex\",\n                                                  justifyContent:\n                                                    \"space-between\",\n                                                }}\n                                              >\n                                                <Typography\n                                                  variant=\"body2\"\n                                                  component=\"div\"\n                                                >\n                                                  Peer Review\n                                                </Typography>\n                                                <Typography\n                                                  variant=\"body2\"\n                                                  component=\"div\"\n                                                >\n                                                  Due Date:{\" \"}\n                                                  {new Date(\n                                                    assignment.peerReviewDueDateTime\n                                                  ).toLocaleString()}\n                                                </Typography>\n                                              </Grid>\n                                            </Grid>\n                                          }\n                                        />\n                                      </ListItem>\n                                    )}\n                                  </>\n                                );\n                              })}\n                            </CardContent>\n                          </CustomizedCard>\n                        </TabPanel>\n                      );\n                    })}\n                  </div>\n                </>\n              )}\n            </>\n          )}\n        </>\n        <CustomizedModal\n          modalType={\"assignment\"}\n          isAssignmentModalOpened={isAssignmentModalOpened}\n          handleCloseAssignmentModal={handleCloseAssignmentModal}\n          handleDeleteAssignment={handleDeleteAssignment}\n        />\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default ProfessorCourse;\n","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/ProfessorHomeDashboard.js",["905","906","907","908","909","910","911","912","913","914","915","916","917"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  Stack,\n  Divider,\n  List,\n  ListItem,\n  IconButton,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemButton,\n  ListItemIcon,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport { BiCheckCircle } from \"react-icons/bi\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\n\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedDivider from \"../../components/CustomizedDivider\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport {\n  getAssignmentsByProfessor,\n  getTeamsByProfessor,\n} from \"../../axios/APIRequests\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\n\nfunction CourseBar({ course, history }) {\n  return (\n    <Stack spacing={0}>\n      <CustomizedButtons\n        type3\n        fullwidth\n        model={\"arrow\"}\n        onClick={() => history.push(\"/course\")}\n      >\n        {`${course.title}, Section ${course.sectionNumber}, ${course.semester}`}\n      </CustomizedButtons>\n      <>\n        {course.assignments.length !== 0 ? (\n          <List dense={true} sx={{ flex: 1 }}>\n            {course.assignments.map((assignment) => (\n              <>\n                {!assignment.isSolutionCompleted && (\n                  <ListItem\n                    button\n                    justifyContent=\"space-between\"\n                    onClick={() =>\n                      history.push(\"/assignmentdisplay\", {\n                        assignmentID: assignment.assignmentID,\n                      })\n                    }\n                  >\n                    <ListItemText\n                      style={{ width: \"60%\" }}\n                      primary={\n                        <Typography\n                          component=\"span\"\n                          fontWeight=\"600\"\n                          variant=\"body2\"\n                        >\n                          {`${assignment.title} Solution`}\n                        </Typography>\n                      }\n                    />\n                    <ListItemText\n                      direction=\"row\"\n                      justifyContent=\"flex-end\"\n                      primary={`Due ${new Date(\n                        assignment.solutionDueDateTime\n                      ).toLocaleDateString()}`}\n                    />\n                  </ListItem>\n                )}\n                {!assignment.isPeerReviewCompleted && (\n                  <ListItem\n                    button\n                    onClick={() =>\n                      history.push(\"/assignmentdisplay\", {\n                        assignmentID: assignment.assignmentID,\n                      })\n                    }\n                  >\n                    <ListItemText\n                      primary={\n                        <Typography\n                          component=\"span\"\n                          fontWeight=\"600\"\n                          variant=\"body2\"\n                        >\n                          {`${assignment.title} Peer Review`}\n                        </Typography>\n                      }\n                    />\n                    <ListItemText\n                      primary={`Due ${new Date(\n                        assignment.peerReviewDueDateTime\n                      ).toLocaleDateString()}`}\n                    />\n                  </ListItem>\n                )}\n              </>\n            ))}\n          </List>\n        ) : (\n          <Stack alignItems=\"center\" p={2}>\n            No Assignment\n          </Stack>\n        )}\n      </>\n    </Stack>\n  );\n}\n\nfunction ProfessorHomeDashBoard({ history }) {\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState([]);\n\n  useEffect(() => {\n    console.log(courses);\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course, key) => {\n        if (course.assignments !== undefined) {\n          setLoading(false);\n        }\n      });\n    }\n  }, [courses]);\n\n  useEffect(() => {\n    getAssignmentsByProfessor()\n      .then((value) => {\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Home\n          </Typography>\n        </Breadcrumbs>\n        <Grid\n          container\n          spacing={3}\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={4.7}>\n            <CustomizedCard>\n              <CardHeader\n                sx={{ paddingBottom: \"8px\" }}\n                title={\n                  <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                    <ListItem>\n                      <ListItemIcon>\n                        <FiberManualRecordIcon\n                          sx={{ color: \"#347DEB\" }}\n                          fontSize=\"medium\"\n                        />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={\n                          <Typography\n                            component=\"span\"\n                            fontWeight=\"600\"\n                            variant=\"h6\"\n                          >\n                            Assignments by Course\n                          </Typography>\n                        }\n                      />\n                    </ListItem>\n                  </List>\n                }\n              ></CardHeader>\n              <CustomizedDivider\n                type1\n                sx={{ marginBottom: \"15px\" }}\n              ></CustomizedDivider>\n              <CardContent\n                sx={{\n                  paddingTop: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <>\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <Stack sx={{ flex: 1 }} spacing={1}>\n                      {courses.map((course, key) => {\n                        return (\n                          <CourseBar\n                            course={course}\n                            key={key}\n                            history={history}\n                          ></CourseBar>\n                        );\n                      })}\n                    </Stack>\n                  )}\n                </>\n              </CardContent>\n            </CustomizedCard>\n          </Grid>\n          <Grid item container spacing={3} xs={7.3}>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem\n                        secondaryAction={\n                          <CustomizedButtons\n                            type1\n                            height1\n                            onClick={() => {\n                              history.push(\"./courseresult\");\n                            }}\n                          >\n                            See All\n                          </CustomizedButtons>\n                        }\n                      >\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#0DC38D\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Quality Check\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  {loading === true ? (\n                    <CircularProgress\n                      className={loading.loading}\n                    ></CircularProgress>\n                  ) : (\n                    <List sx={{ width: \"100%\" }}>\n                      {courses.map((course, key) => {\n                        return (\n                          <>\n                            {course.assignments.length !== 0 ? (\n                              <>\n                                {course.assignments.map((assignment, key) => {\n                                  return (\n                                    <>\n                                      {assignment.reviewStage === true ? (\n                                        <ListItem\n                                          button\n                                          divider\n                                          onClick={() =>\n                                            history.push(\n                                              \"/studentpeerreviewqualitycheck\",\n                                              {\n                                                assignmentID:\n                                                  assignment.assignmentID,\n                                              }\n                                            )\n                                          }\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            sx={{ width: \"30%\" }}\n                                            primary={`${assignment.title} Peer Review`}\n                                          />\n                                          <ListItemText\n                                            sx={{\n                                              display: \"flex\",\n                                              justifyContent: \"center\",\n                                            }}\n                                            primary={`submissions closed ${new Date(\n                                              assignment.peerReviewDueDateTime\n                                            ).toLocaleString()}`}\n                                          />\n                                        </ListItem>\n                                      ) : (\n                                        <></>\n                                      )}\n                                      <ListItem\n                                        button\n                                        divider\n                                        onClick={() =>\n                                          history.push(\n                                            \"/studentsolutionqualitycheck\",\n                                            {\n                                              assignmentID:\n                                                assignment.assignmentID,\n                                            }\n                                          )\n                                        }\n                                        secondaryAction={\n                                          <IconButton edge=\"end\">\n                                            <BsArrowRightCircle />\n                                          </IconButton>\n                                        }\n                                      >\n                                        <ListItemText\n                                          sx={{ width: \"30%\" }}\n                                          primary={`${assignment.title} Solution`}\n                                        />\n                                        <ListItemText\n                                          sx={{\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                          }}\n                                          primary={`Due ${new Date(\n                                            assignment.solutionDueDateTime\n                                          ).toLocaleString()}`}\n                                        />\n                                      </ListItem>\n                                    </>\n                                  );\n                                })}\n                              </>\n                            ) : (\n                              <Stack sx={{ flex: 1 }} alignItems=\"center\">\n                                No Assignment\n                              </Stack>\n                            )}\n                          </>\n                        );\n                      })}\n                    </List>\n                  )}\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid item xs={12}>\n              <CustomizedCard>\n                <CardHeader\n                  sx={{ paddingBottom: \"8px\" }}\n                  title={\n                    <List dense={true} sx={{ padding: \"0\", margin: \"0\" }}>\n                      <ListItem>\n                        <ListItemIcon>\n                          <FiberManualRecordIcon\n                            sx={{ color: \"#6F40DC\" }}\n                            fontSize=\"medium\"\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography\n                              component=\"span\"\n                              fontWeight=\"600\"\n                              variant=\"h6\"\n                            >\n                              Manage Students & Teams by Course\n                            </Typography>\n                          }\n                        />\n                      </ListItem>\n                    </List>\n                  }\n                ></CardHeader>\n                <CustomizedDivider\n                  type1\n                  sx={{ marginBottom: \"15px\" }}\n                ></CustomizedDivider>\n                <CardContent\n                  sx={{\n                    paddingTop: 0,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <>\n                    {loading === true ? (\n                      <CircularProgress\n                        className={loading.loading}\n                      ></CircularProgress>\n                    ) : (\n                      <Grid container spacing={2}>\n                        {courses.map((course, key) => {\n                          return (\n                            <Grid item xs={6}>\n                              <CustomizedButtons\n                                type2\n                                fullwidth\n                                onClick={() => {\n                                  history.push(\"./studentinfoview\");\n                                }}\n                                model={\"arrow\"}\n                                key={key}\n                              >\n                                {`${course.code}, Section ${course.sectionNumber}, ${course.semester}`}\n                              </CustomizedButtons>\n                            </Grid>\n                          );\n                        })}\n                      </Grid>\n                    )}\n                  </>\n                </CardContent>\n              </CustomizedCard>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              <CustomizedButtons\n                type1\n                model={\"add\"}\n                onClick={() => history.push(\"/coursecreation\")}\n              >\n                Create a New Course\n              </CustomizedButtons>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default ProfessorHomeDashBoard;\n","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/AssignmentCreation.js",["918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/StudentInfoViewPage.js",["935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { MdOutlineCancel, MdTurnedInNot } from \"react-icons/md\";\nimport { MdDelete } from \"react-icons/md\";\nimport { IoIosArrowDropdown, IoIosArrowDropup } from \"react-icons/io\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport CustomizedModal from \"../../components/CustomizedModal\";\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Divider,\n  Box,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Stack,\n  TextField,\n  Modal,\n  Fade,\n  Collapse,\n  CircularProgress,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@mui/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\n\nimport Loading from \"../../components/Loading\";\nimport axios from \"axios\";\nimport CustomizedTextField from \"../../components/CustomizedTextField\";\nimport {\n  getTeamsByProfessor,\n  deleteStudentByProfessor,\n  deleteCourseByProfessor,\n  postNewStudentByProfessor,\n} from \"../../axios/APIRequests\";\n\nconst AddStudentBox = (props) => {\n  const {\n    classes,\n    handleAddStudent,\n    firstName,\n    lastName,\n    sID,\n    email,\n    setFirstName,\n    setLastName,\n    setSID,\n    setEmail,\n    handleCloseAddStudentBox,\n  } = props;\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"#EDEDED\",\n        borderRadius: \"10px\",\n        padding: \"15px\",\n      }}\n    >\n      <Grid container rowSpacing={1}>\n        <Grid item xs={12}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Typography\n              style={{\n                display: \"flex\",\n                textAlign: \"center\",\n                fontWeight: \"600\",\n              }}\n              variant=\"h6\"\n              component=\"div\"\n            >\n              Add Student to Course\n            </Typography>\n            <IconButton aria-label=\"delete\" onClick={handleCloseAddStudentBox}>\n              <MdOutlineCancel />\n            </IconButton>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <Stack\n            direction=\"row\"\n            spacing={3}\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <CustomizedTextField\n              value={firstName}\n              handleTextFieldChange={setFirstName}\n            >\n              First Name\n            </CustomizedTextField>\n            <CustomizedTextField\n              value={lastName}\n              handleTextFieldChange={setLastName}\n            >\n              Last Name\n            </CustomizedTextField>\n            <CustomizedTextField value={sID} handleTextFieldChange={setSID}>\n              Student ID\n            </CustomizedTextField>\n            <CustomizedTextField value={email} handleTextFieldChange={setEmail}>\n              Email\n            </CustomizedTextField>\n            <CustomizedButtons type1 height1 onClick={handleAddStudent}>\n              Add\n            </CustomizedButtons>\n          </Stack>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction StudentInfoViewPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [viewType, setViewType] = useState(\"Student List\");\n  const [isOpenedAddStudentBox, setIsOpenedAddStudentBox] = useState(false);\n  const [isCourseModalOpened, setIsCourseModalOpened] = useState(false);\n  const [isStudentModalOpened, setIsStudentModalOpened] = useState(false);\n  const [firstName, setFirstName] = useState();\n  const [lastName, setLastName] = useState();\n  const [sID, setSID] = useState();\n  const [email, setEmail] = useState();\n\n  const [deletedStudentID, setDeletedStudentID] = useState();\n\n  const handleOpenAddStudentBox = () => setIsOpenedAddStudentBox(true);\n  const handleCloseAddStudentBox = () => setIsOpenedAddStudentBox(false);\n  const handleOpenCourseModal = () => setIsCourseModalOpened(true);\n  const handleCloseCourseModal = () => setIsCourseModalOpened(false);\n  const handleOpenStudentModal = () => setIsStudentModalOpened(true);\n  const handleCloseStudentModal = () => setIsStudentModalOpened(false);\n  const [teamKeys, setTeamKeys] = useState({});\n\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n  const [loading, setLoading] = React.useState(true);\n  const [courses, setCourses] = React.useState();\n  const [courseNames, setCourseNames] = React.useState([]);\n  const handleGetTeamsByProfessor = () => {\n    getTeamsByProfessor()\n      .then((value) => {\n        console.log(value);\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  useEffect(() => {\n    var courseNameLists = [];\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course) => {\n        courseNameLists.push(course.code);\n      });\n      setCourseNames(courseNameLists);\n      console.log(\"`loading`\");\n      setLoading(false);\n    }\n  }, [courses]);\n\n  useEffect(() => {\n    handleGetTeamsByProfessor();\n  }, []);\n  const handleClick = (key) => () => {\n    setTeamKeys({ [key]: !teamKeys[key] });\n  };\n  const handleDeleteCourse = () => {\n    const deletedCourseID = courses[tab].courseID; //tab is the index of chosen course\n    deleteCourseByProfessor(deletedCourseID)\n      .then((value) => {\n        console.log(value);\n        handleCloseCourseModal(true);\n        handleGetTeamsByProfessor();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const handleDeleteStudent = () => {\n    console.log(deletedStudentID);\n    deleteStudentByProfessor(deletedStudentID)\n      .then((value) => {\n        console.log(value);\n        handleCloseStudentModal(true);\n        handleGetTeamsByProfessor();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const handleAddStudent = () => {\n    var newStudent = {\n      firstName: firstName,\n      lastName: lastName,\n      studentID: sID,\n      email: email,\n    };\n    var json = {\n      courseID: courses[tab].courseID,\n      student: newStudent,\n    };\n    const json_ = JSON.stringify(json);\n    postNewStudentByProfessor(json)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    setIsOpenedAddStudentBox(false);\n  };\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\">Courses</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Students & Teams\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              {courses.length === 0 ? (\n                <CustomizedCard>\n                  <CardContent>\n                    <Stack style={{ flex: 1 }} alignItems=\"center\">\n                      Please create a new course\n                    </Stack>\n                  </CardContent>\n                </CustomizedCard>\n              ) : (\n                <>\n                  <Grid container sx={{ marginBottom: \"20px\" }}>\n                    <Grid\n                      item\n                      xs={9}\n                      sx={{ display: \"flex\", alignItems: \"center\" }}\n                    >\n                      <Typography\n                        style={{\n                          display: \"flex\",\n                          textAlign: \"center\",\n                          fontWeight: \"600\",\n                        }}\n                        variant=\"h6\"\n                        component=\"div\"\n                      >\n                        Student Information\n                      </Typography>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={3}\n                      sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                    >\n                      <CustomizedButtons\n                        type2\n                        model={\"add\"}\n                        onClick={() => {\n                          handleOpenCourseModal();\n                        }}\n                      >\n                        Delete Course\n                      </CustomizedButtons>\n                    </Grid>\n                  </Grid>\n                  <div>\n                    <CustomizedTabs\n                      type2\n                      setTab={setTab}\n                      value={tab}\n                      fullWidth={\"fullWidth\"}\n                      labels={courseNames}\n                    ></CustomizedTabs>\n                    {courses.map((course, key) => {\n                      return (\n                        <TabPanel value={tab} index={key}>\n                          <CustomizedCard>\n                            <CardHeader\n                              sx={{\n                                paddingBottom: \"0\",\n                              }}\n                              title={\n                                <>\n                                  {isOpenedAddStudentBox === false ? (\n                                    <Grid container>\n                                      <Grid item xs={3}>\n                                        <CustomizedButtons\n                                          type3\n                                          sx={{ width: \"170px\" }}\n                                          model={\"add\"}\n                                          model={\"switch\"}\n                                          setViewType={setViewType}\n                                        >\n                                          {viewType}\n                                        </CustomizedButtons>\n                                      </Grid>\n                                      <Grid\n                                        item\n                                        xs={9}\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"flex-end\",\n                                        }}\n                                      >\n                                        <CustomizedButtons\n                                          type3\n                                          model={\"add\"}\n                                          onClick={handleOpenAddStudentBox}\n                                        >\n                                          Add new student\n                                        </CustomizedButtons>\n                                      </Grid>\n                                    </Grid>\n                                  ) : (\n                                    <Collapse\n                                      in={isOpenedAddStudentBox}\n                                      timeout=\"auto\"\n                                      unmountOnExit\n                                    >\n                                      <AddStudentBox\n                                        handleAddStudent={handleAddStudent}\n                                        setFirstName={setFirstName}\n                                        firstName={firstName}\n                                        setLastName={setLastName}\n                                        lastName={lastName}\n                                        setSID={setSID}\n                                        sID={sID}\n                                        setEmail={setEmail}\n                                        email={email}\n                                        handleCloseAddStudentBox={\n                                          handleCloseAddStudentBox\n                                        }\n                                      ></AddStudentBox>\n                                    </Collapse>\n                                  )}\n                                </>\n                              }\n                            ></CardHeader>\n                            <CardContent\n                              sx={{\n                                paddingTop: \"0\",\n                              }}\n                            >\n                              {viewType === \"Student List\" ? (\n                                <List component=\"nav\">\n                                  {course.students.length !== 0 ? (\n                                    <>\n                                      {course.students.map((student) => (\n                                        <ListItem\n                                          button\n                                          divider\n                                          secondaryAction={\n                                            <IconButton\n                                              edge=\"end\"\n                                              aria-label=\"delete\"\n                                              onClick={() => {\n                                                setDeletedStudentID(\n                                                  student.userID\n                                                );\n                                                handleOpenStudentModal();\n                                              }}\n                                            >\n                                              <MdDelete\n                                                style={{\n                                                  color: \"red\",\n                                                  size: \"1.5em\",\n                                                }}\n                                              />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            primary={`${student.firstName} ${student.lastName}`}\n                                          />\n                                          <ListItemText\n                                            sx={{\n                                              display: \"flex\",\n                                              justifyContent: \"flex-end\",\n                                            }}\n                                            primary=\"Added via CSV upload 08/13/21\"\n                                          />\n                                        </ListItem>\n                                      ))}\n                                    </>\n                                  ) : (\n                                    <ListItem>\n                                      <ListItemText\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"flex-end\",\n                                        }}\n                                        primary=\"There is no student in this course\"\n                                      />\n                                    </ListItem>\n                                  )}\n                                </List>\n                              ) : (\n                                <List component=\"nav\">\n                                  {course.teams.map((team, key) => {\n                                    const open = teamKeys[key] || false;\n                                    return (\n                                      <div key={key}>\n                                        <ListItem\n                                          button\n                                          divider\n                                          secondaryAction={\n                                            <IconButton\n                                              edge=\"end\"\n                                              aria-label=\"delete\"\n                                            >\n                                              {open ? (\n                                                <IoIosArrowDropdown />\n                                              ) : (\n                                                <IoIosArrowDropup />\n                                              )}\n                                            </IconButton>\n                                          }\n                                          onClick={handleClick(key)}\n                                        >\n                                          <ListItemText\n                                            primary={`Team ${team.teamName}`}\n                                          />\n                                          <ListItemText\n                                            sx={{\n                                              display: \"flex\",\n                                              justifyContent: \"flex-end\",\n                                            }}\n                                            primary={`${team.students.length} team members`}\n                                          />\n                                        </ListItem>\n\n                                        <Collapse\n                                          in={open}\n                                          timeout=\"auto\"\n                                          unmountOnExit\n                                        >\n                                          <List component=\"div\" disablePadding>\n                                            <>\n                                              {team.students.map(\n                                                (student, key) => (\n                                                  <ListItem\n                                                    key={key}\n                                                    button\n                                                    sx={{ pl: 4 }}\n                                                    divider\n                                                    secondaryAction={\n                                                      <IconButton\n                                                        style={{ color: \"red\" }}\n                                                        edge=\"end\"\n                                                        aria-label=\"delete\"\n                                                        onClick={() => {\n                                                          setDeletedStudentID(\n                                                            student.userID\n                                                          );\n                                                          handleOpenStudentModal();\n                                                        }}\n                                                      >\n                                                        <MdDelete />\n                                                      </IconButton>\n                                                    }\n                                                  >\n                                                    <ListItemText\n                                                      primary={`${student.firstName} ${student.lastName}`}\n                                                    />\n                                                  </ListItem>\n                                                )\n                                              )}\n                                            </>\n                                          </List>\n                                        </Collapse>\n                                      </div>\n                                    );\n                                  })}\n                                </List>\n                              )}\n                            </CardContent>\n                          </CustomizedCard>\n                        </TabPanel>\n                      );\n                    })}\n                  </div>\n                </>\n              )}\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n      <CustomizedModal\n        modalType={\"course\"}\n        isCourseModalOpened={isCourseModalOpened}\n        handleCloseCourseModal={handleCloseCourseModal}\n        handleDeleteCourse={handleDeleteCourse}\n      />\n      <CustomizedModal\n        modalType={\"student\"}\n        isStudentModalOpened={isStudentModalOpened}\n        handleCloseStudentModal={handleCloseStudentModal}\n        handleDeleteStudent={handleDeleteStudent}\n      />\n    </CustomizedBody>\n  );\n}\n\nexport default StudentInfoViewPage;\n","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Login/LoginPage.js",["955","956","957","958","959","960","961","962","963"],"import React, { useState } from \"react\";\n// @mui components\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport bg from \"../../images/multi_background_login.jpg\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser, setUserName } from \"../../features/userSlice\";\n// styled components\nimport NavBarLogin from \"../../components/NavBar/NavBarLogin\";\nimport { Stack } from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport { loginAuth } from \"../../axios/APIRequests\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nconst CLIENT_ID = \"637717333332-2fauonnc42evp1f3qfi7e4br0okm5cu8.apps.googleusercontent.com\"\n\nfunction LoginPage({ history }) {\n  const dispatch = useDispatch();\n  const responseGoogle = (response) => {\n    if(response.profileObj === undefined || response.tokenId === undefined) return\n    dispatch(setUserName(response.profileObj.name));\n    signIn(response.tokenId)\n  };\n\n\n  const signIn = (tokenId) => {\n    // setAuthToken()\n    \n    loginAuth(tokenId)\n      .then(function (response) {\n        dispatch(setUser(response));\n        localStorage.token = response.token;\n        localStorage.userID = response.userID;\n        if(response.role === \"professor\") {\n          history.push(\"./professorhome\");\n        } else {\n          history.push(\"./studenthome\");\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBarLogin></NavBarLogin>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          flexDirection: \"row\",\n          margin: \"1em 12em\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"start\",\n            width: \"496px\",\n          }}\n        >\n          <Typography\n            style={{ fontWeight: \"600\" }}\n            variant=\"h4\"\n            component=\"div\"\n          >\n            A proven system to improve student grade outcomes.\n          </Typography>\n          <Typography variant=\"h6\" component=\"div\">\n            Distribute assignments and collect peer reviews with accuracy and\n            efficiency while utilizing this effective learning method.\n          </Typography>\n        </div>\n        <CustomizedCard\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            margin: \"3em 1em\",\n            width: \"422px\",\n            height: \"auto\",\n            padding: \"0.5em\",\n          }}\n        >\n          <CardHeader\n            sx={{ paddingBottom: \"0\" }}\n            title={\n              <Typography\n                style={{ fontWeight: \"600\" }}\n                variant=\"h5\"\n                component=\"div\"\n              >\n                Google Login\n              </Typography>\n            }\n          ></CardHeader>\n          <CardContent>\n            <Typography\n              style={{ fontWeight: \"400\" }}\n              variant=\"h6\"\n              component=\"div\"\n            >\n              Select your role to begin\n            </Typography>\n          </CardContent>\n          <CardContent\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Stack spacing={2}>\n              <GoogleLogin\n                clientId={CLIENT_ID}\n                buttonText=\"Professor\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n              <GoogleLogin\n                clientId={CLIENT_ID}\n                buttonText=\"Student\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n            </Stack>\n          </CardContent>\n        </CustomizedCard>\n      </div>\n    </CustomizedBody>\n  );\n}\n\nexport default LoginPage;\n","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/ResultsViewerPage.js",["964","965","966","967"],"import React, { useState } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { MdOutlineCancel } from \"react-icons/md\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\nimport CustomizedTables from \"../../components/CustomizedTables\";\n\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport { CardContent, Grid, Breadcrumbs } from \"@mui/material\";\nimport CSVUploader from \"../../components/CSVUploader\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@mui/styles\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\n\nfunction ResultsViewerPage({ history }) {\n  const [jsonData, setjsonData] = useState([]);\n  console.log(jsonData);\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\">Courses</Typography>\n          <Typography color=\"text.primary\">Course Name</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            New Assignment\n          </Typography>\n        </Breadcrumbs>\n        <Grid container sx={{ marginBottom: \"20px\" }}>\n          <Grid item xs={9}>\n            <Typography\n              style={{\n                display: \"flex\",\n                textAlign: \"center\",\n                fontWeight: \"600\",\n              }}\n              variant=\"h6\"\n              component=\"div\"\n            >\n              Student Information\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            xs={3}\n            sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            <CustomizedButtons type3 model={\"checked\"}>\n              Send Results\n            </CustomizedButtons>\n          </Grid>\n        </Grid>\n        <div>\n          <CustomizedCard>\n            <CardContent\n              sx={{\n                paddingTop: \"0\",\n              }}\n            >\n              <CSVUploader setjsonData={setjsonData}></CSVUploader>\n              <CustomizedTables\n                jsonData={jsonData.slice(0, -1)}\n              ></CustomizedTables>\n            </CardContent>\n          </CustomizedCard>\n        </div>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default ResultsViewerPage;\n","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/CourseResultPage.js",["968","969","970","971","972","973","974","975","976"],"import React, { useState, useEffect } from \"react\";\n// @mui components\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\n// styled components\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport CustomizedButtons from \"../../components/CustomizedButtons\";\n\nimport CustomizedTabs from \"../../components/CustomizedTabs\";\nimport bg from \"../../images/multi_background_dashboard.jpg\";\nimport {\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Stack,\n  Breadcrumbs,\n} from \"@mui/material\";\nimport CustomizedCard from \"../../components/CustomizedCard\";\nimport CustomizedContainer from \"../../components/CustomizedContainer\";\nimport SuccessfulNotification from \"../../components/SuccessfulNotification\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\n\nimport Loading from \"../../components/Loading\";\nimport CustomizedBody from \"../../components/CustomizedBody\";\nimport axios from \"axios\";\nimport { getAssignmentsByProfessor } from \"../../axios/APIRequests\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      sx={{ borderRadius: \"10px\" }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction CourseResultPage({ history }) {\n  const [tab, setTab] = useState(0);\n  const [filterType, setFilterType] = useState(\"All\");\n  const [courses, setCourses] = useState();\n\n  const dispatch = useDispatch();\n  const getUser = useSelector(selectUser);\n  const { user, isAuthenticated, authLoading } = getUser;\n  const [loading, setLoading] = React.useState(true);\n  const [courseNames, setCourseNames] = React.useState([]);\n\n  useEffect(() => {\n    var nameLists = [];\n\n    if (courses !== undefined && courses.length !== 0) {\n      courses.map((course) => {\n        nameLists.push(course.code);\n      });\n      setCourseNames(nameLists);\n      setLoading(false);\n    }\n  }, [courses]);\n  useEffect(() => {\n    getAssignmentsByProfessor()\n      .then((value) => {\n        console.log(value);\n        setCourses(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  // useEffect(() => {\n  //   console.log(filterType);\n  //   const filteredItems = courses.assignments.filter((assignment) => {\n  //     return item.type == filterType || filterType === \"All\";\n  //   });\n  //   setItems(filteredItems);\n  // }, [filterType]);\n  return (\n    <CustomizedBody bg={bg}>\n      <NavBar fixed history={history}></NavBar>\n      <CustomizedContainer>\n        <Breadcrumbs aria-label=\"breadcrumb\" mb={5} ml={2}>\n          <Typography color=\"text.primary\">Home</Typography>\n          <Typography color=\"text.primary\" style={{ fontWeight: \"600\" }}>\n            Course Results\n          </Typography>\n        </Breadcrumbs>\n        <>\n          {loading === true ? (\n            <Loading />\n          ) : (\n            <>\n              {courses.length === 0 ? (\n                <CustomizedCard>\n                  <CardContent>\n                    <Stack style={{ flex: 1 }} alignItems=\"center\">\n                      Please create a new course\n                    </Stack>\n                  </CardContent>\n                </CustomizedCard>\n              ) : (\n                <>\n                  <Stack\n                    direction=\"row\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                    mb={3}\n                  >\n                    <Typography\n                      style={{\n                        display: \"flex\",\n                        textAlign: \"center\",\n                        fontWeight: \"600\",\n                      }}\n                      variant=\"h6\"\n                      component=\"div\"\n                    >\n                      Quality Check\n                    </Typography>\n                  </Stack>\n                  <div>\n                    <CustomizedTabs\n                      type3\n                      setTab={setTab}\n                      value={tab}\n                      fullWidth={\"fullWidth\"}\n                      labels={courseNames}\n                    ></CustomizedTabs>\n                    {courses.map((course, key) => (\n                      <TabPanel value={tab} index={key}>\n                        <CustomizedCard>\n                          <CardHeader\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              justifyContent: \"space-between\",\n                            }}\n                            title={\n                              <Grid container>\n                                <Grid\n                                  item\n                                  xs={12}\n                                  sx={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\",\n                                  }}\n                                >\n                                  <CustomizedButtons\n                                    type3\n                                    model={\"radio2\"}\n                                    fullwidth\n                                    filterType={filterType}\n                                    setFilterType={setFilterType}\n                                  >\n                                    Filter Results\n                                  </CustomizedButtons>\n                                </Grid>\n                              </Grid>\n                            }\n                          ></CardHeader>\n                          <CardContent\n                            sx={{\n                              paddingTop: \"0\",\n                            }}\n                          >\n                            {course.assignments.map((assignment) => {\n                              return (\n                                <>\n                                  {!assignment.draft && (\n                                    <>\n                                      {(filterType === \"All\" ||\n                                        (filterType === \"Completed\") ===\n                                          false) && ( //assignment.solution.isReviewed\n                                        <ListItem\n                                          button\n                                          divider\n                                          onClick={() =>\n                                            history.push(\n                                              \"/studentsolutionqualitycheck\",\n                                              {\n                                                assignmentID:\n                                                  assignment.assignmentID,\n                                              }\n                                            )\n                                          }\n                                          secondaryAction={\n                                            <IconButton edge=\"end\">\n                                              <BsArrowRightCircle />\n                                            </IconButton>\n                                          }\n                                        >\n                                          <ListItemText\n                                            sx={{ width: \"30%\" }}\n                                            primary={`${assignment.title} Solutions`}\n                                          />\n\n                                          <>\n                                            {\n                                              //assignment.solution.isReviewed\n                                              assignment.reviewStage ===\n                                              false ? (\n                                                <>\n                                                  <ListItemText\n                                                    sx={{\n                                                      display: \"flex\",\n                                                      justifyContent: \"center\",\n                                                    }}\n                                                    primary={`Due ${new Date(\n                                                      assignment.solutionDueDateTime\n                                                    ).toLocaleString()}`}\n                                                  />\n                                                  <ListItemText\n                                                    primary={\n                                                      <div\n                                                        style={{\n                                                          display: \"flex\",\n                                                          alignItems: \"center\",\n                                                          justifyContent:\n                                                            \"flex-end\",\n                                                        }}\n                                                      >\n                                                        <FiberManualRecordIcon\n                                                          sx={{\n                                                            color: \"#0DC38D\",\n                                                            marginRight: \"10px\",\n                                                          }}\n                                                          fontSize=\"medium\"\n                                                        />{\" \"}\n                                                        <>Needs Review</>\n                                                      </div>\n                                                    }\n                                                  />\n                                                </>\n                                              ) : (\n                                                <ListItemText\n                                                  sx={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-end\",\n                                                  }}\n                                                  primary={`Completed ${new Date(\n                                                    assignment.solutionDueDateTime\n                                                  ).toLocaleString()}`}\n                                                />\n                                              )\n                                            }\n                                          </>\n                                        </ListItem>\n                                      )}\n                                      {assignment.reviewStage && (\n                                        <>\n                                          {(filterType === \"All\" ||\n                                            (filterType === \"Completed\") ===\n                                              false) && ( //assignment.peerreview.isReviewed\n                                            <ListItem\n                                              button\n                                              divider\n                                              onClick={() =>\n                                                history.push(\n                                                  \"/studentpeerreviewqualitycheck\",\n                                                  {\n                                                    assignmentID:\n                                                      assignment.assignmentID,\n                                                  }\n                                                )\n                                              }\n                                              secondaryAction={\n                                                <IconButton edge=\"end\">\n                                                  <BsArrowRightCircle />\n                                                </IconButton>\n                                              }\n                                            >\n                                              <ListItemText\n                                                sx={{ width: \"30%\" }}\n                                                primary={`${assignment.title} Peer Reviews`}\n                                              />\n\n                                              <>\n                                                {\n                                                  //assignment.peerreview.isReviewed\n                                                  assignment.reviewStage ===\n                                                  false ? (\n                                                    <>\n                                                      <ListItemText\n                                                        sx={{\n                                                          display: \"flex\",\n                                                          justifyContent:\n                                                            \"center\",\n                                                        }}\n                                                        primary={`submissions closed ${new Date(\n                                                          assignment.peerReviewDueDateTime\n                                                        ).toLocaleString()}`}\n                                                      />\n\n                                                      <ListItemText\n                                                        primary={\n                                                          <div\n                                                            style={{\n                                                              display: \"flex\",\n                                                              alignItems:\n                                                                \"center\",\n                                                              justifyContent:\n                                                                \"flex-end\",\n                                                            }}\n                                                          >\n                                                            <FiberManualRecordIcon\n                                                              sx={{\n                                                                color:\n                                                                  \"#0DC38D\",\n                                                                marginRight:\n                                                                  \"10px\",\n                                                              }}\n                                                              fontSize=\"medium\"\n                                                            />{\" \"}\n                                                            <>Needs Review</>\n                                                          </div>\n                                                        }\n                                                      />\n                                                    </>\n                                                  ) : (\n                                                    <ListItemText\n                                                      sx={{\n                                                        display: \"flex\",\n                                                        justifyContent:\n                                                          \"flex-end\",\n                                                      }}\n                                                      primary={`Completed ${new Date(\n                                                        assignment.peerReviewDueDateTime\n                                                      ).toLocaleString()}`}\n                                                    />\n                                                  )\n                                                }\n                                              </>\n                                            </ListItem>\n                                          )}\n                                        </>\n                                      )}\n                                    </>\n                                  )}\n                                </>\n                              );\n                            })}\n                          </CardContent>\n                        </CustomizedCard>\n                      </TabPanel>\n                    ))}\n                  </div>\n                </>\n              )}\n            </>\n          )}\n        </>\n      </CustomizedContainer>\n    </CustomizedBody>\n  );\n}\n\nexport default CourseResultPage;\n","/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/StudentSolutionQualityCheckPage.js",["977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/StudentPeerReviewQualityCheckPage.js",["997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/StudentHomeDashboard.js",["1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/AssignmentEdit.js",["1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/SeeAllAssignmentPage.js",["1044","1045","1046","1047","1048","1049"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/AssignmentDisplay.js",["1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Professor/AssignmentViewer.js",["1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/NewSolutionAssignmentView.js",["1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/StudentTeamsPage.js",["1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/StudentResultPage.js",["1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/PeerReviewAssignmentView.js",["1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/pages/Student/StudentPeerReviewResultsDisplay.js",["1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/features/userSlice.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedCard.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedContainer.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedButtons.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedCSVUploader.js",["1148","1149","1150"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedTextField.js",["1151","1152","1153","1154"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedBody.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedModal.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/Loading.js",["1155","1156"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedTabs.js",["1157","1158","1159","1160","1161"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedDivider.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/PDFhandling/PDFReader.js",["1162"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedPdfUploader.js",["1163","1164","1165"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/NavBar/NavBar.js",["1166","1167","1168","1169"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/axios/APIRequests.js",["1170","1171","1172","1173","1174"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/utils/byteArrayToPDF.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/PDFhandling/PDFControlBar.js",["1175","1176","1177","1178","1179"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/DividerStyle.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/TabStyle.js",["1180","1181","1182"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/Style.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/NavBarStyle.js",["1183","1184","1185","1186"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/ButtonStyle.js",["1187"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/LoadingStyle.js",["1188","1189"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedRadios.js",["1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedSwitch.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/ContainerStyle.js",["1201","1202","1203"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/styles/CardStyle.js",["1204","1205","1206"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CustomizedTables.js",["1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221"],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/SuccessfulNotification.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/CSVUploader.js",[],"/home/ductran/Desktop/CSC480-21F/frontend/src/main/frontend/src/components/NavBar/NavBarLogin.js",["1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237"],{"ruleId":"1238","severity":1,"message":"1239","line":1,"column":27,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":33},{"ruleId":"1238","severity":1,"message":"1242","line":1,"column":51,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":57},{"ruleId":"1238","severity":1,"message":"1243","line":2,"column":23,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":34},{"ruleId":"1238","severity":1,"message":"1239","line":1,"column":27,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":33},{"ruleId":"1238","severity":1,"message":"1244","line":1,"column":35,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":40},{"ruleId":"1238","severity":1,"message":"1242","line":1,"column":51,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":57},{"ruleId":"1238","severity":1,"message":"1243","line":2,"column":23,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":34},{"ruleId":"1238","severity":1,"message":"1245","line":7,"column":10,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1246","line":2,"column":8,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1247","line":1,"column":17,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1248","line":3,"column":8,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1249","line":4,"column":8,"nodeType":"1240","messageId":"1241","endLine":4,"endColumn":18},{"ruleId":"1238","severity":1,"message":"1250","line":5,"column":8,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1251","line":6,"column":8,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1252","line":8,"column":8,"nodeType":"1240","messageId":"1241","endLine":8,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1253","line":11,"column":8,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":11},{"ruleId":"1238","severity":1,"message":"1254","line":13,"column":8,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1255","line":23,"column":8,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1247","line":1,"column":17,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1251","line":5,"column":3,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1256","line":8,"column":3,"nodeType":"1240","messageId":"1241","endLine":8,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1253","line":10,"column":3,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":6},{"ruleId":"1238","severity":1,"message":"1257","line":12,"column":3,"nodeType":"1240","messageId":"1241","endLine":12,"endColumn":10},{"ruleId":"1238","severity":1,"message":"1258","line":16,"column":3,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1259","line":17,"column":3,"nodeType":"1240","messageId":"1241","endLine":17,"endColumn":9},{"ruleId":"1238","severity":1,"message":"1260","line":19,"column":3,"nodeType":"1240","messageId":"1241","endLine":19,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1261","line":24,"column":10,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":23},{"ruleId":"1238","severity":1,"message":"1254","line":35,"column":8,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1262","line":36,"column":8,"nodeType":"1240","messageId":"1241","endLine":36,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1263","line":39,"column":3,"nodeType":"1240","messageId":"1241","endLine":39,"endColumn":22},{"ruleId":"1264","severity":1,"message":"1265","line":123,"column":33,"nodeType":"1266","messageId":"1267","endLine":123,"endColumn":35},{"ruleId":"1238","severity":1,"message":"1251","line":3,"column":3,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1256","line":5,"column":3,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1254","line":19,"column":8,"nodeType":"1240","messageId":"1241","endLine":19,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1268","line":20,"column":10,"nodeType":"1240","messageId":"1241","endLine":20,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1253","line":22,"column":10,"nodeType":"1240","messageId":"1241","endLine":22,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1269","line":28,"column":7,"nodeType":"1240","messageId":"1241","endLine":28,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1270","line":31,"column":10,"nodeType":"1240","messageId":"1241","endLine":31,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1271","line":31,"column":21,"nodeType":"1240","messageId":"1241","endLine":31,"endColumn":33},{"ruleId":"1238","severity":1,"message":"1272","line":39,"column":10,"nodeType":"1240","messageId":"1241","endLine":39,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1273","line":39,"column":24,"nodeType":"1240","messageId":"1241","endLine":39,"endColumn":39},{"ruleId":"1238","severity":1,"message":"1274","line":77,"column":11,"nodeType":"1240","messageId":"1241","endLine":77,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1275","line":5,"column":10,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":18},{"ruleId":"1238","severity":1,"message":"1276","line":16,"column":3,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1277","line":26,"column":10,"nodeType":"1240","messageId":"1241","endLine":26,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1254","line":31,"column":8,"nodeType":"1240","messageId":"1241","endLine":31,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1278","line":36,"column":10,"nodeType":"1240","messageId":"1241","endLine":36,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1279","line":55,"column":9,"nodeType":"1240","messageId":"1241","endLine":55,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1245","line":58,"column":11,"nodeType":"1240","messageId":"1241","endLine":58,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":58,"column":17,"nodeType":"1240","messageId":"1241","endLine":58,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":58,"column":34,"nodeType":"1240","messageId":"1241","endLine":58,"endColumn":45},{"ruleId":"1264","severity":1,"message":"1265","line":83,"column":28,"nodeType":"1266","messageId":"1267","endLine":83,"endColumn":30},{"ruleId":"1238","severity":1,"message":"1277","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1251","line":6,"column":3,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1282","line":7,"column":3,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1256","line":9,"column":3,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1253","line":11,"column":3,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":6},{"ruleId":"1238","severity":1,"message":"1283","line":13,"column":3,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1284","line":23,"column":10,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":18},{"ruleId":"1238","severity":1,"message":"1285","line":23,"column":20,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1286","line":24,"column":10,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1243","line":24,"column":23,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":34},{"ruleId":"1238","severity":1,"message":"1287","line":27,"column":8,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1288","line":29,"column":8,"nodeType":"1240","messageId":"1241","endLine":29,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1289","line":35,"column":10,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1290","line":48,"column":10,"nodeType":"1240","messageId":"1241","endLine":48,"endColumn":27},{"ruleId":"1291","severity":1,"message":"1292","line":50,"column":35,"nodeType":"1293","messageId":"1294","endLine":50,"endColumn":37},{"ruleId":"1295","severity":1,"message":"1296","line":66,"column":6,"nodeType":"1297","endLine":66,"endColumn":8,"suggestions":"1298"},{"ruleId":"1295","severity":1,"message":"1299","line":85,"column":6,"nodeType":"1297","endLine":85,"endColumn":119,"suggestions":"1300"},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1302","line":26,"column":8,"nodeType":"1240","messageId":"1241","endLine":26,"endColumn":30},{"ruleId":"1238","severity":1,"message":"1277","line":27,"column":10,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1254","line":33,"column":8,"nodeType":"1240","messageId":"1241","endLine":33,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1279","line":58,"column":9,"nodeType":"1240","messageId":"1241","endLine":58,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1245","line":60,"column":11,"nodeType":"1240","messageId":"1241","endLine":60,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":60,"column":17,"nodeType":"1240","messageId":"1241","endLine":60,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":60,"column":34,"nodeType":"1240","messageId":"1241","endLine":60,"endColumn":45},{"ruleId":"1264","severity":1,"message":"1265","line":68,"column":28,"nodeType":"1266","messageId":"1267","endLine":68,"endColumn":30},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1278","line":5,"column":10,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1277","line":20,"column":10,"nodeType":"1240","messageId":"1241","endLine":20,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1303","line":21,"column":10,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1304","line":5,"column":27,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":40},{"ruleId":"1238","severity":1,"message":"1257","line":19,"column":3,"nodeType":"1240","messageId":"1241","endLine":19,"endColumn":10},{"ruleId":"1238","severity":1,"message":"1305","line":25,"column":3,"nodeType":"1240","messageId":"1241","endLine":25,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1306","line":28,"column":3,"nodeType":"1240","messageId":"1241","endLine":28,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1307","line":29,"column":3,"nodeType":"1240","messageId":"1241","endLine":29,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1308","line":30,"column":3,"nodeType":"1240","messageId":"1241","endLine":30,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1276","line":32,"column":3,"nodeType":"1240","messageId":"1241","endLine":32,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1309","line":35,"column":8,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1277","line":38,"column":10,"nodeType":"1240","messageId":"1241","endLine":38,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1303","line":39,"column":10,"nodeType":"1240","messageId":"1241","endLine":39,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1243","line":40,"column":23,"nodeType":"1240","messageId":"1241","endLine":40,"endColumn":34},{"ruleId":"1238","severity":1,"message":"1254","line":44,"column":8,"nodeType":"1240","messageId":"1241","endLine":44,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1310","line":55,"column":5,"nodeType":"1240","messageId":"1241","endLine":55,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1245","line":164,"column":11,"nodeType":"1240","messageId":"1241","endLine":164,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":164,"column":17,"nodeType":"1240","messageId":"1241","endLine":164,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":164,"column":34,"nodeType":"1240","messageId":"1241","endLine":164,"endColumn":45},{"ruleId":"1264","severity":1,"message":"1265","line":181,"column":28,"nodeType":"1266","messageId":"1267","endLine":181,"endColumn":30},{"ruleId":"1238","severity":1,"message":"1274","line":231,"column":11,"nodeType":"1240","messageId":"1241","endLine":231,"endColumn":16},{"ruleId":"1311","severity":1,"message":"1312","line":314,"column":37,"nodeType":"1313","messageId":"1314","endLine":314,"endColumn":53},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1315","line":6,"column":10,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":28},{"ruleId":"1238","severity":1,"message":"1316","line":9,"column":8,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1317","line":11,"column":26,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1282","line":21,"column":3,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1318","line":23,"column":3,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1319","line":35,"column":8,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1277","line":36,"column":10,"nodeType":"1240","messageId":"1241","endLine":36,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1320","line":45,"column":3,"nodeType":"1240","messageId":"1241","endLine":45,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1321","line":48,"column":10,"nodeType":"1240","messageId":"1241","endLine":48,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1322","line":50,"column":8,"nodeType":"1240","messageId":"1241","endLine":50,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1279","line":73,"column":9,"nodeType":"1240","messageId":"1241","endLine":73,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1323","line":74,"column":9,"nodeType":"1240","messageId":"1241","endLine":74,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1324","line":78,"column":17,"nodeType":"1240","messageId":"1241","endLine":78,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1325","line":84,"column":10,"nodeType":"1240","messageId":"1241","endLine":84,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1326","line":86,"column":10,"nodeType":"1240","messageId":"1241","endLine":86,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1327","line":86,"column":29,"nodeType":"1240","messageId":"1241","endLine":86,"endColumn":49},{"ruleId":"1238","severity":1,"message":"1328","line":87,"column":10,"nodeType":"1240","messageId":"1241","endLine":87,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1329","line":87,"column":33,"nodeType":"1240","messageId":"1241","endLine":87,"endColumn":57},{"ruleId":"1238","severity":1,"message":"1330","line":88,"column":10,"nodeType":"1240","messageId":"1241","endLine":88,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1331","line":88,"column":27,"nodeType":"1240","messageId":"1241","endLine":88,"endColumn":45},{"ruleId":"1291","severity":1,"message":"1292","line":99,"column":37,"nodeType":"1293","messageId":"1294","endLine":99,"endColumn":39},{"ruleId":"1295","severity":1,"message":"1332","line":114,"column":6,"nodeType":"1297","endLine":114,"endColumn":8,"suggestions":"1333"},{"ruleId":"1238","severity":1,"message":"1334","line":151,"column":9,"nodeType":"1240","messageId":"1241","endLine":151,"endColumn":23},{"ruleId":"1238","severity":1,"message":"1335","line":1,"column":27,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":36},{"ruleId":"1238","severity":1,"message":"1277","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1251","line":6,"column":3,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1282","line":7,"column":3,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1256","line":9,"column":3,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1283","line":13,"column":3,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1336","line":14,"column":3,"nodeType":"1240","messageId":"1241","endLine":14,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1337","line":23,"column":8,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1317","line":24,"column":26,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1262","line":26,"column":8,"nodeType":"1240","messageId":"1241","endLine":26,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1324","line":46,"column":17,"nodeType":"1240","messageId":"1241","endLine":46,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1325","line":51,"column":10,"nodeType":"1240","messageId":"1241","endLine":51,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1277","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1251","line":6,"column":3,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1282","line":7,"column":3,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1256","line":9,"column":3,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1283","line":13,"column":3,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1336","line":14,"column":3,"nodeType":"1240","messageId":"1241","endLine":14,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1337","line":23,"column":8,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1317","line":24,"column":26,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1324","line":49,"column":17,"nodeType":"1240","messageId":"1241","endLine":49,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1325","line":54,"column":10,"nodeType":"1240","messageId":"1241","endLine":54,"endColumn":19},{"ruleId":"1295","severity":1,"message":"1332","line":78,"column":6,"nodeType":"1297","endLine":78,"endColumn":8,"suggestions":"1338"},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1315","line":8,"column":10,"nodeType":"1240","messageId":"1241","endLine":8,"endColumn":28},{"ruleId":"1238","severity":1,"message":"1316","line":11,"column":8,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1317","line":13,"column":26,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1337","line":14,"column":8,"nodeType":"1240","messageId":"1241","endLine":14,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1339","line":21,"column":8,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1282","line":25,"column":3,"nodeType":"1240","messageId":"1241","endLine":25,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1318","line":27,"column":3,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1340","line":28,"column":3,"nodeType":"1240","messageId":"1241","endLine":28,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1341","line":31,"column":3,"nodeType":"1240","messageId":"1241","endLine":31,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1277","line":37,"column":10,"nodeType":"1240","messageId":"1241","endLine":37,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1279","line":64,"column":9,"nodeType":"1240","messageId":"1241","endLine":64,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1245","line":66,"column":11,"nodeType":"1240","messageId":"1241","endLine":66,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":66,"column":17,"nodeType":"1240","messageId":"1241","endLine":66,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":66,"column":34,"nodeType":"1240","messageId":"1241","endLine":66,"endColumn":45},{"ruleId":"1238","severity":1,"message":"1324","line":73,"column":17,"nodeType":"1240","messageId":"1241","endLine":73,"endColumn":25},{"ruleId":"1291","severity":1,"message":"1292","line":115,"column":37,"nodeType":"1293","messageId":"1294","endLine":115,"endColumn":39},{"ruleId":"1295","severity":1,"message":"1332","line":119,"column":6,"nodeType":"1297","endLine":119,"endColumn":8,"suggestions":"1342"},{"ruleId":"1295","severity":1,"message":"1343","line":125,"column":6,"nodeType":"1297","endLine":125,"endColumn":11,"suggestions":"1344"},{"ruleId":"1238","severity":1,"message":"1345","line":147,"column":13,"nodeType":"1240","messageId":"1241","endLine":147,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1277","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1318","line":5,"column":3,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1251","line":6,"column":3,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1282","line":7,"column":3,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1256","line":9,"column":3,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1253","line":11,"column":3,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":6},{"ruleId":"1238","severity":1,"message":"1283","line":13,"column":3,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1284","line":23,"column":10,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":18},{"ruleId":"1238","severity":1,"message":"1285","line":23,"column":20,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":24},{"ruleId":"1295","severity":1,"message":"1332","line":71,"column":6,"nodeType":"1297","endLine":71,"endColumn":8,"suggestions":"1346"},{"ruleId":"1295","severity":1,"message":"1347","line":89,"column":6,"nodeType":"1297","endLine":89,"endColumn":75,"suggestions":"1348"},{"ruleId":"1238","severity":1,"message":"1247","line":1,"column":17,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1251","line":5,"column":3,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1256","line":8,"column":3,"nodeType":"1240","messageId":"1241","endLine":8,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1253","line":10,"column":3,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":6},{"ruleId":"1238","severity":1,"message":"1257","line":12,"column":3,"nodeType":"1240","messageId":"1241","endLine":12,"endColumn":10},{"ruleId":"1238","severity":1,"message":"1258","line":16,"column":3,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1259","line":17,"column":3,"nodeType":"1240","messageId":"1241","endLine":17,"endColumn":9},{"ruleId":"1238","severity":1,"message":"1260","line":19,"column":3,"nodeType":"1240","messageId":"1241","endLine":19,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1261","line":24,"column":10,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":23},{"ruleId":"1238","severity":1,"message":"1254","line":35,"column":8,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1262","line":36,"column":8,"nodeType":"1240","messageId":"1241","endLine":36,"endColumn":15},{"ruleId":"1349","severity":1,"message":"1350","line":80,"column":42,"nodeType":"1293","messageId":"1351","endLine":80,"endColumn":43},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1316","line":7,"column":8,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1352","line":21,"column":3,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1277","line":26,"column":10,"nodeType":"1240","messageId":"1241","endLine":26,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1254","line":27,"column":8,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":13},{"ruleId":"1264","severity":1,"message":"1265","line":60,"column":28,"nodeType":"1266","messageId":"1267","endLine":60,"endColumn":30},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1278","line":5,"column":10,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1255","line":10,"column":8,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1353","line":11,"column":8,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":23},{"ruleId":"1238","severity":1,"message":"1282","line":17,"column":3,"nodeType":"1240","messageId":"1241","endLine":17,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1257","line":18,"column":3,"nodeType":"1240","messageId":"1241","endLine":18,"endColumn":10},{"ruleId":"1238","severity":1,"message":"1305","line":24,"column":3,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1352","line":26,"column":3,"nodeType":"1240","messageId":"1241","endLine":26,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1306","line":27,"column":3,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1307","line":28,"column":3,"nodeType":"1240","messageId":"1241","endLine":28,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1308","line":29,"column":3,"nodeType":"1240","messageId":"1241","endLine":29,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1309","line":33,"column":8,"nodeType":"1240","messageId":"1241","endLine":33,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1354","line":36,"column":8,"nodeType":"1240","messageId":"1241","endLine":36,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1263","line":39,"column":10,"nodeType":"1240","messageId":"1241","endLine":39,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1355","line":41,"column":7,"nodeType":"1240","messageId":"1241","endLine":41,"endColumn":13},{"ruleId":"1264","severity":1,"message":"1265","line":77,"column":28,"nodeType":"1266","messageId":"1267","endLine":77,"endColumn":30},{"ruleId":"1238","severity":1,"message":"1317","line":6,"column":26,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1356","line":14,"column":29,"nodeType":"1240","messageId":"1241","endLine":14,"endColumn":33},{"ruleId":"1238","severity":1,"message":"1277","line":17,"column":10,"nodeType":"1240","messageId":"1241","endLine":17,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1354","line":23,"column":8,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1279","line":28,"column":9,"nodeType":"1240","messageId":"1241","endLine":28,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1245","line":30,"column":11,"nodeType":"1240","messageId":"1241","endLine":30,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":30,"column":17,"nodeType":"1240","messageId":"1241","endLine":30,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":30,"column":34,"nodeType":"1240","messageId":"1241","endLine":30,"endColumn":45},{"ruleId":"1238","severity":1,"message":"1324","line":32,"column":17,"nodeType":"1240","messageId":"1241","endLine":32,"endColumn":25},{"ruleId":"1295","severity":1,"message":"1357","line":62,"column":6,"nodeType":"1297","endLine":62,"endColumn":8,"suggestions":"1358"},{"ruleId":"1238","severity":1,"message":"1345","line":79,"column":13,"nodeType":"1240","messageId":"1241","endLine":79,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1317","line":5,"column":26,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1356","line":12,"column":54,"nodeType":"1240","messageId":"1241","endLine":12,"endColumn":58},{"ruleId":"1238","severity":1,"message":"1277","line":15,"column":10,"nodeType":"1240","messageId":"1241","endLine":15,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1354","line":21,"column":8,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1359","line":24,"column":97,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":121},{"ruleId":"1238","severity":1,"message":"1279","line":43,"column":9,"nodeType":"1240","messageId":"1241","endLine":43,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1245","line":45,"column":11,"nodeType":"1240","messageId":"1241","endLine":45,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":45,"column":17,"nodeType":"1240","messageId":"1241","endLine":45,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":45,"column":34,"nodeType":"1240","messageId":"1241","endLine":45,"endColumn":45},{"ruleId":"1238","severity":1,"message":"1324","line":47,"column":17,"nodeType":"1240","messageId":"1241","endLine":47,"endColumn":25},{"ruleId":"1291","severity":1,"message":"1292","line":72,"column":37,"nodeType":"1293","messageId":"1294","endLine":72,"endColumn":39},{"ruleId":"1264","severity":1,"message":"1265","line":81,"column":33,"nodeType":"1266","messageId":"1267","endLine":81,"endColumn":35},{"ruleId":"1295","severity":1,"message":"1332","line":108,"column":6,"nodeType":"1297","endLine":108,"endColumn":8,"suggestions":"1360"},{"ruleId":"1295","severity":1,"message":"1361","line":119,"column":6,"nodeType":"1297","endLine":119,"endColumn":11,"suggestions":"1362"},{"ruleId":"1295","severity":1,"message":"1363","line":127,"column":6,"nodeType":"1297","endLine":127,"endColumn":25,"suggestions":"1364"},{"ruleId":"1264","severity":1,"message":"1265","line":135,"column":46,"nodeType":"1266","messageId":"1267","endLine":135,"endColumn":48},{"ruleId":"1238","severity":1,"message":"1345","line":145,"column":13,"nodeType":"1240","messageId":"1241","endLine":145,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1356","line":6,"column":3,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1282","line":10,"column":3,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1317","line":13,"column":26,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1277","line":23,"column":10,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1322","line":27,"column":8,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1279","line":49,"column":9,"nodeType":"1240","messageId":"1241","endLine":49,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1245","line":51,"column":11,"nodeType":"1240","messageId":"1241","endLine":51,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":51,"column":17,"nodeType":"1240","messageId":"1241","endLine":51,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":51,"column":34,"nodeType":"1240","messageId":"1241","endLine":51,"endColumn":45},{"ruleId":"1238","severity":1,"message":"1324","line":53,"column":17,"nodeType":"1240","messageId":"1241","endLine":53,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1325","line":56,"column":10,"nodeType":"1240","messageId":"1241","endLine":56,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1365","line":62,"column":10,"nodeType":"1240","messageId":"1241","endLine":62,"endColumn":18},{"ruleId":"1238","severity":1,"message":"1366","line":62,"column":20,"nodeType":"1240","messageId":"1241","endLine":62,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1367","line":63,"column":10,"nodeType":"1240","messageId":"1241","endLine":63,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1368","line":63,"column":22,"nodeType":"1240","messageId":"1241","endLine":63,"endColumn":35},{"ruleId":"1238","severity":1,"message":"1326","line":64,"column":10,"nodeType":"1240","messageId":"1241","endLine":64,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1327","line":64,"column":29,"nodeType":"1240","messageId":"1241","endLine":64,"endColumn":49},{"ruleId":"1291","severity":1,"message":"1292","line":68,"column":37,"nodeType":"1293","messageId":"1294","endLine":68,"endColumn":39},{"ruleId":"1295","severity":1,"message":"1369","line":81,"column":6,"nodeType":"1297","endLine":81,"endColumn":8,"suggestions":"1370"},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1316","line":7,"column":8,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1255","line":10,"column":8,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1282","line":16,"column":3,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1352","line":21,"column":3,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1277","line":26,"column":10,"nodeType":"1240","messageId":"1241","endLine":26,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1254","line":27,"column":8,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1371","line":77,"column":22,"nodeType":"1240","messageId":"1241","endLine":77,"endColumn":35},{"ruleId":"1238","severity":1,"message":"1372","line":78,"column":10,"nodeType":"1240","messageId":"1241","endLine":78,"endColumn":15},{"ruleId":"1264","severity":1,"message":"1265","line":86,"column":28,"nodeType":"1266","messageId":"1267","endLine":86,"endColumn":30},{"ruleId":"1291","severity":1,"message":"1292","line":108,"column":24,"nodeType":"1293","messageId":"1294","endLine":108,"endColumn":26},{"ruleId":"1349","severity":1,"message":"1350","line":190,"column":51,"nodeType":"1293","messageId":"1351","endLine":190,"endColumn":52},{"ruleId":"1238","severity":1,"message":"1301","line":4,"column":10,"nodeType":"1240","messageId":"1241","endLine":4,"endColumn":16},{"ruleId":"1373","severity":1,"message":"1374","line":21,"column":11,"nodeType":"1375","endLine":21,"endColumn":59},{"ruleId":"1238","severity":1,"message":"1325","line":10,"column":10,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1277","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1376","line":4,"column":10,"nodeType":"1240","messageId":"1241","endLine":4,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1377","line":6,"column":8,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1301","line":7,"column":10,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1378","line":9,"column":10,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1286","line":12,"column":10,"nodeType":"1240","messageId":"1241","endLine":12,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1243","line":12,"column":23,"nodeType":"1240","messageId":"1241","endLine":12,"endColumn":34},{"ruleId":"1238","severity":1,"message":"1379","line":13,"column":10,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1380","line":13,"column":22,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1352","line":16,"column":16,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1381","line":16,"column":23,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1382","line":16,"column":31,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":35},{"ruleId":"1238","severity":1,"message":"1383","line":16,"column":37,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":45},{"ruleId":"1238","severity":1,"message":"1384","line":16,"column":47,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":55},{"ruleId":"1238","severity":1,"message":"1385","line":17,"column":8,"nodeType":"1240","messageId":"1241","endLine":17,"endColumn":29},{"ruleId":"1373","severity":1,"message":"1374","line":39,"column":17,"nodeType":"1375","endLine":39,"endColumn":61},{"ruleId":"1238","severity":1,"message":"1280","line":20,"column":17,"nodeType":"1240","messageId":"1241","endLine":20,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1386","line":20,"column":34,"nodeType":"1240","messageId":"1241","endLine":20,"endColumn":38},{"ruleId":"1373","severity":1,"message":"1374","line":56,"column":17,"nodeType":"1375","endLine":56,"endColumn":70},{"ruleId":"1373","severity":1,"message":"1374","line":103,"column":17,"nodeType":"1375","endLine":103,"endColumn":68},{"ruleId":"1238","severity":1,"message":"1387","line":2,"column":8,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1388","line":3,"column":8,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1286","line":4,"column":10,"nodeType":"1240","messageId":"1241","endLine":4,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1243","line":4,"column":23,"nodeType":"1240","messageId":"1241","endLine":4,"endColumn":34},{"ruleId":"1238","severity":1,"message":"1379","line":5,"column":10,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1389","line":9,"column":21,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1253","line":9,"column":33,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":36},{"ruleId":"1390","severity":1,"message":"1391","line":42,"column":5,"nodeType":"1392","messageId":"1294","endLine":42,"endColumn":15},{"ruleId":"1390","severity":1,"message":"1393","line":102,"column":3,"nodeType":"1392","messageId":"1294","endLine":102,"endColumn":8},{"ruleId":"1390","severity":1,"message":"1393","line":103,"column":3,"nodeType":"1392","messageId":"1294","endLine":103,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1394","line":10,"column":72,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":76},{"ruleId":"1238","severity":1,"message":"1395","line":27,"column":10,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":22},{"ruleId":"1396","severity":1,"message":"1397","line":55,"column":30,"nodeType":"1266","messageId":"1398","endLine":67,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1399","line":4,"column":8,"nodeType":"1240","messageId":"1241","endLine":4,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1400","line":5,"column":8,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":18},{"ruleId":"1238","severity":1,"message":"1394","line":21,"column":8,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1310","line":35,"column":9,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1401","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1402","line":2,"column":26,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":38},{"ruleId":"1238","severity":1,"message":"1403","line":2,"column":40,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":49},{"ruleId":"1238","severity":1,"message":"1401","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1402","line":2,"column":26,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":38},{"ruleId":"1238","severity":1,"message":"1404","line":2,"column":40,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":49},{"ruleId":"1238","severity":1,"message":"1405","line":2,"column":51,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":60},{"ruleId":"1238","severity":1,"message":"1318","line":1,"column":10,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1406","line":11,"column":9,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":23},{"ruleId":"1238","severity":1,"message":"1407","line":12,"column":9,"nodeType":"1240","messageId":"1241","endLine":12,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1408","line":35,"column":9,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1409","line":36,"column":9,"nodeType":"1240","messageId":"1241","endLine":36,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1402","line":2,"column":21,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":33},{"ruleId":"1238","severity":1,"message":"1403","line":2,"column":35,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":44},{"ruleId":"1238","severity":1,"message":"1401","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1402","line":2,"column":26,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":38},{"ruleId":"1238","severity":1,"message":"1403","line":2,"column":40,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":49},{"ruleId":"1238","severity":1,"message":"1402","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1247","line":1,"column":16,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1410","line":3,"column":22,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":35},{"ruleId":"1238","severity":1,"message":"1411","line":6,"column":8,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1401","line":7,"column":10,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1402","line":7,"column":26,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":38},{"ruleId":"1238","severity":1,"message":"1403","line":7,"column":40,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":49},{"ruleId":"1238","severity":1,"message":"1412","line":7,"column":51,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":60},{"ruleId":"1238","severity":1,"message":"1413","line":7,"column":62,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":72},{"ruleId":"1238","severity":1,"message":"1414","line":7,"column":74,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":85},{"ruleId":"1238","severity":1,"message":"1301","line":8,"column":10,"nodeType":"1240","messageId":"1241","endLine":8,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1354","line":9,"column":8,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1401","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1402","line":2,"column":26,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":38},{"ruleId":"1238","severity":1,"message":"1403","line":2,"column":40,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":49},{"ruleId":"1238","severity":1,"message":"1415","line":2,"column":8,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1416","line":10,"column":10,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1417","line":31,"column":9,"nodeType":"1240","messageId":"1241","endLine":31,"endColumn":16},{"ruleId":"1291","severity":1,"message":"1292","line":60,"column":30,"nodeType":"1293","messageId":"1294","endLine":60,"endColumn":32},{"ruleId":"1418","severity":1,"message":"1419","line":95,"column":23,"nodeType":"1420","messageId":"1421","endLine":114,"endColumn":24},{"ruleId":"1291","severity":1,"message":"1292","line":96,"column":37,"nodeType":"1293","messageId":"1294","endLine":96,"endColumn":39},{"ruleId":"1422","severity":1,"message":"1423","line":96,"column":53,"nodeType":"1424","messageId":"1425","endLine":96,"endColumn":55},{"ruleId":"1291","severity":1,"message":"1292","line":96,"column":65,"nodeType":"1293","messageId":"1294","endLine":96,"endColumn":67},{"ruleId":"1422","severity":1,"message":"1423","line":96,"column":70,"nodeType":"1424","messageId":"1425","endLine":96,"endColumn":72},{"ruleId":"1291","severity":1,"message":"1426","line":96,"column":82,"nodeType":"1293","messageId":"1294","endLine":96,"endColumn":84},{"ruleId":"1291","severity":1,"message":"1292","line":100,"column":40,"nodeType":"1293","messageId":"1294","endLine":100,"endColumn":42},{"ruleId":"1291","severity":1,"message":"1426","line":100,"column":74,"nodeType":"1293","messageId":"1294","endLine":100,"endColumn":76},{"ruleId":"1291","severity":1,"message":"1292","line":105,"column":42,"nodeType":"1293","messageId":"1294","endLine":105,"endColumn":44},{"ruleId":"1291","severity":1,"message":"1426","line":105,"column":78,"nodeType":"1293","messageId":"1294","endLine":105,"endColumn":80},{"ruleId":"1291","severity":1,"message":"1426","line":127,"column":34,"nodeType":"1293","messageId":"1294","endLine":127,"endColumn":36},{"ruleId":"1238","severity":1,"message":"1394","line":10,"column":39,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":43},{"ruleId":"1238","severity":1,"message":"1395","line":27,"column":10,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":22},{"ruleId":"1396","severity":1,"message":"1397","line":43,"column":30,"nodeType":"1266","messageId":"1398","endLine":69,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1239","line":1,"column":27,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":33},{"ruleId":"1238","severity":1,"message":"1242","line":1,"column":51,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":57},{"ruleId":"1238","severity":1,"message":"1243","line":2,"column":23,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":34},{"ruleId":"1238","severity":1,"message":"1239","line":1,"column":27,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":33},{"ruleId":"1238","severity":1,"message":"1244","line":1,"column":35,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":40},{"ruleId":"1238","severity":1,"message":"1242","line":1,"column":51,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":57},{"ruleId":"1238","severity":1,"message":"1243","line":2,"column":23,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":34},{"ruleId":"1238","severity":1,"message":"1245","line":7,"column":10,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1246","line":2,"column":8,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1251","line":3,"column":3,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1256","line":5,"column":3,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1254","line":19,"column":8,"nodeType":"1240","messageId":"1241","endLine":19,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1268","line":20,"column":10,"nodeType":"1240","messageId":"1241","endLine":20,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1253","line":22,"column":10,"nodeType":"1240","messageId":"1241","endLine":22,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1269","line":28,"column":7,"nodeType":"1240","messageId":"1241","endLine":28,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1270","line":31,"column":10,"nodeType":"1240","messageId":"1241","endLine":31,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1271","line":31,"column":21,"nodeType":"1240","messageId":"1241","endLine":31,"endColumn":33},{"ruleId":"1238","severity":1,"message":"1272","line":39,"column":10,"nodeType":"1240","messageId":"1241","endLine":39,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1273","line":39,"column":24,"nodeType":"1240","messageId":"1241","endLine":39,"endColumn":39},{"ruleId":"1238","severity":1,"message":"1274","line":77,"column":11,"nodeType":"1240","messageId":"1241","endLine":77,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1275","line":5,"column":10,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":18},{"ruleId":"1238","severity":1,"message":"1276","line":16,"column":3,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1277","line":26,"column":10,"nodeType":"1240","messageId":"1241","endLine":26,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1254","line":31,"column":8,"nodeType":"1240","messageId":"1241","endLine":31,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1278","line":36,"column":10,"nodeType":"1240","messageId":"1241","endLine":36,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1279","line":55,"column":9,"nodeType":"1240","messageId":"1241","endLine":55,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1245","line":58,"column":11,"nodeType":"1240","messageId":"1241","endLine":58,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":58,"column":17,"nodeType":"1240","messageId":"1241","endLine":58,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":58,"column":34,"nodeType":"1240","messageId":"1241","endLine":58,"endColumn":45},{"ruleId":"1264","severity":1,"message":"1265","line":83,"column":28,"nodeType":"1266","messageId":"1267","endLine":83,"endColumn":30},{"ruleId":"1238","severity":1,"message":"1247","line":1,"column":17,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1251","line":5,"column":3,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1256","line":8,"column":3,"nodeType":"1240","messageId":"1241","endLine":8,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1253","line":10,"column":3,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":6},{"ruleId":"1238","severity":1,"message":"1257","line":12,"column":3,"nodeType":"1240","messageId":"1241","endLine":12,"endColumn":10},{"ruleId":"1238","severity":1,"message":"1258","line":16,"column":3,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1259","line":17,"column":3,"nodeType":"1240","messageId":"1241","endLine":17,"endColumn":9},{"ruleId":"1238","severity":1,"message":"1260","line":19,"column":3,"nodeType":"1240","messageId":"1241","endLine":19,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1261","line":24,"column":10,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":23},{"ruleId":"1238","severity":1,"message":"1254","line":35,"column":8,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1262","line":36,"column":8,"nodeType":"1240","messageId":"1241","endLine":36,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1263","line":39,"column":3,"nodeType":"1240","messageId":"1241","endLine":39,"endColumn":22},{"ruleId":"1264","severity":1,"message":"1265","line":137,"column":33,"nodeType":"1266","messageId":"1267","endLine":137,"endColumn":35},{"ruleId":"1238","severity":1,"message":"1277","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1251","line":6,"column":3,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1282","line":7,"column":3,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1256","line":9,"column":3,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1253","line":11,"column":3,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":6},{"ruleId":"1238","severity":1,"message":"1283","line":13,"column":3,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1284","line":23,"column":10,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":18},{"ruleId":"1238","severity":1,"message":"1285","line":23,"column":20,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1286","line":24,"column":10,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1243","line":24,"column":23,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":34},{"ruleId":"1238","severity":1,"message":"1287","line":27,"column":8,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1288","line":29,"column":8,"nodeType":"1240","messageId":"1241","endLine":29,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1289","line":35,"column":10,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1290","line":48,"column":10,"nodeType":"1240","messageId":"1241","endLine":48,"endColumn":27},{"ruleId":"1291","severity":1,"message":"1292","line":50,"column":35,"nodeType":"1293","messageId":"1294","endLine":50,"endColumn":37},{"ruleId":"1295","severity":1,"message":"1296","line":66,"column":6,"nodeType":"1297","endLine":66,"endColumn":8,"suggestions":"1427"},{"ruleId":"1295","severity":1,"message":"1299","line":85,"column":6,"nodeType":"1297","endLine":85,"endColumn":119,"suggestions":"1428"},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1304","line":5,"column":27,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":40},{"ruleId":"1238","severity":1,"message":"1257","line":19,"column":3,"nodeType":"1240","messageId":"1241","endLine":19,"endColumn":10},{"ruleId":"1238","severity":1,"message":"1305","line":25,"column":3,"nodeType":"1240","messageId":"1241","endLine":25,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1306","line":28,"column":3,"nodeType":"1240","messageId":"1241","endLine":28,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1307","line":29,"column":3,"nodeType":"1240","messageId":"1241","endLine":29,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1308","line":30,"column":3,"nodeType":"1240","messageId":"1241","endLine":30,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1276","line":32,"column":3,"nodeType":"1240","messageId":"1241","endLine":32,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1309","line":35,"column":8,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1277","line":38,"column":10,"nodeType":"1240","messageId":"1241","endLine":38,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1303","line":39,"column":10,"nodeType":"1240","messageId":"1241","endLine":39,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1243","line":40,"column":23,"nodeType":"1240","messageId":"1241","endLine":40,"endColumn":34},{"ruleId":"1238","severity":1,"message":"1254","line":44,"column":8,"nodeType":"1240","messageId":"1241","endLine":44,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1310","line":55,"column":5,"nodeType":"1240","messageId":"1241","endLine":55,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1245","line":170,"column":11,"nodeType":"1240","messageId":"1241","endLine":170,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":170,"column":17,"nodeType":"1240","messageId":"1241","endLine":170,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":170,"column":34,"nodeType":"1240","messageId":"1241","endLine":170,"endColumn":45},{"ruleId":"1264","severity":1,"message":"1265","line":187,"column":28,"nodeType":"1266","messageId":"1267","endLine":187,"endColumn":30},{"ruleId":"1238","severity":1,"message":"1274","line":237,"column":11,"nodeType":"1240","messageId":"1241","endLine":237,"endColumn":16},{"ruleId":"1311","severity":1,"message":"1312","line":332,"column":43,"nodeType":"1313","messageId":"1314","endLine":332,"endColumn":59},{"ruleId":"1238","severity":1,"message":"1247","line":1,"column":17,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1248","line":3,"column":8,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1249","line":4,"column":8,"nodeType":"1240","messageId":"1241","endLine":4,"endColumn":18},{"ruleId":"1238","severity":1,"message":"1250","line":5,"column":8,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1251","line":6,"column":8,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1252","line":8,"column":8,"nodeType":"1240","messageId":"1241","endLine":8,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1253","line":11,"column":8,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":11},{"ruleId":"1238","severity":1,"message":"1254","line":13,"column":8,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1255","line":23,"column":8,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1278","line":5,"column":10,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1277","line":16,"column":10,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1303","line":17,"column":10,"nodeType":"1240","messageId":"1241","endLine":17,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1302","line":26,"column":8,"nodeType":"1240","messageId":"1241","endLine":26,"endColumn":30},{"ruleId":"1238","severity":1,"message":"1277","line":27,"column":10,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1254","line":33,"column":8,"nodeType":"1240","messageId":"1241","endLine":33,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1279","line":58,"column":9,"nodeType":"1240","messageId":"1241","endLine":58,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1245","line":60,"column":11,"nodeType":"1240","messageId":"1241","endLine":60,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":60,"column":17,"nodeType":"1240","messageId":"1241","endLine":60,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":60,"column":34,"nodeType":"1240","messageId":"1241","endLine":60,"endColumn":45},{"ruleId":"1264","severity":1,"message":"1265","line":68,"column":28,"nodeType":"1266","messageId":"1267","endLine":68,"endColumn":30},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1315","line":8,"column":10,"nodeType":"1240","messageId":"1241","endLine":8,"endColumn":28},{"ruleId":"1238","severity":1,"message":"1316","line":11,"column":8,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1317","line":13,"column":26,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1337","line":14,"column":8,"nodeType":"1240","messageId":"1241","endLine":14,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1339","line":21,"column":8,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1282","line":25,"column":3,"nodeType":"1240","messageId":"1241","endLine":25,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1318","line":27,"column":3,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1340","line":28,"column":3,"nodeType":"1240","messageId":"1241","endLine":28,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1341","line":31,"column":3,"nodeType":"1240","messageId":"1241","endLine":31,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1277","line":37,"column":10,"nodeType":"1240","messageId":"1241","endLine":37,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1279","line":64,"column":9,"nodeType":"1240","messageId":"1241","endLine":64,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1245","line":66,"column":11,"nodeType":"1240","messageId":"1241","endLine":66,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":66,"column":17,"nodeType":"1240","messageId":"1241","endLine":66,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":66,"column":34,"nodeType":"1240","messageId":"1241","endLine":66,"endColumn":45},{"ruleId":"1238","severity":1,"message":"1324","line":73,"column":17,"nodeType":"1240","messageId":"1241","endLine":73,"endColumn":25},{"ruleId":"1291","severity":1,"message":"1292","line":115,"column":37,"nodeType":"1293","messageId":"1294","endLine":115,"endColumn":39},{"ruleId":"1295","severity":1,"message":"1332","line":119,"column":6,"nodeType":"1297","endLine":119,"endColumn":8,"suggestions":"1429"},{"ruleId":"1295","severity":1,"message":"1343","line":125,"column":6,"nodeType":"1297","endLine":125,"endColumn":11,"suggestions":"1430"},{"ruleId":"1238","severity":1,"message":"1345","line":147,"column":13,"nodeType":"1240","messageId":"1241","endLine":147,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1315","line":6,"column":10,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":28},{"ruleId":"1238","severity":1,"message":"1316","line":9,"column":8,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1317","line":11,"column":26,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1282","line":21,"column":3,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1318","line":23,"column":3,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1319","line":35,"column":8,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1277","line":36,"column":10,"nodeType":"1240","messageId":"1241","endLine":36,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1320","line":45,"column":3,"nodeType":"1240","messageId":"1241","endLine":45,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1321","line":48,"column":10,"nodeType":"1240","messageId":"1241","endLine":48,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1322","line":50,"column":8,"nodeType":"1240","messageId":"1241","endLine":50,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1279","line":73,"column":9,"nodeType":"1240","messageId":"1241","endLine":73,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1323","line":74,"column":9,"nodeType":"1240","messageId":"1241","endLine":74,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1324","line":78,"column":17,"nodeType":"1240","messageId":"1241","endLine":78,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1325","line":84,"column":10,"nodeType":"1240","messageId":"1241","endLine":84,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1326","line":86,"column":10,"nodeType":"1240","messageId":"1241","endLine":86,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1327","line":86,"column":29,"nodeType":"1240","messageId":"1241","endLine":86,"endColumn":49},{"ruleId":"1238","severity":1,"message":"1328","line":87,"column":10,"nodeType":"1240","messageId":"1241","endLine":87,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1329","line":87,"column":33,"nodeType":"1240","messageId":"1241","endLine":87,"endColumn":57},{"ruleId":"1238","severity":1,"message":"1330","line":88,"column":10,"nodeType":"1240","messageId":"1241","endLine":88,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1331","line":88,"column":27,"nodeType":"1240","messageId":"1241","endLine":88,"endColumn":45},{"ruleId":"1291","severity":1,"message":"1292","line":99,"column":37,"nodeType":"1293","messageId":"1294","endLine":99,"endColumn":39},{"ruleId":"1295","severity":1,"message":"1332","line":114,"column":6,"nodeType":"1297","endLine":114,"endColumn":8,"suggestions":"1431"},{"ruleId":"1238","severity":1,"message":"1334","line":151,"column":9,"nodeType":"1240","messageId":"1241","endLine":151,"endColumn":23},{"ruleId":"1238","severity":1,"message":"1247","line":1,"column":17,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1251","line":5,"column":3,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1256","line":8,"column":3,"nodeType":"1240","messageId":"1241","endLine":8,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1253","line":10,"column":3,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":6},{"ruleId":"1238","severity":1,"message":"1257","line":12,"column":3,"nodeType":"1240","messageId":"1241","endLine":12,"endColumn":10},{"ruleId":"1238","severity":1,"message":"1258","line":16,"column":3,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1259","line":17,"column":3,"nodeType":"1240","messageId":"1241","endLine":17,"endColumn":9},{"ruleId":"1238","severity":1,"message":"1260","line":19,"column":3,"nodeType":"1240","messageId":"1241","endLine":19,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1261","line":24,"column":10,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":23},{"ruleId":"1238","severity":1,"message":"1254","line":35,"column":8,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1262","line":36,"column":8,"nodeType":"1240","messageId":"1241","endLine":36,"endColumn":15},{"ruleId":"1349","severity":1,"message":"1350","line":80,"column":42,"nodeType":"1293","messageId":"1351","endLine":80,"endColumn":43},{"ruleId":"1238","severity":1,"message":"1277","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1318","line":5,"column":3,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1251","line":6,"column":3,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1282","line":7,"column":3,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1256","line":9,"column":3,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1253","line":11,"column":3,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":6},{"ruleId":"1238","severity":1,"message":"1283","line":13,"column":3,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1284","line":23,"column":10,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":18},{"ruleId":"1238","severity":1,"message":"1285","line":23,"column":20,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":24},{"ruleId":"1295","severity":1,"message":"1332","line":71,"column":6,"nodeType":"1297","endLine":71,"endColumn":8,"suggestions":"1432"},{"ruleId":"1295","severity":1,"message":"1347","line":89,"column":6,"nodeType":"1297","endLine":89,"endColumn":75,"suggestions":"1433"},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1316","line":7,"column":8,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1352","line":21,"column":3,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1277","line":26,"column":10,"nodeType":"1240","messageId":"1241","endLine":26,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1254","line":27,"column":8,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":13},{"ruleId":"1264","severity":1,"message":"1265","line":60,"column":28,"nodeType":"1266","messageId":"1267","endLine":60,"endColumn":30},{"ruleId":"1238","severity":1,"message":"1277","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1251","line":6,"column":3,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1282","line":7,"column":3,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1256","line":9,"column":3,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1283","line":13,"column":3,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1336","line":14,"column":3,"nodeType":"1240","messageId":"1241","endLine":14,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1337","line":23,"column":8,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1317","line":24,"column":26,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1324","line":49,"column":17,"nodeType":"1240","messageId":"1241","endLine":49,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1325","line":54,"column":10,"nodeType":"1240","messageId":"1241","endLine":54,"endColumn":19},{"ruleId":"1295","severity":1,"message":"1332","line":78,"column":6,"nodeType":"1297","endLine":78,"endColumn":8,"suggestions":"1434"},{"ruleId":"1238","severity":1,"message":"1335","line":1,"column":27,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":36},{"ruleId":"1238","severity":1,"message":"1277","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1251","line":6,"column":3,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1282","line":7,"column":3,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1256","line":9,"column":3,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1283","line":13,"column":3,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1336","line":14,"column":3,"nodeType":"1240","messageId":"1241","endLine":14,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1337","line":23,"column":8,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1317","line":24,"column":26,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1262","line":26,"column":8,"nodeType":"1240","messageId":"1241","endLine":26,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1324","line":46,"column":17,"nodeType":"1240","messageId":"1241","endLine":46,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1325","line":51,"column":10,"nodeType":"1240","messageId":"1241","endLine":51,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1317","line":6,"column":26,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1356","line":14,"column":29,"nodeType":"1240","messageId":"1241","endLine":14,"endColumn":33},{"ruleId":"1238","severity":1,"message":"1277","line":17,"column":10,"nodeType":"1240","messageId":"1241","endLine":17,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1354","line":23,"column":8,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1279","line":28,"column":9,"nodeType":"1240","messageId":"1241","endLine":28,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1245","line":30,"column":11,"nodeType":"1240","messageId":"1241","endLine":30,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":30,"column":17,"nodeType":"1240","messageId":"1241","endLine":30,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":30,"column":34,"nodeType":"1240","messageId":"1241","endLine":30,"endColumn":45},{"ruleId":"1238","severity":1,"message":"1324","line":32,"column":17,"nodeType":"1240","messageId":"1241","endLine":32,"endColumn":25},{"ruleId":"1295","severity":1,"message":"1357","line":62,"column":6,"nodeType":"1297","endLine":62,"endColumn":8,"suggestions":"1435"},{"ruleId":"1238","severity":1,"message":"1345","line":79,"column":13,"nodeType":"1240","messageId":"1241","endLine":79,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1278","line":5,"column":10,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1255","line":10,"column":8,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1353","line":11,"column":8,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":23},{"ruleId":"1238","severity":1,"message":"1282","line":17,"column":3,"nodeType":"1240","messageId":"1241","endLine":17,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1257","line":18,"column":3,"nodeType":"1240","messageId":"1241","endLine":18,"endColumn":10},{"ruleId":"1238","severity":1,"message":"1305","line":24,"column":3,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1352","line":26,"column":3,"nodeType":"1240","messageId":"1241","endLine":26,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1306","line":27,"column":3,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1307","line":28,"column":3,"nodeType":"1240","messageId":"1241","endLine":28,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1308","line":29,"column":3,"nodeType":"1240","messageId":"1241","endLine":29,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1309","line":33,"column":8,"nodeType":"1240","messageId":"1241","endLine":33,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1354","line":36,"column":8,"nodeType":"1240","messageId":"1241","endLine":36,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1263","line":39,"column":10,"nodeType":"1240","messageId":"1241","endLine":39,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1355","line":41,"column":7,"nodeType":"1240","messageId":"1241","endLine":41,"endColumn":13},{"ruleId":"1264","severity":1,"message":"1265","line":77,"column":28,"nodeType":"1266","messageId":"1267","endLine":77,"endColumn":30},{"ruleId":"1238","severity":1,"message":"1301","line":3,"column":10,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1316","line":7,"column":8,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1255","line":10,"column":8,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1282","line":16,"column":3,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1352","line":21,"column":3,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1277","line":26,"column":10,"nodeType":"1240","messageId":"1241","endLine":26,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1254","line":27,"column":8,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1371","line":77,"column":22,"nodeType":"1240","messageId":"1241","endLine":77,"endColumn":35},{"ruleId":"1238","severity":1,"message":"1372","line":78,"column":10,"nodeType":"1240","messageId":"1241","endLine":78,"endColumn":15},{"ruleId":"1264","severity":1,"message":"1265","line":86,"column":28,"nodeType":"1266","messageId":"1267","endLine":86,"endColumn":30},{"ruleId":"1291","severity":1,"message":"1292","line":108,"column":24,"nodeType":"1293","messageId":"1294","endLine":108,"endColumn":26},{"ruleId":"1349","severity":1,"message":"1350","line":190,"column":51,"nodeType":"1293","messageId":"1351","endLine":190,"endColumn":52},{"ruleId":"1238","severity":1,"message":"1317","line":5,"column":26,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1356","line":12,"column":54,"nodeType":"1240","messageId":"1241","endLine":12,"endColumn":58},{"ruleId":"1238","severity":1,"message":"1277","line":15,"column":10,"nodeType":"1240","messageId":"1241","endLine":15,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1354","line":21,"column":8,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1359","line":24,"column":97,"nodeType":"1240","messageId":"1241","endLine":24,"endColumn":121},{"ruleId":"1238","severity":1,"message":"1279","line":43,"column":9,"nodeType":"1240","messageId":"1241","endLine":43,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1245","line":45,"column":11,"nodeType":"1240","messageId":"1241","endLine":45,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":45,"column":17,"nodeType":"1240","messageId":"1241","endLine":45,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":45,"column":34,"nodeType":"1240","messageId":"1241","endLine":45,"endColumn":45},{"ruleId":"1238","severity":1,"message":"1324","line":47,"column":17,"nodeType":"1240","messageId":"1241","endLine":47,"endColumn":25},{"ruleId":"1291","severity":1,"message":"1292","line":72,"column":37,"nodeType":"1293","messageId":"1294","endLine":72,"endColumn":39},{"ruleId":"1264","severity":1,"message":"1265","line":81,"column":33,"nodeType":"1266","messageId":"1267","endLine":81,"endColumn":35},{"ruleId":"1295","severity":1,"message":"1332","line":108,"column":6,"nodeType":"1297","endLine":108,"endColumn":8,"suggestions":"1436"},{"ruleId":"1295","severity":1,"message":"1361","line":119,"column":6,"nodeType":"1297","endLine":119,"endColumn":11,"suggestions":"1437"},{"ruleId":"1295","severity":1,"message":"1363","line":127,"column":6,"nodeType":"1297","endLine":127,"endColumn":25,"suggestions":"1438"},{"ruleId":"1264","severity":1,"message":"1265","line":135,"column":46,"nodeType":"1266","messageId":"1267","endLine":135,"endColumn":48},{"ruleId":"1238","severity":1,"message":"1345","line":145,"column":13,"nodeType":"1240","messageId":"1241","endLine":145,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1356","line":6,"column":3,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":7},{"ruleId":"1238","severity":1,"message":"1282","line":10,"column":3,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1317","line":13,"column":26,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1277","line":23,"column":10,"nodeType":"1240","messageId":"1241","endLine":23,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1322","line":27,"column":8,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1279","line":49,"column":9,"nodeType":"1240","messageId":"1241","endLine":49,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1245","line":51,"column":11,"nodeType":"1240","messageId":"1241","endLine":51,"endColumn":15},{"ruleId":"1238","severity":1,"message":"1280","line":51,"column":17,"nodeType":"1240","messageId":"1241","endLine":51,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1281","line":51,"column":34,"nodeType":"1240","messageId":"1241","endLine":51,"endColumn":45},{"ruleId":"1238","severity":1,"message":"1324","line":53,"column":17,"nodeType":"1240","messageId":"1241","endLine":53,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1325","line":56,"column":10,"nodeType":"1240","messageId":"1241","endLine":56,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1365","line":62,"column":10,"nodeType":"1240","messageId":"1241","endLine":62,"endColumn":18},{"ruleId":"1238","severity":1,"message":"1366","line":62,"column":20,"nodeType":"1240","messageId":"1241","endLine":62,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1367","line":63,"column":10,"nodeType":"1240","messageId":"1241","endLine":63,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1368","line":63,"column":22,"nodeType":"1240","messageId":"1241","endLine":63,"endColumn":35},{"ruleId":"1238","severity":1,"message":"1326","line":64,"column":10,"nodeType":"1240","messageId":"1241","endLine":64,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1327","line":64,"column":29,"nodeType":"1240","messageId":"1241","endLine":64,"endColumn":49},{"ruleId":"1291","severity":1,"message":"1292","line":68,"column":37,"nodeType":"1293","messageId":"1294","endLine":68,"endColumn":39},{"ruleId":"1295","severity":1,"message":"1369","line":81,"column":6,"nodeType":"1297","endLine":81,"endColumn":8,"suggestions":"1439"},{"ruleId":"1238","severity":1,"message":"1394","line":10,"column":39,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":43},{"ruleId":"1238","severity":1,"message":"1395","line":27,"column":10,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":22},{"ruleId":"1396","severity":1,"message":"1397","line":43,"column":30,"nodeType":"1266","messageId":"1398","endLine":69,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1399","line":4,"column":8,"nodeType":"1240","messageId":"1241","endLine":4,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1400","line":5,"column":8,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":18},{"ruleId":"1238","severity":1,"message":"1394","line":21,"column":8,"nodeType":"1240","messageId":"1241","endLine":21,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1310","line":35,"column":9,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1301","line":4,"column":10,"nodeType":"1240","messageId":"1241","endLine":4,"endColumn":16},{"ruleId":"1373","severity":1,"message":"1374","line":21,"column":11,"nodeType":"1375","endLine":21,"endColumn":59},{"ruleId":"1238","severity":1,"message":"1389","line":9,"column":21,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1253","line":9,"column":33,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":36},{"ruleId":"1390","severity":1,"message":"1391","line":42,"column":5,"nodeType":"1392","messageId":"1294","endLine":42,"endColumn":15},{"ruleId":"1390","severity":1,"message":"1393","line":102,"column":3,"nodeType":"1392","messageId":"1294","endLine":102,"endColumn":8},{"ruleId":"1390","severity":1,"message":"1393","line":103,"column":3,"nodeType":"1392","messageId":"1294","endLine":103,"endColumn":8},{"ruleId":"1238","severity":1,"message":"1325","line":10,"column":10,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":19},{"ruleId":"1238","severity":1,"message":"1394","line":10,"column":72,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":76},{"ruleId":"1238","severity":1,"message":"1395","line":27,"column":10,"nodeType":"1240","messageId":"1241","endLine":27,"endColumn":22},{"ruleId":"1396","severity":1,"message":"1397","line":55,"column":30,"nodeType":"1266","messageId":"1398","endLine":67,"endColumn":12},{"ruleId":"1238","severity":1,"message":"1280","line":20,"column":17,"nodeType":"1240","messageId":"1241","endLine":20,"endColumn":32},{"ruleId":"1238","severity":1,"message":"1386","line":20,"column":34,"nodeType":"1240","messageId":"1241","endLine":20,"endColumn":38},{"ruleId":"1373","severity":1,"message":"1374","line":56,"column":17,"nodeType":"1375","endLine":56,"endColumn":70},{"ruleId":"1373","severity":1,"message":"1374","line":103,"column":17,"nodeType":"1375","endLine":103,"endColumn":68},{"ruleId":"1238","severity":1,"message":"1387","line":2,"column":8,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1388","line":3,"column":8,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1286","line":4,"column":10,"nodeType":"1240","messageId":"1241","endLine":4,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1243","line":4,"column":23,"nodeType":"1240","messageId":"1241","endLine":4,"endColumn":34},{"ruleId":"1238","severity":1,"message":"1379","line":5,"column":10,"nodeType":"1240","messageId":"1241","endLine":5,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1318","line":1,"column":10,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1406","line":11,"column":9,"nodeType":"1240","messageId":"1241","endLine":11,"endColumn":23},{"ruleId":"1238","severity":1,"message":"1407","line":12,"column":9,"nodeType":"1240","messageId":"1241","endLine":12,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1408","line":35,"column":9,"nodeType":"1240","messageId":"1241","endLine":35,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1409","line":36,"column":9,"nodeType":"1240","messageId":"1241","endLine":36,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1401","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1402","line":2,"column":26,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":38},{"ruleId":"1238","severity":1,"message":"1403","line":2,"column":40,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":49},{"ruleId":"1238","severity":1,"message":"1401","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1402","line":2,"column":26,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":38},{"ruleId":"1238","severity":1,"message":"1404","line":2,"column":40,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":49},{"ruleId":"1238","severity":1,"message":"1405","line":2,"column":51,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":60},{"ruleId":"1238","severity":1,"message":"1402","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1402","line":2,"column":21,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":33},{"ruleId":"1238","severity":1,"message":"1403","line":2,"column":35,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":44},{"ruleId":"1238","severity":1,"message":"1247","line":1,"column":16,"nodeType":"1240","messageId":"1241","endLine":1,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1410","line":3,"column":22,"nodeType":"1240","messageId":"1241","endLine":3,"endColumn":35},{"ruleId":"1238","severity":1,"message":"1411","line":6,"column":8,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":17},{"ruleId":"1238","severity":1,"message":"1401","line":7,"column":10,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1402","line":7,"column":26,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":38},{"ruleId":"1238","severity":1,"message":"1403","line":7,"column":40,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":49},{"ruleId":"1238","severity":1,"message":"1412","line":7,"column":51,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":60},{"ruleId":"1238","severity":1,"message":"1413","line":7,"column":62,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":72},{"ruleId":"1238","severity":1,"message":"1414","line":7,"column":74,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":85},{"ruleId":"1238","severity":1,"message":"1301","line":8,"column":10,"nodeType":"1240","messageId":"1241","endLine":8,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1354","line":9,"column":8,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":27},{"ruleId":"1238","severity":1,"message":"1401","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1402","line":2,"column":26,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":38},{"ruleId":"1238","severity":1,"message":"1403","line":2,"column":40,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":49},{"ruleId":"1238","severity":1,"message":"1401","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1402","line":2,"column":26,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":38},{"ruleId":"1238","severity":1,"message":"1403","line":2,"column":40,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":49},{"ruleId":"1238","severity":1,"message":"1415","line":2,"column":8,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1416","line":10,"column":10,"nodeType":"1240","messageId":"1241","endLine":10,"endColumn":22},{"ruleId":"1238","severity":1,"message":"1417","line":31,"column":9,"nodeType":"1240","messageId":"1241","endLine":31,"endColumn":16},{"ruleId":"1291","severity":1,"message":"1292","line":60,"column":30,"nodeType":"1293","messageId":"1294","endLine":60,"endColumn":32},{"ruleId":"1418","severity":1,"message":"1419","line":95,"column":23,"nodeType":"1420","messageId":"1421","endLine":114,"endColumn":24},{"ruleId":"1291","severity":1,"message":"1292","line":96,"column":37,"nodeType":"1293","messageId":"1294","endLine":96,"endColumn":39},{"ruleId":"1422","severity":1,"message":"1423","line":96,"column":53,"nodeType":"1424","messageId":"1425","endLine":96,"endColumn":55},{"ruleId":"1291","severity":1,"message":"1292","line":96,"column":65,"nodeType":"1293","messageId":"1294","endLine":96,"endColumn":67},{"ruleId":"1422","severity":1,"message":"1423","line":96,"column":70,"nodeType":"1424","messageId":"1425","endLine":96,"endColumn":72},{"ruleId":"1291","severity":1,"message":"1426","line":96,"column":82,"nodeType":"1293","messageId":"1294","endLine":96,"endColumn":84},{"ruleId":"1291","severity":1,"message":"1292","line":100,"column":40,"nodeType":"1293","messageId":"1294","endLine":100,"endColumn":42},{"ruleId":"1291","severity":1,"message":"1426","line":100,"column":74,"nodeType":"1293","messageId":"1294","endLine":100,"endColumn":76},{"ruleId":"1291","severity":1,"message":"1292","line":105,"column":42,"nodeType":"1293","messageId":"1294","endLine":105,"endColumn":44},{"ruleId":"1291","severity":1,"message":"1426","line":105,"column":78,"nodeType":"1293","messageId":"1294","endLine":105,"endColumn":80},{"ruleId":"1291","severity":1,"message":"1426","line":127,"column":34,"nodeType":"1293","messageId":"1294","endLine":127,"endColumn":36},{"ruleId":"1238","severity":1,"message":"1277","line":2,"column":10,"nodeType":"1240","messageId":"1241","endLine":2,"endColumn":14},{"ruleId":"1238","severity":1,"message":"1376","line":4,"column":10,"nodeType":"1240","messageId":"1241","endLine":4,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1377","line":6,"column":8,"nodeType":"1240","messageId":"1241","endLine":6,"endColumn":13},{"ruleId":"1238","severity":1,"message":"1301","line":7,"column":10,"nodeType":"1240","messageId":"1241","endLine":7,"endColumn":16},{"ruleId":"1238","severity":1,"message":"1378","line":9,"column":10,"nodeType":"1240","messageId":"1241","endLine":9,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1286","line":12,"column":10,"nodeType":"1240","messageId":"1241","endLine":12,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1243","line":12,"column":23,"nodeType":"1240","messageId":"1241","endLine":12,"endColumn":34},{"ruleId":"1238","severity":1,"message":"1379","line":13,"column":10,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":20},{"ruleId":"1238","severity":1,"message":"1380","line":13,"column":22,"nodeType":"1240","messageId":"1241","endLine":13,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1352","line":16,"column":16,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":21},{"ruleId":"1238","severity":1,"message":"1381","line":16,"column":23,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1382","line":16,"column":31,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":35},{"ruleId":"1238","severity":1,"message":"1383","line":16,"column":37,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":45},{"ruleId":"1238","severity":1,"message":"1384","line":16,"column":47,"nodeType":"1240","messageId":"1241","endLine":16,"endColumn":55},{"ruleId":"1238","severity":1,"message":"1385","line":17,"column":8,"nodeType":"1240","messageId":"1241","endLine":17,"endColumn":29},{"ruleId":"1373","severity":1,"message":"1374","line":39,"column":17,"nodeType":"1375","endLine":39,"endColumn":61},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'useDispatch' is defined but never used.","'Route' is defined but never used.","'user' is assigned a value but never used.","'PDFReader' is defined but never used.","'useState' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'OutlinedInput' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'Box' is defined but never used.","'axios' is defined but never used.","'CustomizedButtons' is defined but never used.","'Container' is defined but never used.","'Divider' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'ListItemButton' is defined but never used.","'BiCheckCircle' is defined but never used.","'Loading' is defined but never used.","'getTeamsByProfessor' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'CSVReader' is defined but never used.","'buttonRef' is assigned a value but never used.","'newCourse' is assigned a value but never used.","'setNewCourse' is assigned a value but never used.","'isPublishing' is assigned a value but never used.","'setIsPublishing' is assigned a value but never used.","'json_' is assigned a value but never used.","'TiDelete' is defined but never used.","'CircularProgress' is defined but never used.","'Link' is defined but never used.","'MdOutlineCancel' is defined but never used.","'dispatch' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'authLoading' is assigned a value but never used.","'CardHeader' is defined but never used.","'Radio' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'useSelector' is defined but never used.","'CustomizedRadios' is defined but never used.","'AssignmentViewer' is defined but never used.","'ConsoleView' is defined but never used.","'disablePublishBtn' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.state.assignment', 'peerReviewPdfFile.length', 'solutionPdfFile.length', and 'title'. Either include them or remove the dependency array.","ArrayExpression",["1440"],"React Hook useEffect has a missing dependency: 'location.state.courseID'. Either include it or remove the dependency array. If 'setNewAssignment' needs the current value of 'location.state.courseID', you can also switch to useReducer instead of useState and read 'location.state.courseID' in the reducer.",["1441"],"'styled' is defined but never used.","'SuccessfulNotification' is defined but never used.","'withStyles' is defined but never used.","'MdTurnedInNot' is defined but never used.","'ListItemIcon' is defined but never used.","'TextField' is defined but never used.","'Modal' is defined but never used.","'Fade' is defined but never used.","'Backdrop' is defined but never used.","'classes' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'BsArrowRightCircle' is defined but never used.","'FiberManualRecordIcon' is defined but never used.","'pdfjs' is defined but never used.","'Grid' is defined but never used.","'CustomizedTables' is defined but never used.","'postNewPeerReviewByStudent' is defined but never used.","'GrDocumentMissing' is defined but never used.","'CustomizedPdfUploader' is defined but never used.","'getUser' is assigned a value but never used.","'setScale' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'submissionPdfFile' is assigned a value but never used.","'setSubmissionPdfFile' is assigned a value but never used.","'peerReviewPdfFileName' is assigned a value but never used.","'setPeerReviewPdfFileName' is assigned a value but never used.","'submissionArray' is assigned a value but never used.","'setSubmissionArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.state.assignmentID'. Either include it or remove the dependency array.",["1442"],"'handleReupload' is assigned a value but never used.","'useEffect' is defined but never used.","'autocompleteClasses' is defined but never used.","'PDFControlBar' is defined but never used.",["1443"],"'CustomizedTabs' is defined but never used.","'IconButton' is defined but never used.","'ListItemText' is defined but never used.",["1444"],"React Hook useEffect has a missing dependency: 'assignment'. Either include it or remove the dependency array.",["1445"],"'json' is assigned a value but never used.",["1446"],"React Hook useEffect has missing dependencies: 'assignment', 'location.state.courseID', 'peerReviewPdfFileName', and 'solutionPdfFileName'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNewAssignment' needs the current value of 'assignment'.",["1447"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Stack' is defined but never used.","'CustomizedModal' is defined but never used.","'CustomizedTextField' is defined but never used.","'styles' is assigned a value but never used.","'List' is defined but never used.","React Hook useEffect has a missing dependency: 'location.state.assignment'. Either include it or remove the dependency array. If 'setAssignment' needs the current value of 'location.state.assignment', you can also switch to useReducer instead of useState and read 'location.state.assignment' in the reducer.",["1448"],"'postNewSolutionByStudent' is defined but never used.",["1449"],"React Hook useEffect has missing dependencies: 'peerReviewInfo' and 'submissionArray'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setScore' needs the current value of 'submissionArray'.",["1450"],"React Hook useEffect has missing dependencies: 'submissionArray', 'submissionPdfFileName', and 'tab'. Either include them or remove the dependency array.",["1451"],"'comments' is assigned a value but never used.","'setComments' is assigned a value but never used.","'assignment' is assigned a value but never used.","'setAssignment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state.assignmentID' and 'peerReviewResult'. Either include them or remove the dependency array.",["1452"],"'setFilterType' is assigned a value but never used.","'items' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeStyles' is defined but never used.","'Badge' is defined but never used.","'AiOutlinePlusCircle' is defined but never used.","'selectUser' is defined but never used.","'setUser' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Collapse' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'role' is assigned a value but never used.","'https' is defined but never used.","'React' is defined but never used.","'Typography' is defined but never used.","no-dupe-keys","Duplicate key 'fontWeight'.","ObjectExpression","Duplicate key 'type1'.","'rest' is assigned a value but never used.","'pdfFileError' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'arrayPdfFiles', 'arrayPdfFiles', 'arrayPdfFiles'.","unsafeRefs","'PropTypes' is defined but never used.","'classNames' is defined but never used.","'secondaryColor' is defined but never used.","'primaryColor' is defined but never used.","'darkColor' is defined but never used.","'fontColor' is defined but never used.","'grayColor' is defined but never used.","'firstPageClass' is assigned a value but never used.","'lastPageClass' is assigned a value but never used.","'zoomOutClass' is assigned a value but never used.","'zoomInClass' is assigned a value but never used.","'useRadioGroup' is defined but never used.","'FormLabel' is defined but never used.","'blueColor' is defined but never used.","'greenColor' is defined but never used.","'purpleColor' is defined but never used.","'Paper' is defined but never used.","'borderRadius' is defined but never used.","'label_2' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Expected '!==' and instead saw '!='.",["1453"],["1454"],["1455"],["1456"],["1457"],["1458"],["1459"],["1460"],["1461"],["1462"],["1463"],["1464"],["1465"],{"desc":"1466","fix":"1467"},{"desc":"1468","fix":"1469"},{"desc":"1470","fix":"1471"},{"desc":"1470","fix":"1472"},{"desc":"1470","fix":"1473"},{"desc":"1474","fix":"1475"},{"desc":"1470","fix":"1476"},{"desc":"1477","fix":"1478"},{"desc":"1479","fix":"1480"},{"desc":"1470","fix":"1481"},{"desc":"1482","fix":"1483"},{"desc":"1484","fix":"1485"},{"desc":"1486","fix":"1487"},{"desc":"1466","fix":"1488"},{"desc":"1468","fix":"1489"},{"desc":"1470","fix":"1490"},{"desc":"1474","fix":"1491"},{"desc":"1470","fix":"1492"},{"desc":"1470","fix":"1493"},{"desc":"1477","fix":"1494"},{"desc":"1470","fix":"1495"},{"desc":"1479","fix":"1496"},{"desc":"1470","fix":"1497"},{"desc":"1482","fix":"1498"},{"desc":"1484","fix":"1499"},{"desc":"1486","fix":"1500"},"Update the dependencies array to be: [location.state.assignment, peerReviewPdfFile.length, solutionPdfFile.length, title]",{"range":"1501","text":"1502"},"Update the dependencies array to be: [title, solutionPdfFile, peerReviewPdfFile, solutionPdfFileName, peerReviewPdfFileName, solutionDueDate, prDueDate, location.state.courseID]",{"range":"1503","text":"1504"},"Update the dependencies array to be: [location.state.assignmentID]",{"range":"1505","text":"1506"},{"range":"1507","text":"1506"},{"range":"1508","text":"1506"},"Update the dependencies array to be: [assignment, tab]",{"range":"1509","text":"1510"},{"range":"1511","text":"1506"},"Update the dependencies array to be: [title, solutionPdfDoc, peerReviewPdfDoc, solutionDueDate, prDueDate, assignment, location.state.courseID, solutionPdfFileName, peerReviewPdfFileName]",{"range":"1512","text":"1513"},"Update the dependencies array to be: [location.state.assignment]",{"range":"1514","text":"1515"},{"range":"1516","text":"1506"},"Update the dependencies array to be: [peerReviewInfo, submissionArray, tab]",{"range":"1517","text":"1518"},"Update the dependencies array to be: [submissionArray, submissionPdfFile, submissionPdfFileName, tab]",{"range":"1519","text":"1520"},"Update the dependencies array to be: [location.state.assignmentID, peerReviewResult]",{"range":"1521","text":"1522"},{"range":"1523","text":"1502"},{"range":"1524","text":"1504"},{"range":"1525","text":"1506"},{"range":"1526","text":"1510"},{"range":"1527","text":"1506"},{"range":"1528","text":"1506"},{"range":"1529","text":"1513"},{"range":"1530","text":"1506"},{"range":"1531","text":"1515"},{"range":"1532","text":"1506"},{"range":"1533","text":"1518"},{"range":"1534","text":"1520"},{"range":"1535","text":"1522"},[2896,2898],"[location.state.assignment, peerReviewPdfFile.length, solutionPdfFile.length, title]",[3479,3592],"[title, solutionPdfFile, peerReviewPdfFile, solutionPdfFileName, peerReviewPdfFileName, solutionDueDate, prDueDate, location.state.courseID]",[4075,4077],"[location.state.assignmentID]",[2408,2410],[4210,4212],[4435,4440],"[assignment, tab]",[2784,2786],[3362,3431],"[title, solutionPdfDoc, peerReviewPdfDoc, solutionDueDate, prDueDate, assignment, location.state.courseID, solutionPdfFileName, peerReviewPdfFileName]",[2493,2495],"[location.state.assignment]",[4075,4077],[4412,4417],"[peerReviewInfo, submissionArray, tab]",[4638,4657],"[submissionArray, submissionPdfFile, submissionPdfFileName, tab]",[2809,2811],"[location.state.assignmentID, peerReviewResult]",[2896,2898],[3479,3592],[4210,4212],[4435,4440],[4075,4077],[2784,2786],[3362,3431],[2408,2410],[2493,2495],[4075,4077],[4412,4417],[4638,4657],[2809,2811]]